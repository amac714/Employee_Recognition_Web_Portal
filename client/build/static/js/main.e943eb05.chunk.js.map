{"version":3,"sources":["components/userLogin.js","components/header.js","components/adminLogin.js","components/error.js","components/home.js","components/adminViewUsers.js","components/userCreateAward.js","components/userViewGivenAwards.js","components/sideViewComponents/date.js","components/sideViewComponents/stats.js","components/sideViewComponents/userAccountInfo.js","components/updateUserInfo.js","components/userHomePage.js","components/adminViewAdmins.js","components/sideViewComponents/reports.js","components/adminDashboard.js","components/createAdmin.js","components/editAdmin.js","components/createUser.js","components/editUser.js","components/resetPassword.js","App.js","index.js"],"names":["UserLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","state","username","password","axios","post","then","res","setState","userToken","data","access_token","id","localStorage","setItem","first_name","last_name","props","history","push","catch","error","console","log","visible","validUN","validPW","onChange","_this$setState","defineProperty","target","name","value","onDismiss","react_default","a","createElement","className","Container","Alert","color","isOpen","toggle","Col","sm","md","size","offset","Form","onSubmit","FormGroup","Input","type","invalid","placeholder","FormFeedback","Button","block","Link","to","Component","Header","logout","removeItem","item","path","location","pathname","Nav","navbar","NavItem","NavLink","tag","onClick","Navbar","expand","NavbarBrand","withRouter","AdminLogin","login","err","ErrorPage","HomePage","textTitle","_this2","get","msg","ViewUsers","getUsers","config","users","deleteUser","delete","concat","renderUsers","_ref","user_name","edit","key","scope","aria-hidden","href","style","headers","Authorization","getItem","Table","responsive","sort","b","map","UserCreateAward","sendAward","submitAward","award_type","time_granted","date_granted","cancelEntry","row","Label","Row","UserViewMyAwards","deleteAward","confirmDeletion","show_buttons","cancelDelete","getAwardData","time_of_day","recipient_first_name","recipient_last_name","hour","substr","time_given","year","day_month","month","day_of_the_week","date_given","parseInt","awards","Date","date","currentDay","currentDate","Stats","awardData","employeeOfTheWeek","employeeOfTheMonth","numberOfAwardsGiven","UserAccountInfo","currentUserData","UpdateUserInfo","confirmNonEmptyFields","updateAccount","_this$state","length","bind","assertThisInitialized","currentData","xs","cancelInput","UserHomePage","getUser","getAwards","weekAwardCount","monthAwardCount","forEach","awardDataCopy","renderPage","changeDisplay","displayType","patch","getDay","today","getMonth","getDate","getFullYear","dateData","displayPage","displayAwardData","display","userCreateAward","clearForm","sent","userViewGivenAwards","updateUserInfo","fluid","userAccountInfo","stats","ViewAdmins","getAdmins","admin_id","admins","deleteAdmin","renderAdmins","admin_name","Reports","totalGrantedAwardsReport","labels","dataset","i","grantedAwards","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","es","options","scales","yAxes","ticks","beginAtZero","totalAwardsWonReport","withMostAwards","weeklyAwardsGranted","granted","grantedMostWeek","weeklyAwardsReceived","received","mostWeekAwards","monthlyAwardsGranted","grantedMostMonth","monthlyAwardsReceived","mostMonthAwards","generalStats","totalUser","totalAdmin","totalsReport","awardsReceivedReport","awardsGrantedReport","RunReport","option","totalEmpWk","totalEmpMt","load","token","totalEmpWeek","totalEmpMonth","userGrantedMostAwards","total","week","userWithMostAwards","AdminDashboard","handleClick","button","buttonPressed","renderComponent","adminViewUsers","adminViewAdmins","reports","from","CreateAdmin","confirmPW","validate","invalidAdmin","errorMsg","invalidPW","window","setTimeout","EditAdmin","getAdmin","saveEdit","CreateUser","onImageChange","reader","FileReader","file","files","onloadend","sig","previewSig","result","invalidSig","readAsDataURL","invalidUsername","formData","FormData","append","_this$state2","$previewSig","alt","src","height","width","method","EditUser","invalidEmail","ResetPassword","confirm","put","createHistory","App","Router","header","Switch","Route","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e943eb05.chunk.js","sourcesContent":["/*\n * Description: The page where the user logs in. User will be directed to home screen upon successful login.\n * */\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {\n    Alert,\n    Container,\n    Button,\n    Form,\n    FormGroup,\n    FormFeedback,\n    Input,\n    Col,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass UserLogin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            username: '',\n            password: '',\n            userToken: '',\n            id: null,\n            visible: false,\n            validUN: null,\n            validPW: null,\n        };\n    }\n\n    /*\n     * Description: Handles form input when user attempts to login by sending input username/password to server endpoint.\n     * */\n    handleSubmit = e => {\n        e.preventDefault();\n        if (this.state.username !== '' && this.state.password !== '') {\n            axios\n                .post('/user/login', {\n                    username: this.state.username,\n                    password: this.state.password,\n                })\n                //successful login attempt\n                .then(res => {\n                    this.setState({userToken: res.data.access_token, id: res.data.id});\n                    localStorage.setItem('username', this.state.username); //store username\n                    localStorage.setItem('access_token', this.state.userToken); //store user's generated token\n                    localStorage.setItem('id', this.state.id);\n                    localStorage.setItem('password', this.state.password);\n                    localStorage.setItem('first_name', this.state.first_name);\n                    localStorage.setItem('last_name', this.state.last_name);\n\n                    this.props.history.push('/userHomePage'); //route to user homepage\n                })\n\n                //unsuccesfful login attempt\n                .catch(error => {\n                    console.log(error);\n                    this.setState({visible: true});\n                });\n        } else if (this.state.username === '') {\n            this.setState({validUN: true});\n        } else if (this.state.password === '') {\n            this.setState({validPW: true});\n        }\n    };\n\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            validPW: this.state.validPW ? false : null,\n            validUN: this.state.validUN ? false : null,\n        });\n    };\n\n    // Closes alert, clears form\n    onDismiss = () => {\n        this.setState({\n            visible: false,\n            username: '',\n            password: '',\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"userSigninPage\">\n                <Container>\n                    <div>\n                        <Alert\n                            className=\"form--alert\"\n                            color=\"danger\"\n                            isOpen={this.state.visible}\n                            toggle={this.onDismiss}\n                        >\n                            Username or password is incorrect!\n                        </Alert>\n                    </div>\n                    <div className=\"login--form\">\n                        <div className=\"login--inner\">\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                <h1 className=\"login--title\">Sign In</h1>\n                            </Col>\n                            <Form onSubmit={this.handleSubmit}>\n                                <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                    <FormGroup>\n                                        <Input\n                                            type=\"text\"\n                                            name=\"username\"\n                                            invalid={this.state.validUN}\n                                            className=\"input--form\"\n                                            id=\"user_id\"\n                                            placeholder=\"Username\"\n                                            value={this.state.username}\n                                            onChange={this.onChange}\n                                        />\n                                        <FormFeedback invalid=\"true\">\n                                            You must enter a username!\n                                        </FormFeedback>\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                    <FormGroup>\n                                        <Input\n                                            type=\"password\"\n                                            name=\"password\"\n                                            invalid={this.state.validPW}\n                                            className=\"input--form\"\n                                            id=\"pw_id\"\n                                            placeholder=\"Password\"\n                                            value={this.state.password}\n                                            onChange={this.onChange}\n                                        />\n                                        <FormFeedback invalid=\"true\">\n                                            You must enter a password\n                                        </FormFeedback>\n                                    </FormGroup>\n                                </Col>\n                                <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                    <Button color=\"primary\" block className=\"input--form\">\n                                        Login\n                                    </Button>\n                                </Col>\n                            </Form>\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                <Link to=\"resetPassword\" className=\"reset-pw\">Reset Password?</Link>\n                            </Col>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default UserLogin;\n","/*\n * Description: Navigation Bar component\n */\n\nimport React, { Component } from 'react';\nimport { Nav, NavItem, Navbar, NavbarBrand, NavLink } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Header extends Component {\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('access_token');\n    this.props.history.push('/');\n  };\n\n  render() {\n    // var awardType = 'Week';\n    // NavItems on Navbar changes based on pathname\n    const path = this.props.location.pathname;\n    let item;\n    if (path === '/' || path === '/userLogin')\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/admin\">\n              <span className=\"header--link\">\n                <i className=\"fas fa-sign-in-alt fa-fw\" /> Admin\n              </span>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (path === '/adminDash')\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\n              <span className=\"header--link\">Logout</span>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (\n      path === '/editAdmin' ||\n      path === '/addAdmin' ||\n      path === '/createUser' ||\n      path === '/editUser'\n    )\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/adminDash\">\n              <span className=\"header--link\">Dashboard</span>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\n              <span className=\"header--link\">Logout</span>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (path === '/admin')\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/userLogin\">\n              <span className=\"header--link\">\n                <i className=\"fas fa-sign-in-alt fa-fw\" /> User\n              </span>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (\n      path === '/userHomePage' ||\n      path === '/updateUserInfo' ||\n      path === '/designAward'\n    )\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem />\n          <NavItem>\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\n              <span className=\"header--link\">Logout</span>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n\n    return (\n      <div className=\"header\">\n        <Navbar expand=\"md\">\n          <NavbarBrand>\n            <h1 className=\"header__title\">\n              Ogma Employee Recognition\n              {/* display home icon only for certain path names */}\n              {path === '/' || path === '/admin' || path === '/userLogin' || path === '/resetPassword' ? (\n                <Link to=\"/\">\n                  <i className=\"fas fa-home fa-sm header--link home-icon\" />\n                </Link>\n              ) : (\n                ''\n              )}\n            </h1>\n          </NavbarBrand>\n          {item}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","/*\n * Description: Admin login component\n */\n\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  Col,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass AdminLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      visible: false,\n      validUN: null,\n      validPW: null,\n    };\n  }\n\n  // Handles logging in.\n  // Makes post request to API. Sets access token\n  login = e => {\n    e.preventDefault();\n    if (this.state.username !== '' && this.state.password !== '') {\n      axios\n        .post('/admin/login', {\n          username: this.state.username,\n          password: this.state.password,\n        })\n        .then(res => {\n          // On successful login, store access token and id then redirect to admin dashboard\n          localStorage.setItem('access_token', res.data.access_token);\n          localStorage.setItem('admin_id', res.data.id);\n          this.props.history.push('/adminDash');\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({ visible: true });\n        });\n    } else if (this.state.username === '') {\n      this.setState({ validUN: true });\n    } else if (this.state.password === '') {\n      this.setState({ validPW: true });\n    }\n  };\n\n  // On change handler\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      validPW: false,\n      validUN: false,\n      visible: false,\n    });\n  };\n\n  // Closes alert, clears form\n  onDismiss = () => {\n    this.setState({\n      visible: false,\n      username: '',\n      password: '',\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"userSigninPage\">\n        <Container>\n          <div>\n            <Alert\n              className=\"form--alert\"\n              color=\"danger\"\n              isOpen={this.state.visible}\n              toggle={this.onDismiss}\n            >\n              Username or password is incorrect!\n          </Alert>\n          </div>\n          <div className=\"login--form\">\n            <div className=\"login--inner\">\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <h1 className=\"login--title\">Admin Login</h1>\n              </Col>\n              <Form onSubmit={this.login}>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <FormGroup>\n                    <Input\n                      type=\"text\"\n                      name=\"username\"\n                      invalid={this.state.validUN}\n                      className=\"input--form\"\n                      placeholder=\"Username\"\n                      value={this.state.username}\n                      onChange={this.onChange}\n                    />\n                    <FormFeedback invalid=\"true\">\n                      You must enter a username!\n                  </FormFeedback>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <FormGroup>\n                    <Input\n                      type=\"password\"\n                      name=\"password\"\n                      invalid={this.state.validPW}\n                      className=\"input--form\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.onChange}\n                    />\n                    <FormFeedback invalid=\"true\">\n                      You must enter a password\n                  </FormFeedback>\n                  </FormGroup>\n                </Col>\n                <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                  <Button color=\"primary\" block className=\"input--form\">\n                    SIGN IN\n                </Button>\n                </Col>\n              </Form>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default AdminLogin;\n","import React, { Component } from 'react';\n\nclass ErrorPage extends Component {\n  render() {\n    return (\n      <div className=\"error--page\">\n        <i className=\"fas fa-exclamation-triangle fa-7x\"></i>\n        <h1 className=\"error-title\">Oops! Something went wrong.</h1>\n        <p>This page did not load properly. Check to make sure URL is correct.</p>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;\n","/*\n * Description: The first page any user lands on.\n * */\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n//import Container from \"reactstrap/es/Container\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textTitle: 'Recognize Great Work',\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('/')\n      .then(res => {\n        console.log(res);\n        this.setState({ msg: res.data.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n          <div className=\"home--login\">\n            <h1 className=\"home--title\">{this.state.textTitle}</h1>\n            <Link to=\"/userLogin\">\n              <Button className=\"home--button\" color=\"primary\" size=\"lg\">\n                Login\n              </Button>\n            </Link>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","/*\n * Description: Component to display Users in DB\n */\n\nimport React, { Component } from 'react';\nimport { Table, Container } from 'reactstrap';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass ViewUsers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      config: {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      },\n    };\n  }\n\n  // When component loads, get and render users\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  // Get users from DB with get request to API and sets state\n  getUsers = () => {\n    axios\n      .get('/user', this.state.config)\n      .then(res => this.setState({ users: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  // Delete user\n  deleteUser = id => {\n    axios\n      .delete(`/user/${id}`, this.state.config)\n      .then(this.getUsers())\n      .catch(err => console.log(err));\n  };\n\n  // Render users into table\n  renderUsers = ({ id, user_name, first_name, last_name }) => {\n    const edit = {\n      pathname: '/editUser',\n      state: {\n        id: `${id}`,\n        user_name: `${user_name}`,\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n      },\n    };\n\n    return (\n      <tr key={id}>\n        <th scope=\"row\">{id}</th>\n        <td>{user_name}</td>\n        <td>{first_name}</td>\n        <td>{last_name}</td>\n        <td>\n          <Link to={edit}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n          </Link>\n        </td>\n        <td>\n          <a href=\"#0\" onClick={() => this.deleteUser(`${id}`)}>\n            <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\n          </a>\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <Container>\n          <div className=\"admin--title\">\n            <h1>Users</h1>\n            <Link className=\"admin--add\" to=\"/createUser\">\n              <i className=\"fa fa-plus fa-fw\" aria-hidden=\"true\" />\n              Create User\n            </Link>\n          </div>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Username</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.sort((a, b) => a.id - b.id).map(this.renderUsers)}\n            </tbody>\n          </Table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ViewUsers;\n","/*\n * Description: Component that allows the user to create an employee award.\n * */\n\nimport React, {Component} from 'react';\nimport {Container, Form, FormGroup, Input, Col, Label, Button, Row} from 'reactstrap';\n\nclass UserCreateAward extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            award_type: 'Employee of the Week',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        };\n    }\n\n\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n\n    /*\n    * Description: Send form data to submitAward function in userHomePage to create the award, then clears the form\n    * */\n    sendAward = () => {\n        this.props.submitAward(this.state);\n        this.setState({\n            award_type: 'Employee of the Week',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        })\n    };\n\n\n    /*\n    * Description: Cancels the award form entry, will clear the form\n    * */\n    cancelEntry = () => {\n        this.setState({\n            award_type: 'Employee of the Week',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        })\n    };\n\n\n    render() {\n        return (\n            <Container className=\"text_style\">\n                <h2 className=\"text-center section_header\">Create Award</h2>\n\n                <Form className=\"form_padding\">\n                    <FormGroup row className=\"form_spacing\">\n                        <Label sm={4} className=\"input_text\">Award Type:</Label>\n                        <Col sm={8}>\n                            <Input\n                                className=\"input_width\"\n                                type=\"select\"\n                                name=\"award_type\"\n                                id=\"award_type\"\n                                onChange={this.onChange}\n                            >\n                                <option value=\"Employee of the Week\">Employee of the Week</option>\n                                <option value=\"Employee of the Month\">Employee of the Month</option>\n                            </Input>\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"form_spacing\">\n                        <Label sm={4} className=\"input_text\">First Name:</Label>\n                        <Col sm={8}>\n                            <input\n                                className=\"input_width\"\n                                type='text'\n                                name='first_name'\n                                id='first_name'\n                                placeholder='First Name'\n                                value={this.state.first_name}\n                                onChange={this.onChange}\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"form_spacing\">\n                        <Label sm={4} className=\"input_text\">Last Name:</Label>\n                        <Col sm={8}>\n                            <input\n                                className=\"input_width\"\n                                type='text'\n                                name='last_name'\n                                id='last_name'\n                                placeholder='Last Name'\n                                value={this.state.last_name}\n                                onChange={this.onChange}\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"form_spacing\">\n                        <Label sm={4} className=\"input_text\">Time Granted:</Label>\n                        <Col sm={8}>\n                            <input\n                            className=\"input_width\"\n                            type='time'\n                            name='time_granted'\n                            id='time_granted'\n                            placeholder=\"hh:mm AM/PM\"\n                            value={this.state.time_granted}\n                            onChange={this.onChange}\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <FormGroup row className=\"form_spacing\">\n                        <Label sm={4} className=\"input_text\">Date Granted:</Label>\n                        <Col sm={8}>\n                            <input\n                                className=\"input_width\"\n                                type='date'\n                                name='date_granted'\n                                id='date_granted'\n                                placeholder='mm/dd/yyyy'\n                                value={this.state.date_granted}\n                                onChange={this.onChange}\n                            />\n                        </Col>\n                    </FormGroup>\n\n                    <div className=\"award_creation_buttons\">\n                        <Row>\n                            <Col sm={{size: 1, offset: 4}}>\n                                <Button type=\"button\" color=\"success\" className=\"submit_create_award button_style\" onClick={this.sendAward}>Submit</Button>\n                            </Col>\n                            <Col sm={{size: 1, offset: 2}}>\n                                <Button type=\"button\" color=\"danger\" className=\"cancel_create_award button_style\" onClick={this.cancelEntry}>Cancel</Button>\n                            </Col>\n                        </Row>\n                    </div>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default UserCreateAward;","/*\n * Description: Displays the awards given by the user to the screen.\n * */\n\nimport React, {Component} from 'react';\nimport {Table, Button} from 'reactstrap';\nimport Container from \"reactstrap/es/Container\";\n\nclass UserViewMyAwards extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            show_buttons: 'delete',\n        }\n    }\n\n\n    /*\n    * Description: Will send the award id to parent (userHomePage.js) and delete that award\n    * */\n    deleteAward = (e) => {\n        this.props.deleteAward(e)\n    };\n\n\n    /*\n    * Description: Will display the buttons to either confirm award deletion or cancel deletion\n    * */\n    confirmDeletion = (e) => {\n        this.setState({\n            show_buttons: \"confirm\"\n        })\n    };\n\n    /*\n    * Description: User deleted\n    * */\n    cancelDelete = () => {\n        this.setState({\n            show_buttons: \"delete\"\n        })\n    };\n\n    /*\n     *  Description: Format how the awards are displayed to the screen.\n     * */\n    getAwardData = ({\n                        id,\n                        award_type,\n                        recipient_first_name,\n                        recipient_last_name,\n                        date_granted,\n                        time_granted,\n                    }) => {\n\n        // format time\n        let time_of_day;\n        let hour = time_granted.substr(0, 2);\n        const min = time_granted.substr(2, 3);\n\n        // AM\n        if (hour < 12) {\n            if (hour === \"00\") {    //set hour to 12\n                hour = 12;\n            }\n            time_of_day = \"AM\";\n        }\n        // PM\n        else {\n            if (hour === \"12\") {    //set hour to 12\n                hour = 12;\n            } else {                //set hour between 1 and 11\n                hour -= 12;\n            }\n            time_of_day = \"PM\";\n        }\n\n        const time_given = hour + min + \" \" + time_of_day;\n\n\n        // format date\n        const month_list = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        const year = date_granted.substr(0, 4);\n        const day_month = date_granted.substr(5, 7);\n        const month = day_month.substr(0, 2);\n        const day_of_the_week = day_month.substr(3, 4);\n\n        const date_given = month_list[parseInt(month) - 1] + \" \" + day_of_the_week + \", \" + year;\n\n        return (\n            <tr key={id} className=\"award_data\">\n                <th scope=\"row\">{award_type}</th>\n                <th>{recipient_first_name} {recipient_last_name}</th>\n                <th>{date_given}</th>\n                <th>{time_given}</th>\n                <th>\n                    {/*<Button type=\"button\" color=\"danger\" className=\"delete_award_button\" onClick={() => this.deleteAward(id)}>Delete</Button>*/}\n                    {this.state.show_buttons === 'delete' &&\n                    <Button type=\"button\" color=\"danger\" className=\"delete_award_button\" onClick={() => this.confirmDeletion(id)}>Delete</Button>\n                    }\n\n                    {this.state.show_buttons === 'confirm' &&\n                    <div className=\"confirm_button_spacing\">\n                        <Button type=\"button\" color=\"success\" className=\"confirm_buttons\" onClick={() => this.deleteAward(id)}>Confirm</Button>\n                        <Button type=\"button\" color=\"danger\" className=\"confirm_buttons delete_button_color\" onClick={() => this.cancelDelete(id)}>Cancel</Button>\n                    </div>\n                    }\n                </th>\n            </tr>\n        );\n    };\n\n\n    render() {\n        return (\n            <Container>\n                <h2 className=\"text-center section_header\">Given Awards</h2>\n                <table className=\"text-center award_table\">\n                    <thead>\n                    <tr>\n                        <th>Award Type</th>\n                        <th>Recipient</th>\n                        <th>Date Given</th>\n                        <th>Time Given</th>\n                        <th>Delete Award</th>\n                    </tr>\n                    </thead>\n                    <tbody>{this.props.awards.map(this.getAwardData)}</tbody>\n                </table>\n            </Container>\n        );\n    }\n}\n\nexport default UserViewMyAwards;\n","/*\n * Description: Will display the date to the screen.\n * */\n\nimport React, { Component } from 'react';\n\nclass Date extends Component {\n  render() {\n    return (\n      <div className=\"dateText text-center\">\n          <p><strong>{this.props.date.currentDay}</strong></p>      {/*Displays day (Monday, Tuesday)*/}\n          <p><strong>{this.props.date.currentDate}</strong></p>     {/*Displays date (March 8, 2018)*/}\n      </div>\n    );\n  }\n}\n\nexport default Date;\n","/*\n* Description: Will display the user stats (Employee of the week/month and total awards)\n* */\n\nimport React, { Component } from 'react';\nimport {Row, Col} from 'reactstrap';\n\n\nclass Stats extends Component {\n  render() {\n    return (\n      <div className=\"test\">\n          <h2 className=\"text-center\"><strong>Submitted Awards</strong></h2>\n\n          <Row className=\"sideSectionRow\">\n              <Col sm=\"10\" className=\"removeColumnPadding\">\n                  <p>Employee of the Week:</p>\n                  <p>Employee of the Month:</p>\n                  <p>Total Awards:</p>\n              </Col>\n              <Col sm=\"2\" className=\"removeColumnPadding\">\n                  <p><strong className=\"userData\">{this.props.awardData.employeeOfTheWeek}</strong></p>\n                  <p><strong className=\"userData\">{this.props.awardData.employeeOfTheMonth}</strong></p>\n                  <p><strong className=\"userData\">{this.props.awardData.numberOfAwardsGiven}</strong></p>\n              </Col>\n          </Row>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","/*\n* Description: Will display the user data (username, first name, last name)\n* */\n\nimport React, {Component} from 'react';\nimport {Row, Col} from 'reactstrap';\n\nclass UserAccountInfo extends Component {\n    render() {\n        return (\n            <div>\n                <h2 className=\"text-center\"><strong>Account Information</strong></h2>\n\n                <Row className=\"sideSectionRow\">\n                    <Col sm=\"5\" className=\"removeColumnPadding\">\n                        <p>Username</p>\n                        <p><strong className=\"userData\">{this.props.currentUserData.user_name}</strong></p>\n                        <p>First Name</p>\n                        <p><strong className=\"userData\">{this.props.currentUserData.first_name}</strong></p>\n                        <p>Last Name</p>\n                        <p><strong className=\"userData\">{this.props.currentUserData.last_name}</strong></p>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default UserAccountInfo;\n","/*\n* Description: Component will allow user to update their first and last name.\n* */\n\nimport React, {Component} from 'react';\nimport {Alert, Button, Col, Form, FormGroup, Input, Label, Row} from 'reactstrap';\nimport Container from 'reactstrap/es/Container';\n\nclass UpdateUserInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            first_name: '',\n            last_name: '',\n            visible: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    /*\n    * Description: Get the user's first/last name stored in database, for prepopulating the form\n    * */\n    componentDidMount() {\n        this.setState({\n            first_name: this.props.currentData.first_name,\n            last_name: this.props.currentData.last_name,\n        });\n    }\n\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n\n    /*\n    * Description: Handles action when user clicks submit button. Function will check if form is empty, if not, submit data.\n    * */\n    handleSubmit = () => {\n        if (this.confirmNonEmptyFields()) {\n            this.props.updateAccount(this.state);\n        } else {\n            this.setState({visible: true})\n        }\n    };\n\n    /*\n    * Description: Checks if form is empty\n    * */\n    confirmNonEmptyFields = () => {\n        const {first_name, last_name} = this.state;\n\n        if (first_name.length === 0 || last_name.length === 0) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    render() {\n        return (\n            <Container>\n                <Alert\n                    color=\"warning\"\n                    isOpen={this.state.visible}\n                    className=\"form--alert\"\n                >\n                    Cannot have empty fields\n                </Alert>\n                <Row>\n                    <div className=\"login--form\">\n                        <div className=\"login--inner\">\n                            <Col xs=\"12\">\n                                <h1 className=\"text-center section_header\">\n                                    Update Account Information\n                                </h1>\n\n                                <Form>\n                                    <FormGroup row>\n                                        <Label sm={4} className=\"input_text\">\n                                            First Name:\n                                        </Label>\n                                        <Col sm={8}>\n                                            <Input\n                                                className=\"input--form\"\n                                                type=\"text\"\n                                                name=\"first_name\"\n                                                id=\"first_name\"\n                                                placeholder=\"first name\"\n                                                value={this.state.first_name}\n                                                onChange={this.onChange}\n                                            />\n                                        </Col>\n                                    </FormGroup>\n\n                                    <FormGroup row>\n                                        <Label sm={4} className=\"input_text\">\n                                            Last Name:\n                                        </Label>\n                                        <Col sm={8}>\n                                            <Input\n                                                className=\"input--form\"\n                                                type=\"text\"\n                                                name=\"last_name\"\n                                                id=\"last_name\"\n                                                placeholder=\"last name\"\n                                                value={this.state.last_name}\n                                                onChange={this.onChange}\n                                            />\n                                        </Col>\n                                    </FormGroup>\n\n                                    <Row>\n                                        <Col sm={{size: 1, offset: 3}}>\n                                            <Button\n                                                type=\"button\"\n                                                color=\"success\"\n                                                className=\"button_style submit_create_award\"\n                                                onClick={this.handleSubmit}\n                                            >\n                                                Submit\n                                            </Button>\n                                        </Col>\n\n                                        <Col sm={{size: 1, offset: 2}}>\n                                            <Button\n                                                type=\"button\"\n                                                className=\"button_style cancel_create_award\"\n                                                onClick={this.props.cancelInput}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </Col>\n                        </div>\n                    </div>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default UpdateUserInfo;\n","/*\n * Description: The home page of the user.\n * */\n\nimport React, {Component} from 'react';\nimport {Alert, Row, Col} from 'reactstrap';\nimport UserCreateAward from './userCreateAward';\nimport UserViewGivenAwards from './userViewGivenAwards';\nimport DateSection from './sideViewComponents/date'\nimport StatsSection from './sideViewComponents/stats'\nimport UserAccountInfoSection from './sideViewComponents/userAccountInfo'\nimport UpdateUserInfo from './updateUserInfo'\nimport axios from 'axios';\nimport Container from \"reactstrap/es/Container\";\n\n\nexport default class UserHomePage extends Component {\n    constructor(props) {\n        super(props);\n\n        // Arrays used in generating dates\n        const monthName = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        const dayName = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n        // Get the day (i.e. Monday, Friday) of the week\n        const day = new Date(),\n            currentDay = dayName[day.getDay()];\n\n        // Get the month, day (i.e. 29), year\n        const today = new Date(),\n            currentDate =\n                monthName[today.getMonth()] +\n                ' ' +\n                today.getDate() +\n                ', ' +\n                today.getFullYear();\n\n        this.state = {\n            awards: [],\n            awardData: {\n                numberOfAwardsGiven: 0,\n                employeeOfTheWeek: 0,\n                employeeOfTheMonth: 0,\n            },\n            displayType: 'homepage',\n            dateData: {\n                currentDate: currentDate,\n                currentDay: currentDay,\n            },\n            id: localStorage.getItem('id'),\n            award_type: '',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n            visible: false,\n            currentUserData: [],\n            config: {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`\n                },\n            },\n        };\n    }\n\n\n    componentDidMount() {\n        this.getAwards();\n        this.getUser();\n    }\n\n    componentWillUnmount() {\n    }\n\n\n    /*\n    * Description: Get the user's data\n    * */\n    getUser = () => {\n        axios\n            .get('/user/' + localStorage.getItem('id'))\n            .then(res => {\n                this.setState({\n                    currentUserData: res.data\n                });\n            })\n            .catch(err => console.log(err)); // User is not authenticated\n    };\n\n\n    /*\n    * Description: Makes call to endpoint getting all of the awards given by the user. Will pass the web token to the endpoint for authentication.\n    */\n    getAwards = () => {\n        let weekAwardCount = 0;\n        let monthAwardCount = 0;\n\n        axios\n            .get('/user/' + this.state.id + '/award', this.state.config)\n            .then(res => {\n                res.data.forEach(function (item) {                              //update the number of week/month awards given\n                    if (item.award_type === \"Employee of the Week\") {           //update week\n                        weekAwardCount++;\n                    } else if (item.award_type === \"Employee of the Month\") {   //update month\n                        monthAwardCount++;\n                    }\n                });\n\n                let awardDataCopy = this.state.awardData;\n                awardDataCopy['numberOfAwardsGiven'] = res.data.length;\n                awardDataCopy['employeeOfTheWeek'] = weekAwardCount;\n                awardDataCopy['employeeOfTheMonth'] = monthAwardCount;\n\n                this.setState({\n                    awards: res.data,\n                    awardData: awardDataCopy,\n                })\n            })\n            .catch(err => console.log(err)); // User is not authenticated\n    };\n\n\n    /*\n    * Description: Create award\n    * */\n    submitAward = (e) => {\n        if(this.state.visible === true) {\n            this.setState({visible: false})\n        }\n        axios\n            .post(\n                '/user/' + this.state.id + '/award',\n                {\n                    award_type: e.award_type,\n                    first_name: e.first_name,\n                    last_name: e.last_name,\n                    time_granted: e.time_granted,\n                    date_granted: e.date_granted,\n                },\n                this.state.config\n            )\n            .then(res => {\n                console.log(res);\n                this.renderPage();\n                this.props.history.push('/userHomePage'); //route to user homepage\n                this.getAwards()\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ visible: true })\n            });\n    };\n\n\n    /*\n    * Description: Clears award form\n    * */\n    renderPage = () => {\n        this.setState({\n            award_type: '',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n            visible: false,\n        })\n    };\n\n\n    /*\n    * Description: Change main display between award + db award info AND updating info form\n    * */\n    changeDisplay = () => {\n        if (this.state.displayType === \"homepage\") {\n            this.setState({\n                displayType: 'updateUserInfo'\n            })\n        } else {\n            this.setState({\n                displayType: 'homepage'\n            })\n        }\n    };\n\n\n    /*\n    * Description: Update user First + Last name\n    * */\n    updateAccount = e => {\n        axios\n            .patch(\n                '/user/update/' + this.state.id,\n                {\n                    first_name: e.first_name,\n                    last_name: e.last_name,\n                },\n                this.state.config\n            )\n\n            .then(res => {\n                console.log(res);\n                this.getUser();\n                this.changeDisplay();\n            })\n            .catch(err => console.log(err));\n    };\n\n\n    /*\n    * Description: Delete a certain award\n    * */\n    deleteAward = e => {\n        console.log(e);\n\n        axios.delete('/user/' + this.state.id + '/award/' + e, this.state.config)\n            .then(res => {\n                console.log(res);\n                this.getAwards();\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    };\n\n    /*\n    * Description: Close alert\n    * */\n    onDismiss = () => {\n        this.setState({visible: false})\n    };\n\n    render() {\n        const display = this.state.displayType;\n        let displayPage;\n        let displayAwardData;\n\n        //if display is set to \"homepage\", display the create award form and given award table\n        if (display === \"homepage\") {\n            displayPage =\n                <div>\n                    <Alert\n                        className=\"form--alert\"\n                        color=\"danger\"\n                        isOpen={this.state.visible}\n                        toggle={this.onDismiss}\n                    >\n                    User does not exist\n                    </Alert>\n                    <UserCreateAward\n                        clearForm={this.state.sent}\n                        submitAward={this.submitAward}\n                    />\n                </div>;\n\n            displayAwardData =\n                <div>\n                    <UserViewGivenAwards\n                        awards={this.state.awards}\n                        deleteAward={this.deleteAward}\n                    />\n                </div>\n\n        }\n        //if display is set to \"updateUserInfo\", display the form to update first/last name\n        else if (display === \"updateUserInfo\") {\n            displayPage =\n                <div>\n                    <UpdateUserInfo\n                        updateAccount={this.updateAccount}\n                        cancelInput={this.changeDisplay}\n                        currentData={this.state.currentUserData}\n                    />\n                </div>\n        }\n\n        return (\n            <Container fluid>\n                <Row>\n                    <Col xs=\"2\" className=\"side_section\">\n                        <div className=\"side_section_date text-center\">\n                            <DateSection\n                                date={this.state.dateData}\n                            />\n                        </div>\n\n                        <div className=\"side_section_user_data\">\n                            <UserAccountInfoSection currentUserData={this.state.currentUserData}/>\n                            <div className=\"text-center\">\n                                <button className=\"updateAccountButton\" onClick={this.changeDisplay}>Update Account</button>\n                            </div>\n                        </div>\n\n                        <div className=\"side_section_stats\">\n                            <StatsSection\n                                awardData={this.state.awardData}\n                            />\n                        </div>\n                    </Col>\n\n                    {this.state.displayType === \"homepage\" &&\n                    <Col xs=\"4\">\n                        {displayPage}\n                    </Col>\n                    }\n\n                    {this.state.displayType === \"homepage\" &&\n                    <Col xs=\"6\">\n                        {displayAwardData}\n                    </Col>\n                    }\n\n                    {this.state.displayType === \"updateUserInfo\" &&\n                    <Col xs=\"10\">\n                        {displayPage}\n                    </Col>\n                    }\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\n","/*\n * Description: Component to display Admin users\n */\n\nimport React, { Component } from 'react';\nimport { Table, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass ViewAdmins extends Component {\n  constructor() {\n    super();\n    this.state = {\n      admin_id: '',\n      admins: [],\n      config: {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      },\n    };\n  }\n\n  // When component loads, render table with admin users\n  componentDidMount() {\n    this.getAdmins();\n  }\n\n  // Get admin users from DB and set state\n  getAdmins = () => {\n    axios\n      .get('/admin', this.state.config)\n      .then(res =>\n        this.setState({\n          admin_id: localStorage.getItem('admin_id'),\n          admins: res.data,\n        })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Delete selected admin from table\n  deleteAdmin = id => {\n    axios\n      .delete(`/admin/${id}`, this.state.config)\n      .then(this.getAdmins())\n      .catch(err => console.log(err));\n  };\n\n  // Render admin users into table\n  renderAdmins = ({ id, admin_name }) => {\n    // Edit object, sets a state to pass as prop to Edit component\n    const edit = {\n      pathname: '/editAdmin',\n      state: {\n        id: `${id}`,\n        admin_name: `${admin_name}`,\n      },\n    };\n\n    if (this.state.admin_id === `${id}`) {\n      // Don't let logged in admin delete themselves\n      return (\n        <tr key={id} style={{ color: 'red' }}>\n          <th scope=\"row\">{id}</th>\n          <td>{admin_name}</td>\n          <td>\n            <Link to={edit}>\n              <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n            </Link>\n          </td>\n          <td>Logged in as this admin</td>\n        </tr>\n      );\n    } else {\n      // Admin users are mapped into the table so key is set to id\n      return (\n        <tr key={id}>\n          <th scope=\"row\">{id}</th>\n          <td>{admin_name}</td>\n          <td>\n            <Link to={edit}>\n              <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n            </Link>\n          </td>\n          <td>\n            <a href=\"#0\" onClick={() => this.deleteAdmin(`${id}`)}>\n              <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\n            </a>\n          </td>\n        </tr>\n      );\n    }\n  };\n\n  render() {\n    // get admins array and sort by id\n    const { admins } = this.state;\n    admins.sort((a, b) => a.id - b.id);\n\n    return (\n      <div>\n        <Container>\n          <div className=\"admin--title\">\n            <h1>Admins</h1>\n            <Link className=\"admin--add\" to=\"/addAdmin\">\n              <i className=\"fa fa-plus fa-fw\" aria-hidden=\"true\" />\n              Add Admin\n            </Link>\n          </div>\n          <Table responsive>\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Admin Name</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>{admins.map(this.renderAdmins)}</tbody>\n          </Table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ViewAdmins;\n","/*\n* Description: Admin reports component. Displays multiple different reports\n* */\n\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option: '',\n      grantedAwards: [],\n      grantedMostWeek: [],\n      grantedMostMonth: [],\n      withMostAwards: [],\n      mostWeekAwards: [],\n      mostMonthAwards: [],\n      totalUser: 0,\n      totalAdmin: 0,\n      totalEmpWk: 0,\n      totalEmpMt: 0,\n      load: false,\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    axios\n      .get('/bi/report', config)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          totalUser: res.data.totalUser,\n          totalAdmin: res.data.totalAdmin,\n          totalEmpWk: res.data.totalEmpWeek,\n          totalEmpMt: res.data.totalEmpMonth,\n          grantedAwards: res.data.userGrantedMostAwards.total,\n          grantedMostWeek: res.data.userGrantedMostAwards.week,\n          grantedMostMonth: res.data.userGrantedMostAwards.month,\n          withMostAwards: res.data.userWithMostAwards.total,\n          mostWeekAwards: res.data.userWithMostAwards.week,\n          mostMonthAwards: res.data.userWithMostAwards.month,\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  // 1. Generates Bar graph for total number of awards created by users\n  totalGrantedAwardsReport = () => {\n    const labels = [];\n    const dataset = [];\n\n    for (let i = 0; i < this.state.grantedAwards.length; i++) {\n      labels.push(\n        this.state.grantedAwards[i][0] + ' ' + this.state.grantedAwards[i][1]\n      );\n      dataset.push(this.state.grantedAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Total Awards Granted',\n          backgroundColor: 'rgba(72, 59, 59, 0.2)',\n          borderColor: 'rgba(72, 59, 59, 1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(72, 59, 59, 0.5)',\n          hoverBorderColor: 'rgba(72, 59, 59, 1)',\n          data: dataset,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <div>\n          <h1>Granted Awards</h1>\n          {dataset.length > 0 ? (\n            <Bar\n              data={data}\n              // height={100}\n              options={{\n                scales: {\n                  yAxes: [\n                    {\n                      display: true,\n                      ticks: {\n                        beginAtZero: true,\n                        // suggestedMax: 10,\n                      },\n                    },\n                  ],\n                },\n              }}\n            />\n          ) : (\n            <p>No data in this report</p>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // 2. Generates Bar graph for total number of Awards won\n  totalAwardsWonReport = () => {\n    const labels = [];\n    const dataset = [];\n    for (let i = 0; i < this.state.withMostAwards.length; i++) {\n      labels.push(\n        this.state.withMostAwards[i][0] + ' ' + this.state.withMostAwards[i][1]\n      );\n      dataset.push(this.state.withMostAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Total Awards Received',\n          backgroundColor: 'rgba(72, 59, 59, 0.2)',\n          borderColor: 'rgba(72, 59, 59, 1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(72, 59, 59, 0.5)',\n          hoverBorderColor: 'rgba(72, 59, 59, 1)',\n          data: dataset,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h1>Received Awards</h1>\n        {dataset.length > 0 ? (\n          <Bar\n            data={data}\n            // height={100}\n            options={{\n              scales: {\n                yAxes: [\n                  {\n                    display: true,\n                    ticks: {\n                      beginAtZero: true,\n                      // suggestedMax: 10,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        ) : (\n          <p>No data in this report</p>\n        )}\n      </div>\n    );\n  };\n\n  // 3. Generates Bar graph for Emp of the Week awards created by users\n  weeklyAwardsGranted = () => {\n    const labels = [];\n    const granted = [];\n\n    for (let i = 0; i < this.state.grantedMostWeek.length; i++) {\n      labels.push(\n        this.state.grantedMostWeek[i][0] +\n          ' ' +\n          this.state.grantedMostWeek[i][1]\n      );\n      granted.push(this.state.grantedMostWeek[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Week Awards Granted',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: granted,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h1>Employee of the Week</h1>\n        {granted.length > 0 ? (\n          <Bar\n            data={data}\n            // height={100}\n            options={{\n              scales: {\n                yAxes: [\n                  {\n                    display: true,\n                    ticks: {\n                      beginAtZero: true,\n                      // suggestedMax: 10,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        ) : (\n          <p>No data in this report</p>\n        )}\n      </div>\n    );\n  };\n\n  // 4. Generates Bar graph for Emp of the Week awards won by users\n  weeklyAwardsReceived = () => {\n    const labels = [];\n    const received = [];\n    for (let i = 0; i < this.state.mostWeekAwards.length; i++) {\n      labels.push(\n        this.state.mostWeekAwards[i][0] + ' ' + this.state.mostWeekAwards[i][1]\n      );\n      received.push(this.state.mostWeekAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Week Awards Received',\n          backgroundColor: 'rgba(83,51,237,0.2)',\n          borderColor: 'rgba(83,51,237,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\n          hoverBorderColor: 'rgba(83,51,237,1)',\n          data: received,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h1>Employee of the Week</h1>\n        {received.length > 0 ? (\n          <Bar\n            data={data}\n            // height={100}\n            options={{\n              scales: {\n                yAxes: [\n                  {\n                    display: true,\n                    ticks: {\n                      beginAtZero: true,\n                      // suggestedMax: 10,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        ) : (\n          <p>No data in this report</p>\n        )}\n      </div>\n    );\n  };\n\n  // 5. Generates Bar graph for Emp of the Month Created by Users\n  monthlyAwardsGranted = () => {\n    const labels = [];\n    const granted = [];\n \n    for (let i = 0; i < this.state.grantedMostMonth.length; i++) {\n      labels.push(\n        this.state.grantedMostMonth[i][0] +\n          ' ' +\n          this.state.grantedMostMonth[i][1]\n      );\n      granted.push(this.state.grantedMostMonth[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Month Awards Granted',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: granted,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h1>Employee of the Month</h1>\n        {granted.length > 0 ? (\n          <Bar\n            data={data}\n            // height={100}\n            options={{\n              scales: {\n                yAxes: [\n                  {\n                    display: true,\n                    ticks: {\n                      beginAtZero: true,\n                      // suggestedMax: 10,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        ) : (\n          <p>No data in this report</p>\n        )}\n      </div>\n    );\n  };\n\n  // 6. Generates Bar graph for Emp of Month Awards received by users\n  monthlyAwardsReceived = () => {\n    const labels = [];\n    const received = [];\n    for (let i = 0; i < this.state.mostMonthAwards.length; i++) {\n      labels.push(\n        this.state.mostMonthAwards[i][0] +\n          ' ' +\n          this.state.mostMonthAwards[i][1]\n      );\n      received.push(this.state.mostMonthAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Month Awards Received',\n          backgroundColor: 'rgba(83,51,237,0.2)',\n          borderColor: 'rgba(83,51,237,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\n          hoverBorderColor: 'rgba(83,51,237,1)',\n          data: received,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h1>Employee of the Month</h1>\n        {received.length > 0 ? (\n          <Bar\n            data={data}\n            // height={100}\n            options={{\n              scales: {\n                yAxes: [\n                  {\n                    display: true,\n                    ticks: {\n                      beginAtZero: true,\n                      // suggestedMax: 10,\n                    },\n                  },\n                ],\n              },\n            }}\n          />\n        ) : (\n          <p>No data in this report</p>\n        )}\n      </div>\n    );\n  };\n\n  // 7. lists general statistics\n  generalStats = () => {\n    return (\n      <div>\n        <h1>General Stats</h1>\n        Total Users: {this.state.totalUser} <br />\n        Total Admins: {this.state.totalAdmin} <br />\n        {/* Total # of Award Winners: {this.state.withMostAwards.length} */}\n      </div>\n    );\n  };\n\n  // report 1: totals\n  totalsReport = () => {\n    return (\n      <div>\n        <div className=\"report\">{this.generalStats()}</div>\n        <div className=\"report\">{this.totalAwardsWonReport()}</div>\n        <div className=\"report\">{this.totalGrantedAwardsReport()}</div>\n      </div>\n    );\n  };\n\n  // report 2: awards received\n  awardsReceivedReport = () => {\n    return (\n      <div className=\"report-container\">\n        <div className=\"report\">{this.monthlyAwardsReceived()}</div>\n        <div className=\"report\">{this.weeklyAwardsReceived()}</div>\n      </div>\n    );\n  };\n\n  // report 3: awards granted\n  awardsGrantedReport = () => {\n    return (\n      <div>\n        <div className=\"report\">{this.monthlyAwardsGranted()}</div>\n        <div className=\"report\">{this.weeklyAwardsGranted()}</div>\n      </div>\n    );\n  };\n\n  // Displays chosen report\n  RunReport = () => {\n    if (this.state.option === '1') {\n      return this.totalsReport();\n    } else if (this.state.option === '2') {\n      return this.awardsReceivedReport();\n    } else if (this.state.option === '3') {\n      return this.awardsGrantedReport();\n    } else {\n      return <div>No report selected</div>;\n    }\n  };\n\n  // On select input change handler\n  onChange = e => {\n    this.setState({ option: e.target.value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <FormGroup>\n            <Label>Select Report</Label>\n            <Input\n              className=\"input--form\"\n              type=\"select\"\n              name=\"select\"\n              id=\"exampleSelect\"\n              onChange={this.onChange}\n            >\n              <option>-</option>\n              <option value=\"1\">Totals</option>\n              <option value=\"2\">Received Awards</option>\n              <option value=\"3\">Granted Awards</option>\n            </Input>\n          </FormGroup>\n        </Form>\n        <div>{this.RunReport()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Reports;\n","/*\n * Description: Component for Admin dashboard\n */\n\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport ViewUsers from './adminViewUsers';\nimport ViewAdmins from './adminViewAdmins';\nimport Reports from './sideViewComponents/reports';\n\nclass AdminDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonPressed: '',\n    };\n  }\n\n  // Displays appropriate component\n  componentDidMount() {\n    if (this.props.location.state) {\n      if (this.props.location.state.from === 1)\n        this.setState({ buttonPressed: 1 });\n      else if (this.props.location.state.from === 2)\n        this.setState({ buttonPressed: 2 });\n    } else this.setState({ buttonPressed: 0 });\n  }\n  // Sets which component to display\n  handleClick = button => {\n    this.setState({ buttonPressed: button });\n  };\n\n  // Renders component based on button pressed\n  renderComponent = () => {\n    if (this.state.buttonPressed === 1) return <ViewUsers />;\n    else if (this.state.buttonPressed === 2) return <ViewAdmins />;\n    else if (this.state.buttonPressed === 3) return <Reports />;\n    else\n      return (\n        <div>\n          <h1>Admin Dashboard</h1>\n          <p>\n            Welcome to the admin dashboard. From here you can add, edit, or delete\n            users and admins. To get started select an option from the menu on\n            the left.\n          </p>\n        </div>\n      );\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row className=\"admin--dash\">\n          <Col xs=\"3\">\n            <div className=\"admin--menu\">\n              <h1>Menu</h1>\n              <a href=\"#0\" className={this.state.buttonPressed === 1 ? 'active' : 'not-active'} onClick={() => this.handleClick(1)}>\n                View Users\n              </a>\n              <a href=\"#0\" className={this.state.buttonPressed === 2 ? 'active' : 'not-active'} onClick={() => this.handleClick(2)}>\n                View Admins\n              </a>\n              <a href=\"#0\" className={this.state.buttonPressed === 3 ? 'active' : 'not-active'} onClick={() => this.handleClick(3)}>\n                View Reports\n              </a>\n            </div>\n          </Col>\n          <Col\n            sm=\"12\"\n            md={{ size: 6, offset: 1 }}\n            className=\"admin--dash--content\"\n          >\n            {this.renderComponent()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","/*\n * Description: Admin component to add new Admins to DB\n */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  FormFeedback,\n  Alert,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass CreateAdmin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      admin_name: '',\n      password: '',\n      confirmPW: '',\n      validate: false,\n      visible: false,\n      invalidAdmin: false,\n      invalidPW: false,\n      errorMsg: '',\n    };\n  }\n\n  // Sets state on input change\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      validate: false,\n      invalidAdmin: false,\n      invalidPW: false,\n    });\n  };\n\n  // On submit function. Makes post request to endpoint.\n  handleSubmit = e => {\n    e.preventDefault();\n    // Get access token and create header for auth\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    const { password, confirmPW, admin_name } = this.state;\n\n    // Confirm password, makes sure form is not empty\n    if (admin_name !== '' && password !== confirmPW) {\n      this.setState({ validate: true });\n    } else if (admin_name === '') {\n      this.setState({\n        invalidAdmin: true,\n        errorMsg: 'You must enter a username',\n      });\n    } else if (password === '') {\n      this.setState({ invalidPW: true });\n    } else if (admin_name !== '' && password !== '') {\n      // Post request. Passing new admin info and auth token\n      axios\n        .post(\n          '/admin',\n          {\n            admin_name: this.state.admin_name,\n            password: this.state.password,\n          },\n          config\n        )\n        .then(res => {\n          this.setState(\n            {\n              visible: true,\n              admin_name: '',\n              password: '',\n              confirmPW: '',\n              validate: false,\n              invalidAdmin: false,\n            },\n            () => {\n              // Redirect back to admin dashboard after 1 second\n              window.setTimeout(() => {\n                this.props.history.push({\n                  pathname: '/adminDash',\n                  state: {\n                    from: 2,\n                  },\n                });\n              }, 1000);\n            }\n          );\n        })\n        .catch(err => {\n          // Catching this error means Username is unvailable\n          console.log(err);\n          this.setState({\n            invalidAdmin: true,\n            errorMsg: 'This username is unvailable.',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\n            Admin has been created!\n          </Alert>\n          <div className=\"login--form login--inner\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h1 className=\"login--title\">New Admin</h1>\n            </Col>\n            <Form onSubmit={this.handleSubmit}>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    type=\"text\"\n                    className=\"input--form\"\n                    invalid={this.state.invalidAdmin}\n                    name=\"admin_name\"\n                    id=\"admin_id\"\n                    placeholder=\"Username\"\n                    value={this.state.admin_name}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    {this.state.errorMsg}\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.invalidPW}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"pw_id\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    You must enter a password\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.validate}\n                    type=\"password\"\n                    name=\"confirmPW\"\n                    id=\"cpw_id\"\n                    placeholder=\"Confirm Password\"\n                    value={this.state.confirmPW}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    Password doesn't match!\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Button color=\"primary\" type=\"submit\" className=\"input--form\">Add Admin</Button>\n              </Col>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CreateAdmin;\n","/*\n * Description: Component for editing Admin users\n */\n\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  FormFeedback,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass EditAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      admin_name: '',\n      password: '',\n      confirmPW: '',\n      validate: false,\n      invalidAdmin: false,\n      visible: false,\n      errorMsg: '',\n    };\n  }\n\n  componentDidMount() {\n    this.getAdmin();\n  }\n\n  // On form input change handler to set state\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      invalidAdmin: false,\n      validate: false,\n      invalidPW: false,\n    });\n  };\n\n  // Get Admin that will be edited\n  getAdmin = () => {\n    this.setState({\n      id: this.props.location.state.id,\n      admin_name: this.props.location.state.admin_name,\n    });\n  };\n\n  // Save update to admin\n  saveEdit = e => {\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    e.preventDefault();\n    const { password, confirmPW, id, admin_name } = this.state;\n    // PW validation\n    if (admin_name !== '' && password !== confirmPW) {\n      this.setState({ validate: true });\n    } else if (admin_name === '') {\n      this.setState({\n        invalidAdmin: true,\n        errorMsg: 'You must enter a username.',\n      });\n    } else if (password === '') {\n      this.setState({ invalidPW: true });\n    } else {\n      // Patch request to API endpoint to update admin.\n      // Passes access token for auth.\n      axios\n        .patch(\n          `/admin/${id}`,\n          {\n            admin_name: this.state.admin_name,\n            password: this.state.password,\n          },\n          config\n        )\n        .then(res => {\n          console.log(res);\n          this.setState(\n            {\n              admin_name: '',\n              password: '',\n              confirmPW: '',\n              validate: false,\n              invalidAdmin: false,\n              visible: true,\n            },\n            () => {\n              // Redirect back to admin dashboard after 1 seconds on success\n              window.setTimeout(() => {\n                this.props.history.push({\n                  pathname: '/adminDash',\n                  state: {\n                    from: 2,\n                  },\n                });\n              }, 1000);\n            }\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            invalidAdmin: true,\n            errorMsg: 'This username is unvailable.',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\n            Admin has been saved!\n          </Alert>\n          <div className=\"login--form login--inner\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h1 className=\"login--title\">Edit Admin</h1>\n            </Col>\n            <Form onSubmit={this.saveEdit}>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"text\"\n                    invalid={this.state.invalidAdmin}\n                    name=\"admin_name\"\n                    value={this.state.admin_name}\n                    placeholder=\"Admin Name\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    {this.state.errorMsg}\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.invalidPW}\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    placeholder=\"New Password\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    You must enter a password.\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.validate}\n                    type=\"password\"\n                    name=\"confirmPW\"\n                    value={this.state.confirmPW}\n                    placeholder=\"Confirm Password\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    Password doesn't match!\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Button color=\"primary\" type=\"submit\" className=\"input--form\">Save Admin</Button>\n              </Col>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditAdmin;\n","/*\n * Description: Admin component to add new users to DB\n */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  Label,\n  Alert,\n  FormFeedback,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass CreateUser extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user_name: '',\n      first_name: '',\n      last_name: '',\n      password: '',\n      confirmPW: '',\n      sig: '',\n      previewSig: '',\n      visible: false,\n      validate: false,\n      invalidUsername: false,\n      invalidSig: false,\n      errorMsg: '',\n    };\n  }\n\n  // Sets state for inputs of type=text\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      invalidUsername: false,\n      validate: false,\n      invalidPW: false,\n    });\n  };\n\n  // Set state for user's signature\n  onImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      this.setState({\n        sig: file,\n        previewSig: reader.result,\n        invalidSig: false,\n      });\n    };\n    reader.readAsDataURL(file);\n    console.log(this.state.sig);\n  };\n\n  // On submit function. Puts user input together as FormData\n  // and make post request to API endpoint\n  handleSubmit = e => {\n    e.preventDefault();\n    const { password, confirmPW, user_name, sig } = this.state;\n    if (user_name !== '' && password !== confirmPW) {\n      this.setState({ validate: true });\n    } else if (user_name === '') {\n      this.setState({\n        invalidUsername: true,\n        errorMsg: 'You must enter a username.',\n      });\n    } else if (password === '') {\n      this.setState({ invalidPW: true })\n    } else if (sig === '') {\n      this.setState({ invalidSig: true })\n    }\n    else {\n      const formData = new FormData();\n      formData.append('username', this.state.user_name);\n      formData.append('password', this.state.password);\n      formData.append('first_name', this.state.first_name);\n      formData.append('last_name', this.state.last_name);\n      formData.append('sig', this.state.sig);\n      let token = localStorage.getItem('access_token'); // need access token for auth\n      let config = {\n        headers: { Authorization: `Bearer ${token}` },\n      };\n      axios\n        .post('/user', formData, config)\n        .then(res => {\n          console.log(res);\n          // Clear state and display confirmation\n          this.setState(\n            {\n              user_name: '',\n              password: '',\n              confirmPW: '',\n              first_name: '',\n              last_name: '',\n              sig: '',\n              previewSig: '',\n              visible: true,\n              validate: false,\n              invalidUsername: false,\n            },\n            () => {\n              // Redirect back to admin dashboard after 1 second\n              window.setTimeout(() => {\n                this.props.history.push({\n                  pathname: '/adminDash',\n                  state: {\n                    from: 1,\n                  },\n                });\n              }, 1000);\n            }\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            invalidUsername: true,\n            errorMsg: 'This username is unvailable.',\n          });\n        });\n    }\n  };\n\n  render() {\n    let { previewSig, errorMsg } = this.state;\n    let $previewSig = null;\n    if (previewSig) {\n      $previewSig = (\n        <img\n          alt=\"previewSig\"\n          src={previewSig}\n          style={{ height: '200px', width: '500px' }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Container>\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\n            User has been created!\n          </Alert>\n\n          <div className=\"login--form\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h1 className=\"login--title\">New User</h1>\n            </Col>\n            <Form onSubmit={this.handleSubmit} method=\"POST\">\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"email\"\n                    invalid={this.state.invalidUsername}\n                    name=\"user_name\"\n                    placeholder=\"Email\"\n                    value={this.state.user_name}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">{errorMsg}</FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"text\"\n                    name=\"first_name\"\n                    placeholder=\"First Name\"\n                    value={this.state.first_name}\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"text\"\n                    name=\"last_name\"\n                    placeholder=\"Last Name\"\n                    value={this.state.last_name}\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"password\"\n                    invalid={this.state.invalidPW}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    You must enter a password.\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.validate}\n                    type=\"password\"\n                    name=\"confirmPW\"\n                    placeholder=\"Confirm Password\"\n                    value={this.state.confirmPW}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    Password doesn't match!\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Label>Signature</Label>\n                  <Input type=\"file\" invalid={this.state.invalidSig} name=\"sig\" onChange={this.onImageChange} />\n                  <FormFeedback invalid=\"true\">\n                    Please upload a signature.\n                </FormFeedback>\n                </FormGroup>\n              </Col>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                {$previewSig}\n              </Col>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Button color=\"primary\" type=\"submit\" className=\"user-button input--form\">Create User</Button>\n              </Col>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CreateUser;\n","/*\n * Description: Component for editing Users\n */\n\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  FormFeedback,\n  Label,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass EditUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      user_name: '',\n      first_name: '',\n      last_name: '',\n      password: '',\n      confirmPW: '',\n      sig: '',\n      validate: false,\n      invalidEmail: false,\n      invalidPW: false,\n      invalidSig: false,\n      visible: false,\n      errorMsg: '',\n      config: {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.getUser();\n  }\n\n  // On form input change handler to set state\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      invalidEmail: false,\n      validate: false,\n      invalidPW: false,\n    });\n  };\n\n  // Handle upload of signature, show preview\n  onImageChange = e => {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    reader.onloadend = () => {\n      this.setState({\n        sig: file,\n        previewSig: reader.result,\n        invalidSig: false,\n      });\n    };\n    reader.readAsDataURL(file);\n    console.log(this.state.sig);\n  };\n\n  // Get User that will be edited\n  getUser = () => {\n    this.setState({\n      id: this.props.location.state.id,\n      user_name: this.props.location.state.user_name,\n      first_name: this.props.location.state.first_name,\n      last_name: this.props.location.state.last_name,\n    });\n  };\n\n  // Save update\n  saveEdit = e => {\n    e.preventDefault();\n    const { password, confirmPW, id, user_name, sig } = this.state;\n    // PW validation\n    if (user_name !== '' && password !== confirmPW) {\n      this.setState({ validate: true });\n    } else if (user_name === '') {\n      this.setState({\n        invalidEmail: true,\n        errorMsg: 'You must enter an email',\n      });\n    } else if (password === '') {\n      this.setState({ invalidPW: true });\n    } else if (sig === '') {\n      this.setState({ invalidSig: true });\n    } else {\n      const formData = new FormData();\n      formData.append('username', this.state.user_name);\n      formData.append('password', this.state.password);\n      formData.append('first_name', this.state.first_name);\n      formData.append('last_name', this.state.last_name);\n      formData.append('sig', this.state.sig);\n      // Patch request to API endpoint to update user.\n      // Passes access token for auth.\n      axios\n        .patch(`/user/${id}`, formData, this.state.config)\n        .then(res => {\n          console.log(res);\n          this.setState(\n            {\n              user_name: '',\n              first_name: '',\n              last_name: '',\n              password: '',\n              confirmPW: '',\n              validate: false,\n              visible: true,\n            },\n            () => {\n              // Redirect back to admin dashboard after 1 seconds on success\n              window.setTimeout(() => {\n                this.props.history.push({\n                  pathname: '/adminDash',\n                  state: {\n                    from: 1,\n                  },\n                });\n              }, 1000);\n            }\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            invalidEmail: true,\n            errorMsg: 'This email already exists',\n          });\n        });\n    }\n  };\n\n  render() {\n    let { previewSig } = this.state;\n    let $previewSig = null;\n    if (previewSig) {\n      $previewSig = (\n        <img\n          alt=\"previewSig\"\n          src={previewSig}\n          style={{ height: '200px', width: '500px' }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <Container>\n          <Alert\n            color=\"success\"\n            isOpen={this.state.visible}\n            className=\"form--alert\"\n          >\n            User has been saved!\n          </Alert>\n\n          <div className=\"login--form\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h1 className=\"login--title\">Edit User</h1>\n            </Col>\n            <Form onSubmit={this.saveEdit}>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"email\"\n                    invalid={this.state.invalidEmail}\n                    name=\"user_name\"\n                    value={this.state.user_name}\n                    placeholder=\"New Email\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    {this.state.errorMsg}\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"text\"\n                    name=\"first_name\"\n                    value={this.state.first_name}\n                    placeholder=\"First Name\"\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"text\"\n                    name=\"last_name\"\n                    value={this.state.last_name}\n                    placeholder=\"Last Name\"\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.invalidPW}\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    placeholder=\"New Password\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    You must enter a password.\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.validate}\n                    type=\"password\"\n                    name=\"confirmPW\"\n                    value={this.state.confirmPW}\n                    placeholder=\"Confirm Password\"\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    Password doesn't match!\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Label>Signature</Label>\n                  <Input\n                    type=\"file\"\n                    invalid={this.state.invalidSig}\n                    name=\"sig\"\n                    onChange={this.onImageChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    Please upload a signature.\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                {$previewSig}\n              </Col>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Button\n                  color=\"primary\"\n                  type=\"submit\"\n                  className=\"user-button input--form\"\n                >\n                  Save User\n                </Button>\n              </Col>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditUser;\n","/*\n * Description: The page where the user can reset their password\n * */\nimport React, { Component } from 'react';\nimport {\n  Alert,\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  FormFeedback,\n  Input,\n  Col,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      confirm: '',\n      visible: null,\n      invalid: null,\n      invalidPW: null,\n      msg: '',\n      color: '',\n    };\n  }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      visible: false,\n      invalid: false,\n      invalidPW: false,\n    });\n  };\n\n  // Checks user inputs and resets password\n  onSubmit = e => {\n    e.preventDefault();\n    const { username, password, confirm } = this.state;\n    if (username === '') {\n      this.setState({ invalid: true });\n    } else if (username !== '' && password === '') {\n      this.setState({ invalidPW: true, msg: 'You must enter a password.' });\n    } else if (username !== '' && password !== confirm) {\n      this.setState({\n        invalidPW: true,\n        msg: 'Password does not match.',\n        password: '',\n        confirm: '',\n      });\n    } else if (username !== '' && password !== '') {\n      axios\n        .put('/reset-password', {\n          username: username,\n          password: password,\n        })\n        .then(res => {\n          this.setState(\n            {\n              visible: true,\n              color: 'success',\n              msg: 'Your password has been reset',\n              username: '',\n              password: '',\n              confirm: '',\n              invalid: false,\n              invalidPW: false,\n            },\n            () => {\n              window.setTimeout(() => {\n                this.props.history.push({\n                  pathname: '/userLogin',\n                });\n              }, 1000);\n            }\n          );\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            visible: true,\n            color: 'danger',\n            msg: 'Username does not exist',\n          });\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"userSigninPage\">\n        <Container>\n          <Alert\n            color={this.state.color}\n            isOpen={this.state.visible}\n            className=\"form--alert\"\n          >\n            {this.state.msg}\n          </Alert>\n          <div className=\"login--form login--inner\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <h1 className=\"login--title\">Reset Password</h1>\n            </Col>\n            <Form onSubmit={this.onSubmit}>\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    type=\"text\"\n                    className=\"input--form\"\n                    invalid={this.state.invalid}\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">\n                    You must enter a username.\n                  </FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    invalid={this.state.invalidPW}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"New Password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  <FormFeedback invalid=\"true\">{this.state.msg}</FormFeedback>\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <FormGroup>\n                  <Input\n                    className=\"input--form\"\n                    type=\"password\"\n                    name=\"confirm\"\n                    placeholder=\"Confirm Password\"\n                    value={this.state.confirm}\n                    onChange={this.onChange}\n                  />\n                </FormGroup>\n              </Col>\n\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                <Button color=\"primary\" type=\"submit\" className=\"input--form\">\n                  Reset Password\n                </Button>\n              </Col>\n            </Form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport UserLogin from './components/userLogin';\nimport Header from './components/header';\nimport AdminLogin from './components/adminLogin';\nimport ErrorPage from './components/error';\nimport HomePage from './components/home';\nimport ViewUsers from './components/adminViewUsers';\nimport UserHomePage from './components/userHomePage';\n//import UpdateUserInfo from './components/updateUserInfo';\nimport AdminDashboard from './components/adminDashboard';\n// import DesignAward from './components/designAward';\nimport CreateAdmin from './components/createAdmin';\nimport EditAdmin from './components/editAdmin';\nimport CreateUser from './components/createUser';\nimport EditUser from './components/editUser';\nimport './styles/styles.scss';\nimport ResetPassword from './components/resetPassword';\n\n\nexport const history = createHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n            {/* Add routes here */}\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/userLogin\" component={UserLogin}/>\n            <Route path=\"/userHomePage\" component={UserHomePage} />\n            <Route exact path=\"/admin\" component={AdminLogin} />\n            <Route path=\"/adminDash\" component={AdminDashboard} />\n            <Route path=\"/addAdmin\" component={CreateAdmin} />\n            <Route path=\"/editAdmin\" component={EditAdmin} />\n            <Route path=\"/editUser\" component={EditUser} />\n            <Route path=\"/createUser\" component={CreateUser} />\n            <Route path=\"/adminViewUsers\" component={ViewUsers} />\n            <Route path=\"/resetPassword\" component={ResetPassword} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\n// import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}