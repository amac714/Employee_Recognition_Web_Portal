{"version":3,"sources":["components/userLogin.js","components/header.js","components/adminLogin.js","components/error.js","components/home.js","components/adminViewUsers.js","components/userCreateAward.js","components/userViewGivenAwards.js","components/sideViewComponents/date.js","components/sideViewComponents/stats.js","components/sideViewComponents/userAccountInfo.js","components/updateUserInfo.js","components/userHomePage.js","components/adminViewAdmins.js","components/sideViewComponents/reports.js","components/adminDashboard.js","components/sideSection.js","components/designAward.js","components/createAdmin.js","components/editAdmin.js","components/createUser.js","components/editUser.js","App.js","index.js"],"names":["UserLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","state","username","password","axios","post","then","res","setState","userToken","data","access_token","id","localStorage","setItem","first_name","last_name","props","history","push","catch","error","console","log","visible","validUN","validPW","onChange","_this$setState","defineProperty","target","name","value","onDismiss","react_default","a","createElement","Container","Alert","className","color","isOpen","toggle","Col","sm","md","size","offset","Form","onSubmit","FormGroup","Label","Input","type","invalid","placeholder","FormFeedback","Button","block","Component","Header","logout","removeItem","item","path","location","pathname","Nav","navbar","NavItem","NavLink","tag","Link","to","onClick","Navbar","expand","NavbarBrand","withRouter","AdminLogin","login","err","ErrorPage","HomePage","msg","textTitle","textMessage","_this2","get","ViewUsers","getUsers","config","users","deleteUser","delete","concat","renderUsers","_ref","user_name","edit","key","scope","aria-hidden","href","style","headers","Authorization","getItem","Table","sort","b","map","UserCreateAward","sendAward","submitAward","award_type","time_granted","date_granted","cancelEntry","row","Row","UserViewMyAwards","deleteAward","confirmDeletion","show_buttons","cancelDelete","getAwardData","time_of_day","recipient_first_name","recipient_last_name","hour","substr","time_given","year","day_month","month","day_of_the_week","date_given","parseInt","bordered","striped","responsive","awards","Date","date","currentDay","currentDate","Stats","awardData","employeeOfTheWeek","employeeOfTheMonth","numberOfAwardsGiven","UserAccountInfo","currentUserData","UpdateUserInfo","_this$state","new_password1","new_password2","confirmNonEmptyFields","updateAccount","_this$state2","length","bind","assertThisInitialized","currentData","xs","cancelInput","UserHomePage","getUser","getAwards","weekAwardCount","monthAwardCount","forEach","awardDataCopy","renderPage","changeDisplay","displayType","patch","getDay","today","getMonth","getDate","getFullYear","dateData","displayPage","displayAwardData","display","userCreateAward","clearForm","sent","userViewGivenAwards","updateUserInfo","fluid","userAccountInfo","stats","ViewAdmins","getAdmins","admin_id","admins","deleteAdmin","renderAdmins","admin_name","Reports","totalGrantedAwardsReport","labels","dataset","i","grantedAwards","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","es","options","scales","yAxes","ticks","beginAtZero","totalAwardsWonReport","withMostAwards","weeklyAwardsGranted","granted","grantedMostWeek","weeklyAwardsReceived","received","mostWeekAwards","monthlyAwardsGranted","grantedMostMonth","monthlyAwardsReceived","mostMonthAwards","generalStats","totalUser","totalAdmin","totalsReport","awardsReceivedReport","awardsGrantedReport","RunReport","option","totalEmpWk","totalEmpMt","load","token","totalEmpWeek","totalEmpMonth","userGrantedMostAwards","total","week","userWithMostAwards","AdminDashboard","handleClick","button","buttonPressed","renderComponent","adminViewUsers","adminViewAdmins","reports","from","SideSection","DesignAward","border","sideSection","userType","CreateAdmin","confirmPW","validate","invalidAdmin","errorMsg","invalidPW","window","setTimeout","EditAdmin","getAdmin","saveEdit","CreateUser","onImageChange","reader","FileReader","file","files","onloadend","sig","previewSig","result","invalidSig","readAsDataURL","invalidUsername","formData","FormData","append","$previewSig","alt","src","height","width","method","EditUser","invalidEmail","createHistory","App","Router","header","Switch","Route","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.af511fff.chunk.js","sourcesContent":["/*\r\n * Description: The page where the user logs in. User will be directed to home screen upon successful login.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {\r\n    Alert,\r\n    Container,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    FormFeedback,\r\n    Input,\r\n    Col,\r\n    Label,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass UserLogin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            userToken: '',\r\n            id: null,\r\n            visible: false,\r\n            validUN: null,\r\n            validPW: null,\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Description: Handles form input when user attempts to login by sending input username/password to server endpoint.\r\n     * */\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.username !== '' && this.state.password !== '') {\r\n            axios\r\n                .post('/user/login', {\r\n                    username: this.state.username,\r\n                    password: this.state.password,\r\n                })\r\n                //successful login attempt\r\n                .then(res => {\r\n                    this.setState({userToken: res.data.access_token, id: res.data.id});\r\n                    localStorage.setItem('username', this.state.username); //store username\r\n                    localStorage.setItem('access_token', this.state.userToken); //store user's generated token\r\n                    localStorage.setItem('id', this.state.id);\r\n                    localStorage.setItem('password', this.state.password);\r\n                    localStorage.setItem('first_name', this.state.first_name);\r\n                    localStorage.setItem('last_name', this.state.last_name);\r\n\r\n                    this.props.history.push('/userHomePage'); //route to user homepage\r\n                })\r\n\r\n                //unsuccesfful login attempt\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    this.setState({visible: true})\r\n                });\r\n        } else if (this.state.username === '') {\r\n            this.setState({validUN: true})\r\n        } else if (this.state.password === '') {\r\n            this.setState({validPW: true})\r\n        }\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n            validPW: this.state.validPW ? false : null,\r\n            validUN: this.state.validUN ? false : null,\r\n        });\r\n    };\r\n\r\n    // Closes alert, clears form\r\n    onDismiss = () => {\r\n        this.setState({\r\n            visible: false,\r\n            username: '',\r\n            password: '',\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <div>\r\n                    <Alert className=\"form--alert\" color=\"danger\" isOpen={this.state.visible} toggle={this.onDismiss}>\r\n                        Username or password is incorrect!\r\n                    </Alert>\r\n                </div>\r\n                <div className=\"login--form\">\r\n                    <div className=\"login--inner\">\r\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                            <h1 className=\"login--title\">Sign In</h1>\r\n                        </Col>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                                <FormGroup>\r\n                                    <Label>Username</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"username\"\r\n                                        invalid={this.state.validUN}\r\n                                        className=\"input--form\"\r\n                                        id=\"user_id\"\r\n                                        placeholder=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    <FormFeedback invalid=\"true\">You must enter a username!</FormFeedback>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                                <FormGroup>\r\n                                    <Label>Password</Label>\r\n                                    <Input\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        invalid={this.state.validPW}\r\n                                        className=\"input--form\"\r\n                                        id=\"pw_id\"\r\n                                        placeholder=\"******\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                    <FormFeedback invalid=\"true\">You must enter a password</FormFeedback>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\r\n                                <Button color=\"primary\" block className=\"input--form\">Login</Button>\r\n                            </Col>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserLogin;\r\n","/*\r\n * Description: Navigation Bar component\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  logout = e => {\r\n    e.preventDefault();\r\n    localStorage.removeItem('access_token');\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    // var awardType = 'Week';\r\n    // NavItems on Navbar changes based on pathname\r\n    const path = this.props.location.pathname;\r\n    let item;\r\n    if (path === '/')\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/admin\">\r\n              <span className=\"header--link\"><i className=\"fas fa-sign-in-alt fa-fw\"></i> Admin</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (path === '/adminDash')\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (\r\n      path === '/editAdmin' ||\r\n      path === '/addAdmin' ||\r\n      path === '/createUser' ||\r\n      path === '/editUser'\r\n    )\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/adminDash\">\r\n              <span className=\"header--link\">Dashboard</span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (\r\n      path === '/userHomePage' ||\r\n      path === '/updateUserInfo' ||\r\n      path === '/designAward'\r\n    )\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem />\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n\r\n    return (\r\n      <div className=\"header\">\r\n          <Navbar expand=\"md\">\r\n            <NavbarBrand>\r\n              <h1 className=\"header__title\">Ogma Employee Recognition</h1>\r\n            </NavbarBrand>\r\n            {item}\r\n          </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","/*\r\n * Description: Admin login component\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Input,\r\n  Col,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass AdminLogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      visible: false,\r\n      validUN: null,\r\n      validPW: null,\r\n    };\r\n  }\r\n\r\n  // Handles logging in.\r\n  // Makes post request to API. Sets access token\r\n  login = e => {\r\n    e.preventDefault();\r\n    if (this.state.username !== '' && this.state.password !== '') {\r\n      axios\r\n        .post('/admin/login', {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        })\r\n        .then(res => {\r\n          // On successful login, store access token and id then redirect to admin dashboard\r\n          localStorage.setItem('access_token', res.data.access_token);\r\n          localStorage.setItem('admin_id', res.data.id);\r\n          this.props.history.push('/adminDash');\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({ visible: true });\r\n        });\r\n    } else if (this.state.username === '') {\r\n      this.setState({ validUN: true });\r\n    } else if (this.state.password === '') {\r\n      this.setState({ validPW: true });\r\n    }\r\n  };\r\n\r\n  // On change handler\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      validPW: false,\r\n      validUN: false,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  // Closes alert, clears form\r\n  onDismiss = () => {\r\n    this.setState({\r\n      visible: false,\r\n      username: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Alert\r\n            className=\"form--alert\"\r\n            color=\"danger\"\r\n            isOpen={this.state.visible}\r\n            toggle={this.onDismiss}\r\n          >\r\n            Username or password is incorrect!\r\n          </Alert>\r\n        </div>\r\n        <div className=\"login--form\">\r\n          <div className=\"login--inner\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">Admin Login</h1>\r\n            </Col>\r\n            <Form onSubmit={this.login}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    invalid={this.state.validUN}\r\n                    className=\"input--form\"\r\n                    placeholder=\"Username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a username!\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    invalid={this.state.validPW}\r\n                    className=\"input--form\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" block className=\"input--form\">\r\n                  SIGN IN\r\n                </Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLogin;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"error--page\">\r\n        <i className=\"fas fa-exclamation-triangle fa-7x\"></i>\r\n        <h1 className=\"error-title\">Oops! Something went wrong.</h1>\r\n        <p>This page did not load properly. Check to make sure URL is correct.</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorPage;\r\n","/*\r\n * Description: The first page any user lands on.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Button} from 'reactstrap';\r\nimport './homePage.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//import Container from \"reactstrap/es/Container\";\r\n\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            textTitle: 'Recognize Great Work',\r\n            textMessage:\r\n                \"Cough hairball on conveniently placed pants pet my belly, you know you want to; seize the hand and shred it!,  sit and stare or your pillow is now my pet bed, so bite off human's toes ignore the human until she needs to get up, then climb on her lap and sprawl or lies down\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('/')\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({msg: res.data.data});\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"blurred--background\"> \r\n                    <div className=\"home--login\">\r\n                        <h1 className=\"home--title\">{this.state.textTitle}</h1>\r\n                        <Link to=\"/userLogin\">\r\n                            <Button className=\"home--button\" color=\"primary\" size=\"lg\">Login</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            // <Container>\r\n            //     <div className=\"home\">\r\n            //         <h1>{this.state.textTitle}</h1>\r\n            //         <Link to=\"/userLogin\">\r\n            //             <button>Login</button>\r\n            //         </Link>\r\n            //     </div>\r\n\r\n            //     <Row className=\"content\">\r\n            //         <Col xs={{size: 4, offset: 1}} style={{paddingTop: '200px'}}>\r\n            //             <h1 className=\"headerText\">{this.state.textTitle}</h1>\r\n            //             <p>{this.state.textMessage}</p>\r\n\r\n            //             <div className=\"buttons\">\r\n            //                 <Link to=\"/userLogin\">\r\n            //                     <button>Login</button>\r\n            //                 </Link>\r\n            //             </div>\r\n            //         </Col>\r\n            //         <Col xs={{size: 1, offset: 2}}>\r\n            //             <a href=\"https://placeholder.com\">\r\n            //                 <img src=\"/images/homeImage.jpg\" alt=\"firstImg\" style={{height: '300px', width: '500px'}}/>\r\n            //             </a>\r\n            //         </Col>\r\n            //     </Row>\r\n\r\n            //     <Row>\r\n            //         <Col xs={{size: 2, offset: 7}}>\r\n            //             <a href=\"https://placeholder.com\">\r\n            //                 <img src=\"https://via.placeholder.com/500x300\" alt=\"secondImg\"/>\r\n            //             </a>\r\n            //         </Col>\r\n            //     </Row>\r\n            // </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","/*\r\n * Description: Component to display Users in DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Table, Container } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ViewUsers extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      config: {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // When component loads, get and render users\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  // Get users from DB with get request to API and sets state\r\n  getUsers = () => {\r\n    axios\r\n      .get('/user', this.state.config)\r\n      .then(res => this.setState({ users: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Delete user\r\n  deleteUser = id => {\r\n    axios\r\n      .delete(`/user/${id}`, this.state.config)\r\n      .then(this.getUsers())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Render users into table\r\n  renderUsers = ({ id, user_name, first_name, last_name }) => {\r\n    const edit = {\r\n      pathname: '/editUser',\r\n      state: {\r\n        id: `${id}`,\r\n        user_name: `${user_name}`,\r\n        first_name: `${first_name}`,\r\n        last_name: `${last_name}`,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <tr key={id}>\r\n        <th scope=\"row\">{id}</th>\r\n        <td>{user_name}</td>\r\n        <td>{first_name}</td>\r\n        <td>{last_name}</td>\r\n        <td>\r\n          <Link to={edit}>\r\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\r\n          </Link>\r\n        </td>\r\n        <td>\r\n          <a href=\"#0\" onClick={() => this.deleteUser(`${id}`)}>\r\n            <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <div className=\"admin--title\">\r\n            <h1>Users</h1>\r\n            <Link className=\"admin--add\" to=\"/createUser\">\r\n              <i className=\"fa fa-plus fa-fw\" aria-hidden=\"true\" />\r\n              Create User\r\n            </Link>\r\n          </div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Username</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.sort((a, b) => a.id - b.id).map(this.renderUsers)}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewUsers;\r\n","/*\r\n * Description: Component that allows the user to create an employee award.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Container, Form, FormGroup, Input, Col, Label, Button, Row} from 'reactstrap';\r\n\r\nclass UserCreateAward extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        };\r\n    }\r\n\r\n    /**/\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    sendAward = () => {\r\n        this.props.submitAward(this.state);\r\n        this.setState({\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        })\r\n    };\r\n\r\n\r\n    cancelEntry = () => {\r\n        this.setState({\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"text_style\">\r\n                <h2 className=\"text-center section_header\">Create Award</h2>\r\n\r\n                <Form className=\"form_padding\">\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Award Type:</Label>\r\n                        <Col sm={8}>\r\n                            <Input\r\n                                className=\"input_width\"\r\n                                type=\"select\"\r\n                                name=\"award_type\"\r\n                                id=\"award_type\"\r\n                                onChange={this.onChange}\r\n                            >\r\n                                <option value=\"Employee of the Week\">Employee of the Week</option>\r\n                                <option value=\"Employee of the Month\">Employee of the Month</option>\r\n                            </Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">First Name:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='text'\r\n                                name='first_name'\r\n                                id='first_name'\r\n                                placeholder='First Name'\r\n                                value={this.state.first_name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Last Name:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='text'\r\n                                name='last_name'\r\n                                id='last_name'\r\n                                placeholder='Last Name'\r\n                                value={this.state.last_name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Time Granted:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                            className=\"input_width\"\r\n                            type='time'\r\n                            name='time_granted'\r\n                            id='time_granted'\r\n                            placeholder=\"hh:mm AM/PM\"\r\n                            value={this.state.time_granted}\r\n                            onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Date Granted:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='date'\r\n                                name='date_granted'\r\n                                id='date_granted'\r\n                                placeholder='mm/dd/yyyy'\r\n                                value={this.state.date_granted}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <div className=\"award_creation_buttons\">\r\n                        <Row>\r\n                            <Col sm={{size: 1, offset: 4}}>\r\n                                <Button type=\"button\" color=\"success\" className=\"submit_create_award button_style\" onClick={this.sendAward}>Submit</Button>\r\n                            </Col>\r\n                            <Col sm={{size: 1, offset: 2}}>\r\n                                <Button type=\"button\" color=\"danger\" className=\"cancel_create_award button_style\" onClick={this.cancelEntry}>Cancel</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCreateAward;","/*\r\n * Description: Displays the awards given by the user to the screen.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Table, Button, Row, Col} from 'reactstrap';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\nclass UserViewMyAwards extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show_buttons: 'delete',\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n    * Description: Will send the award id to parent (userHomePage.js) and delete that award\r\n    * */\r\n    deleteAward = (e) => {\r\n        this.props.deleteAward(e)\r\n    };\r\n\r\n    confirmDeletion = (e) => {\r\n        this.setState({\r\n            show_buttons: \"confirm\"\r\n        })\r\n    };\r\n\r\n    cancelDelete = () => {\r\n        this.setState({\r\n            show_buttons: \"delete\"\r\n        })\r\n    };\r\n\r\n    /*\r\n     *  Description: Format how the awards are displayed to the screen.\r\n     * */\r\n    getAwardData = ({\r\n                        id,\r\n                        award_type,\r\n                        recipient_first_name,\r\n                        recipient_last_name,\r\n                        date_granted,\r\n                        time_granted,\r\n                    }) => {\r\n\r\n        // format time\r\n        let time_of_day;\r\n        let hour = time_granted.substr(0, 2);\r\n        const min = time_granted.substr(2, 3);\r\n\r\n        // AM\r\n        if (hour < 12) {\r\n            if (hour === \"00\") {    //set hour to 12\r\n                hour = 12;\r\n            }\r\n            time_of_day = \"AM\";\r\n        }\r\n        // PM\r\n        else {\r\n            if (hour === \"12\") {    //set hour to 12\r\n                hour = 12;\r\n            } else {                //set hour between 1 and 11\r\n                hour -= 12;\r\n            }\r\n            time_of_day = \"PM\";\r\n        }\r\n\r\n        const time_given = hour + min + \" \" + time_of_day;\r\n\r\n\r\n        // format date\r\n        const month_list = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date_granted.substr(0, 4);\r\n        const day_month = date_granted.substr(5, 7);\r\n        const month = day_month.substr(0, 2);\r\n        const day_of_the_week = day_month.substr(3, 4);\r\n\r\n        const date_given = month_list[parseInt(month) - 1] + \" \" + day_of_the_week + \", \" + year;\r\n\r\n        return (\r\n            <tr key={id} className=\"award_data\">\r\n                <th scope=\"row\">{award_type}</th>\r\n                <th>{recipient_first_name} {recipient_last_name}</th>\r\n                <th>{date_given}</th>\r\n                <th>{time_given}</th>\r\n                <th>\r\n                    {/*<Button type=\"button\" color=\"danger\" className=\"delete_award_button\" onClick={() => this.deleteAward(id)}>Delete</Button>*/}\r\n                    {this.state.show_buttons === 'delete' &&\r\n                    <Button type=\"button\" color=\"danger\" className=\"delete_award_button\" onClick={() => this.confirmDeletion(id)}>Delete</Button>\r\n                    }\r\n\r\n                    {this.state.show_buttons === 'confirm' &&\r\n                    <div className=\"confirm_button_spacing\">\r\n                        <Button type=\"button\" color=\"success\" className=\"confirm_buttons\" onClick={() => this.deleteAward(id)}>Confirm</Button>\r\n                        <Button type=\"button\" color=\"danger\" className=\"confirm_buttons delete_button_color\" onClick={() => this.cancelDelete(id)}>Cancel</Button>\r\n                    </div>\r\n                    }\r\n                </th>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"text-center section_header\">Given Awards</h2>\r\n                <Table bordered striped responsive className=\"text-center award_table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Award Type</th>\r\n                        <th>Recipient</th>\r\n                        <th>Date Given</th>\r\n                        <th>Time Given</th>\r\n                        <th>Delete Award</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>{this.props.awards.map(this.getAwardData)}</tbody>\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserViewMyAwards;\r\n","/*\r\n * Description: Will display the date to the screen.\r\n * */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Date extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dateText text-center\">\r\n          <p><strong>{this.props.date.currentDay}</strong></p>\r\n          <p><strong>{this.props.date.currentDate}</strong></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Date;\r\n","import React, { Component } from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\n\r\nclass Stats extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"test\">\r\n          <h2 className=\"text-center\"><strong>Submitted Awards</strong></h2>\r\n\r\n          <Row className=\"sideSectionRow\">\r\n              <Col sm=\"10\" className=\"removeColumnPadding\">\r\n                  <p>Employee of the Week:</p>\r\n                  <p>Employee of the Month:</p>\r\n                  <p>Total Awards:</p>\r\n              </Col>\r\n              <Col sm=\"2\" className=\"removeColumnPadding\">\r\n                  <p><strong className=\"userData\">{this.props.awardData.employeeOfTheWeek}</strong></p>\r\n                  <p><strong className=\"userData\">{this.props.awardData.employeeOfTheMonth}</strong></p>\r\n                  <p><strong className=\"userData\">{this.props.awardData.numberOfAwardsGiven}</strong></p>\r\n              </Col>\r\n          </Row>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React, {Component} from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\n\r\nclass UserAccountInfo extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\"><strong>Account Information</strong></h2>\r\n\r\n                <Row className=\"sideSectionRow\">\r\n                    <Col sm=\"5\" className=\"removeColumnPadding\">\r\n                        <p>Username</p>\r\n                        <p><strong className=\"userData\">{this.props.currentUserData.user_name}</strong></p>\r\n                        <p>First Name</p>\r\n                        <p><strong className=\"userData\">{this.props.currentUserData.first_name}</strong></p>\r\n                        <p>Last Name</p>\r\n                        <p><strong className=\"userData\">{this.props.currentUserData.last_name}</strong></p>\r\n                    </Col>\r\n\r\n                    {/*<Col sm=\"7\" className=\"removeColumnPadding\">*/}\r\n                        {/*<p><strong className=\"userData\">{this.props.currentUserData.user_name}</strong></p>*/}\r\n                        {/*<p><strong className=\"userData\">{this.props.currentUserData.first_name}</strong></p>*/}\r\n                        {/*<p><strong className=\"userData\">{this.props.currentUserData.last_name}</strong></p>*/}\r\n                    {/*</Col>*/}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserAccountInfo;\r\n","import React, {Component} from 'react';\r\nimport {Alert, Button, Col, Form, FormGroup, Input, Label, Row} from 'reactstrap';\r\nimport Container from 'reactstrap/es/Container';\r\n\r\nclass UpdateUserInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            visible: false,\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            first_name: this.props.currentData.first_name,\r\n            last_name: this.props.currentData.last_name,\r\n        });\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        let {new_password1, new_password2} = this.state;\r\n\r\n        if (this.confirmNonEmptyFields()) {\r\n            this.props.updateAccount(this.state);\r\n        } else {\r\n            this.setState({visible: true})\r\n        }\r\n    };\r\n\r\n    confirmNonEmptyFields = () => {\r\n        const {first_name, last_name} = this.state;\r\n\r\n        if (first_name.length === 0 || last_name.length === 0) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Alert\r\n                    color=\"warning\"\r\n                    isOpen={this.state.visible}\r\n                    className=\"form--alert\"\r\n                >\r\n                    Cannot have empty fields\r\n                </Alert>\r\n                <Row>\r\n                    <div className=\"login--form\">\r\n                        <div className=\"login--inner\">\r\n                            <Col xs=\"12\">\r\n                                <h1 className=\"text-center section_header\">\r\n                                    Update Account Information\r\n                                </h1>\r\n\r\n                                <Form>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4} className=\"input_text\">\r\n                                            First Name:\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                className=\"input--form\"\r\n                                                type=\"text\"\r\n                                                name=\"first_name\"\r\n                                                id=\"first_name\"\r\n                                                placeholder=\"first name\"\r\n                                                value={this.state.first_name}\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup row>\r\n                                        <Label sm={4} className=\"input_text\">\r\n                                            Last Name:\r\n                                        </Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                className=\"input--form\"\r\n                                                type=\"text\"\r\n                                                name=\"last_name\"\r\n                                                id=\"last_name\"\r\n                                                placeholder=\"last name\"\r\n                                                value={this.state.last_name}\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <Row>\r\n                                        <Col sm={{size: 1, offset: 3}}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                color=\"success\"\r\n                                                className=\"button_style submit_create_award\"\r\n                                                onClick={this.handleSubmit}\r\n                                            >\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n\r\n                                        <Col sm={{size: 1, offset: 2}}>\r\n                                            <Button\r\n                                                type=\"button\"\r\n                                                className=\"button_style cancel_create_award\"\r\n                                                onClick={this.props.cancelInput}\r\n                                            >\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateUserInfo;\r\n","/*\r\n * Description: The home page of the user.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Alert, Row, Col} from 'reactstrap';\r\nimport UserCreateAward from './userCreateAward';\r\nimport UserViewGivenAwards from './userViewGivenAwards';\r\nimport DateSection from './sideViewComponents/date'\r\nimport StatsSection from './sideViewComponents/stats'\r\nimport UserAccountInfoSection from './sideViewComponents/userAccountInfo'\r\nimport UpdateUserInfo from './updateUserInfo'\r\nimport axios from 'axios';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nexport default class UserHomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Arrays used in generating dates\r\n        const monthName = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const dayName = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n\r\n        // Get the day (i.e. Monday, Friday) of the week\r\n        const day = new Date(),\r\n            currentDay = dayName[day.getDay()];\r\n\r\n        // Get the month, day (i.e. 29), year\r\n        const today = new Date(),\r\n            currentDate =\r\n                monthName[today.getMonth()] +\r\n                ' ' +\r\n                today.getDate() +\r\n                ', ' +\r\n                today.getFullYear();\r\n\r\n        this.state = {\r\n            awards: [],\r\n            awardData: {\r\n                numberOfAwardsGiven: 0,\r\n                employeeOfTheWeek: 0,\r\n                employeeOfTheMonth: 0,\r\n            },\r\n            displayType: 'homepage',\r\n            dateData: {\r\n                currentDate: currentDate,\r\n                currentDay: currentDay,\r\n            },\r\n            id: localStorage.getItem('id'),\r\n            award_type: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n            visible: false,\r\n            currentUserData: [],\r\n            config: {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAwards();\r\n        this.getUser();\r\n        // this.timer = setInterval(() => this.getAwards(), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.timer = null;\r\n    }\r\n\r\n\r\n    getUser = () => {\r\n        axios\r\n            .get('/user/' + localStorage.getItem('id'))\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                this.setState({\r\n                    currentUserData: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err)); // User is not authenticated\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Makes call to endpoint getting all of the awards given by the user. Will pass the web token to the endpoint for authentication.\r\n    */\r\n    getAwards = () => {\r\n        var weekAwardCount = 0;\r\n        var monthAwardCount = 0;\r\n\r\n        axios\r\n            .get('/user/' + this.state.id + '/award', this.state.config)\r\n            .then(res => {\r\n                res.data.forEach(function (item) {\r\n                    if (item.award_type === \"Employee of the Week\") {\r\n                        weekAwardCount++;\r\n                    } else if (item.award_type === \"Employee of the Month\") {\r\n                        monthAwardCount++;\r\n                    }\r\n                });\r\n\r\n                let awardDataCopy = this.state.awardData;\r\n                awardDataCopy['numberOfAwardsGiven'] = res.data.length;\r\n                awardDataCopy['employeeOfTheWeek'] = weekAwardCount;\r\n                awardDataCopy['employeeOfTheMonth'] = monthAwardCount;\r\n\r\n                this.setState({\r\n                    awards: res.data,\r\n                    awardData: awardDataCopy,\r\n                })\r\n            })\r\n            .catch(err => console.log(err)); // User is not authenticated\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Create award\r\n    * */\r\n    submitAward = (e) => {\r\n        if(this.state.visible === true) {\r\n            this.setState({visible: false})\r\n        }\r\n        axios\r\n            .post(\r\n                '/user/' + this.state.id + '/award',\r\n                {\r\n                    award_type: e.award_type,\r\n                    first_name: e.first_name,\r\n                    last_name: e.last_name,\r\n                    time_granted: e.time_granted,\r\n                    date_granted: e.date_granted,\r\n                },\r\n                this.state.config\r\n            )\r\n            .then(res => {\r\n                console.log(res);\r\n                // console.log(res.data);\r\n                this.renderPage();\r\n                this.props.history.push('/userHomePage'); //route to user homepage\r\n                this.getAwards()\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                this.setState({ visible: true })\r\n            });\r\n    };\r\n\r\n    /*\r\n    * Description: Clears award form\r\n    * */\r\n    renderPage = () => {\r\n        this.setState({\r\n            award_type: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n            visible: false,\r\n        })\r\n    };\r\n\r\n    /*\r\n    * Description: Change main display between award + db award info AND updating info form\r\n    * */\r\n    changeDisplay = () => {\r\n        if (this.state.displayType === \"homepage\") {\r\n            this.setState({\r\n                displayType: 'updateUserInfo'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                displayType: 'homepage'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Update user First + Last name\r\n    * */\r\n    updateAccount = e => {\r\n        axios\r\n            .patch(\r\n                '/user/update/' + this.state.id,\r\n                {\r\n                    first_name: e.first_name,\r\n                    last_name: e.last_name,\r\n                    // username: localStorage.getItem('username'),\r\n                    // password: localStorage.getItem('password')\r\n                },\r\n                this.state.config\r\n            )\r\n\r\n            .then(res => {\r\n                console.log(res);\r\n                this.getUser();\r\n                this.changeDisplay();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Delete a certain award\r\n    * */\r\n    deleteAward = e => {\r\n        console.log(e);\r\n\r\n        axios.delete('/user/' + this.state.id + '/award/' + e, this.state.config)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.getAwards();\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    };\r\n\r\n    /*\r\n    * Description: Close alert\r\n    * */\r\n    onDismiss = () => {\r\n        this.setState({visible: false})\r\n    }\r\n\r\n    render() {\r\n        const display = this.state.displayType;\r\n        let displayPage;\r\n        let displayAwardData;\r\n\r\n        if (display === \"homepage\") {\r\n            displayPage =\r\n                <div>\r\n                    <Alert\r\n                        className=\"form--alert\"\r\n                        color=\"danger\"\r\n                        isOpen={this.state.visible}\r\n                        toggle={this.onDismiss}\r\n                    >\r\n                    User does not exist\r\n                    </Alert>\r\n                    <UserCreateAward\r\n                        clearForm={this.state.sent}\r\n                        submitAward={this.submitAward}\r\n                    />\r\n                </div>;\r\n\r\n            displayAwardData =\r\n                <div>\r\n                    <UserViewGivenAwards\r\n                        awards={this.state.awards}\r\n                        deleteAward={this.deleteAward}\r\n                    />\r\n                </div>\r\n\r\n        } else if (display === \"updateUserInfo\") {\r\n            displayPage =\r\n                <div>\r\n                    <UpdateUserInfo\r\n                        updateAccount={this.updateAccount}\r\n                        cancelInput={this.changeDisplay}\r\n                        currentData={this.state.currentUserData}\r\n                    />\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <Container fluid className=\"page\">\r\n                <Row>\r\n                    <Col xs=\"2\" className=\"side_section\">\r\n                        <div className=\"side_section_date text-center\">\r\n                            <DateSection\r\n                                date={this.state.dateData}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"side_section_user_data\">\r\n                            <UserAccountInfoSection currentUserData={this.state.currentUserData}/>\r\n                            <div className=\"text-center\">\r\n                                <button className=\"updateAccountButton\" onClick={this.changeDisplay}>Update Account</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"side_section_stats\">\r\n                            <StatsSection\r\n                                awardData={this.state.awardData}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {this.state.displayType === \"homepage\" &&\r\n                    <Col xs=\"4\">\r\n                        {displayPage}\r\n                    </Col>\r\n                    }\r\n\r\n                    {this.state.displayType === \"homepage\" &&\r\n                    <Col xs=\"6\">\r\n                        {displayAwardData}\r\n                    </Col>\r\n                    }\r\n\r\n                    {this.state.displayType === \"updateUserInfo\" &&\r\n                    <Col xs=\"10\">\r\n                        {displayPage}\r\n                    </Col>\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Description: Component to display Admin users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Table, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass ViewAdmins extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      admin_id: '',\r\n      admins: [],\r\n      config: {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // When component loads, render table with admin users\r\n  componentDidMount() {\r\n    this.getAdmins();\r\n  }\r\n\r\n  // Get admin users from DB and set state\r\n  getAdmins = () => {\r\n    axios\r\n      .get('/admin', this.state.config)\r\n      .then(res =>\r\n        this.setState({\r\n          admin_id: localStorage.getItem('admin_id'),\r\n          admins: res.data,\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Delete selected admin from table\r\n  deleteAdmin = id => {\r\n    axios\r\n      .delete(`/admin/${id}`, this.state.config)\r\n      .then(this.getAdmins())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Render admin users into table\r\n  renderAdmins = ({ id, admin_name }) => {\r\n    // Edit object, sets a state to pass as prop to Edit component\r\n    const edit = {\r\n      pathname: '/editAdmin',\r\n      state: {\r\n        id: `${id}`,\r\n        admin_name: `${admin_name}`,\r\n      },\r\n    };\r\n\r\n    if (this.state.admin_id === `${id}`) {\r\n      // Don't let logged in admin delete themselves\r\n      return (\r\n        <tr key={id} style={{ color: 'red' }}>\r\n          <th scope=\"row\">{id}</th>\r\n          <td>{admin_name}</td>\r\n          <td>\r\n            <Link to={edit}>\r\n              <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\r\n            </Link>\r\n          </td>\r\n          <td>Logged in as this admin</td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      // Admin users are mapped into the table so key is set to id\r\n      return (\r\n        <tr key={id}>\r\n          <th scope=\"row\">{id}</th>\r\n          <td>{admin_name}</td>\r\n          <td>\r\n            <Link to={edit}>\r\n              <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\r\n            </Link>\r\n          </td>\r\n          <td>\r\n            <a href=\"#0\" onClick={() => this.deleteAdmin(`${id}`)}>\r\n              <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // get admins array and sort by id\r\n    const { admins } = this.state;\r\n    admins.sort((a, b) => a.id - b.id);\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <div className=\"admin--title\">\r\n            <h1>Admins</h1>\r\n            <Link className=\"admin--add\" to=\"/addAdmin\">\r\n              <i className=\"fa fa-plus fa-fw\" aria-hidden=\"true\" />\r\n              Add Admin\r\n            </Link>\r\n          </div>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Admin Name</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{admins.map(this.renderAdmins)}</tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewAdmins;\r\n","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Reports extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: '',\r\n      grantedAwards: [],\r\n      grantedMostWeek: [],\r\n      grantedMostMonth: [],\r\n      withMostAwards: [],\r\n      mostWeekAwards: [],\r\n      mostMonthAwards: [],\r\n      totalUser: 0,\r\n      totalAdmin: 0,\r\n      totalEmpWk: 0,\r\n      totalEmpMt: 0,\r\n      load: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    axios\r\n      .get('/bi/report', config)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          totalUser: res.data.totalUser,\r\n          totalAdmin: res.data.totalAdmin,\r\n          totalEmpWk: res.data.totalEmpWeek,\r\n          totalEmpMt: res.data.totalEmpMonth,\r\n          grantedAwards: res.data.userGrantedMostAwards.total,\r\n          grantedMostWeek: res.data.userGrantedMostAwards.week,\r\n          grantedMostMonth: res.data.userGrantedMostAwards.month,\r\n          withMostAwards: res.data.userWithMostAwards.total,\r\n          mostWeekAwards: res.data.userWithMostAwards.week,\r\n          mostMonthAwards: res.data.userWithMostAwards.month,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // 1. Generates Bar graph for total number of awards created by users\r\n  totalGrantedAwardsReport = () => {\r\n    const labels = [];\r\n    const dataset = [];\r\n\r\n    for (let i = 0; i < this.state.grantedAwards.length; i++) {\r\n      labels.push(\r\n        this.state.grantedAwards[i][0] + ' ' + this.state.grantedAwards[i][1]\r\n      );\r\n      dataset.push(this.state.grantedAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Total Awards Granted',\r\n          backgroundColor: 'rgba(72, 59, 59, 0.2)',\r\n          borderColor: 'rgba(72, 59, 59, 1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(72, 59, 59, 0.5)',\r\n          hoverBorderColor: 'rgba(72, 59, 59, 1)',\r\n          data: dataset,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1>Granted Awards</h1>\r\n          {dataset.length > 0 ? (\r\n            <Bar\r\n              data={data}\r\n              // height={100}\r\n              options={{\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      display: true,\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        // suggestedMax: 10,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>No data in this report</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 2. Generates Bar graph for total number of Awards won\r\n  totalAwardsWonReport = () => {\r\n    const labels = [];\r\n    const dataset = [];\r\n    for (let i = 0; i < this.state.withMostAwards.length; i++) {\r\n      labels.push(\r\n        this.state.withMostAwards[i][0] + ' ' + this.state.withMostAwards[i][1]\r\n      );\r\n      dataset.push(this.state.withMostAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Total Awards Received',\r\n          backgroundColor: 'rgba(72, 59, 59, 0.2)',\r\n          borderColor: 'rgba(72, 59, 59, 1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(72, 59, 59, 0.5)',\r\n          hoverBorderColor: 'rgba(72, 59, 59, 1)',\r\n          data: dataset,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Received Awards</h1>\r\n        {dataset.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      // suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 3. Generates Bar graph for Emp of the Week awards created by users\r\n  weeklyAwardsGranted = () => {\r\n    const labels = [];\r\n    const granted = [];\r\n\r\n    for (let i = 0; i < this.state.grantedMostWeek.length; i++) {\r\n      labels.push(\r\n        this.state.grantedMostWeek[i][0] +\r\n          ' ' +\r\n          this.state.grantedMostWeek[i][1]\r\n      );\r\n      granted.push(this.state.grantedMostWeek[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Week Awards Granted',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: granted,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Employee of the Week</h1>\r\n        {granted.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      // suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 4. Generates Bar graph for Emp of the Week awards won by users\r\n  weeklyAwardsReceived = () => {\r\n    const labels = [];\r\n    const received = [];\r\n    for (let i = 0; i < this.state.mostWeekAwards.length; i++) {\r\n      labels.push(\r\n        this.state.mostWeekAwards[i][0] + ' ' + this.state.mostWeekAwards[i][1]\r\n      );\r\n      received.push(this.state.mostWeekAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Week Awards Received',\r\n          backgroundColor: 'rgba(83,51,237,0.2)',\r\n          borderColor: 'rgba(83,51,237,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\r\n          hoverBorderColor: 'rgba(83,51,237,1)',\r\n          data: received,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Employee of the Week</h1>\r\n        {received.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      // suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 5. Generates Bar graph for Emp of the Month Created by Users\r\n  monthlyAwardsGranted = () => {\r\n    const labels = [];\r\n    const granted = [];\r\n \r\n    for (let i = 0; i < this.state.grantedMostMonth.length; i++) {\r\n      labels.push(\r\n        this.state.grantedMostMonth[i][0] +\r\n          ' ' +\r\n          this.state.grantedMostMonth[i][1]\r\n      );\r\n      granted.push(this.state.grantedMostMonth[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Month Awards Granted',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: granted,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Employee of the Month</h1>\r\n        {granted.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      // suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 6. Generates Bar graph for Emp of Month Awards received by users\r\n  monthlyAwardsReceived = () => {\r\n    const labels = [];\r\n    const received = [];\r\n    for (let i = 0; i < this.state.mostMonthAwards.length; i++) {\r\n      labels.push(\r\n        this.state.mostMonthAwards[i][0] +\r\n          ' ' +\r\n          this.state.mostMonthAwards[i][1]\r\n      );\r\n      received.push(this.state.mostMonthAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Month Awards Received',\r\n          backgroundColor: 'rgba(83,51,237,0.2)',\r\n          borderColor: 'rgba(83,51,237,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\r\n          hoverBorderColor: 'rgba(83,51,237,1)',\r\n          data: received,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Employee of the Month</h1>\r\n        {received.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      // suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 7. lists general statistics\r\n  generalStats = () => {\r\n    return (\r\n      <div>\r\n        <h1>General Stats</h1>\r\n        Total Users: {this.state.totalUser} <br />\r\n        Total Admins: {this.state.totalAdmin} <br />\r\n        {/* Total # of Award Winners: {this.state.withMostAwards.length} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 1: totals\r\n  totalsReport = () => {\r\n    return (\r\n      <div>\r\n        <div className=\"report\">{this.generalStats()}</div>\r\n        <div className=\"report\">{this.totalAwardsWonReport()}</div>\r\n        <div className=\"report\">{this.totalGrantedAwardsReport()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 2: awards received\r\n  awardsReceivedReport = () => {\r\n    return (\r\n      <div className=\"report-container\">\r\n        <div className=\"report\">{this.monthlyAwardsReceived()}</div>\r\n        <div className=\"report\">{this.weeklyAwardsReceived()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 3: awards granted\r\n  awardsGrantedReport = () => {\r\n    return (\r\n      <div>\r\n        <div className=\"report\">{this.monthlyAwardsGranted()}</div>\r\n        <div className=\"report\">{this.weeklyAwardsGranted()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Displays chosen report\r\n  RunReport = () => {\r\n    if (this.state.option === '1') {\r\n      return this.totalsReport();\r\n    } else if (this.state.option === '2') {\r\n      return this.awardsReceivedReport();\r\n    } else if (this.state.option === '3') {\r\n      return this.awardsGrantedReport();\r\n    } else {\r\n      return <div>No report selected</div>;\r\n    }\r\n  };\r\n\r\n  // On select input change handler\r\n  onChange = e => {\r\n    this.setState({ option: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label>Select Report</Label>\r\n            <Input\r\n              className=\"input--form\"\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"exampleSelect\"\r\n              onChange={this.onChange}\r\n            >\r\n              <option>-</option>\r\n              <option value=\"1\">Totals</option>\r\n              <option value=\"2\">Received Awards</option>\r\n              <option value=\"3\">Granted Awards</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Form>\r\n        <div>{this.RunReport()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports;\r\n","/*\r\n * Description: Component for Admin dashboard\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Col, Row, Container } from 'reactstrap';\r\nimport ViewUsers from './adminViewUsers';\r\nimport ViewAdmins from './adminViewAdmins';\r\nimport Reports from './sideViewComponents/reports';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      buttonPressed: '',\r\n    };\r\n  }\r\n\r\n  // Displays appropriate component\r\n  componentDidMount() {\r\n    if (this.props.location.state) {\r\n      if (this.props.location.state.from === 1)\r\n        this.setState({ buttonPressed: 1 });\r\n      else if (this.props.location.state.from === 2)\r\n        this.setState({ buttonPressed: 2 });\r\n    } else this.setState({ buttonPressed: 0 });\r\n  }\r\n  // Sets which component to display\r\n  handleClick = button => {\r\n    this.setState({ buttonPressed: button });\r\n  };\r\n\r\n  // Renders component based on button pressed\r\n  renderComponent = () => {\r\n    if (this.state.buttonPressed === 1) return <ViewUsers />;\r\n    else if (this.state.buttonPressed === 2) return <ViewAdmins />;\r\n    else if (this.state.buttonPressed === 3) return <Reports />;\r\n    else\r\n      return (\r\n        <div>\r\n          <h1>Admin Dashboard</h1>\r\n          <p>\r\n            Welcome to the admin dashboard. From here you can add, edit, or delete\r\n            users and admins. To get started select an option from the menu on\r\n            the left.\r\n          </p>\r\n        </div>\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row className=\"admin--dash\">\r\n          <Col xs=\"3\">\r\n            <div className=\"admin--menu\">\r\n              <h1>Menu</h1>\r\n              <a href=\"#0\" className={this.state.buttonPressed === 1 ? 'active' : 'not-active'} onClick={() => this.handleClick(1)}>\r\n                View Users\r\n              </a>\r\n              <a href=\"#0\" className={this.state.buttonPressed === 2 ? 'active' : 'not-active'} onClick={() => this.handleClick(2)}>\r\n                View Admins\r\n              </a>\r\n              <a href=\"#0\" className={this.state.buttonPressed === 3 ? 'active' : 'not-active'} onClick={() => this.handleClick(3)}>\r\n                View Reports\r\n              </a>\r\n            </div>\r\n          </Col>\r\n          <Col\r\n            sm=\"12\"\r\n            md={{ size: 6, offset: 1 }}\r\n            className=\"admin--dash--content\"\r\n          >\r\n            {this.renderComponent()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport Date from './sideViewComponents/date';\r\nimport UserAccountInfo from './sideViewComponents/userAccountInfo';\r\nimport Stats from './sideViewComponents/stats';\r\nimport {Link} from 'react-router-dom';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nfunction SideSection(props) {\r\n    return (\r\n        <Container>\r\n            <Date currentDate={props.currentDate} currentDay={props.currentDay}/>\r\n\r\n            <UserAccountInfo/>\r\n\r\n            <Link to=\"/updateUserInfo\" currentDate={props.currentDate}>\r\n                <button>Update</button>\r\n            </Link>\r\n\r\n            <Stats\r\n                awardData={props.awardData}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SideSection;\r\n","import React from 'react';\r\nimport SideSection from './sideSection';\r\nimport UserHomePage from './userHomePage';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nclass DesignAward extends UserHomePage {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"2\" style={{ border: '1px solid black' }}>\r\n            <SideSection\r\n              userType={this.state.userType}\r\n              currentDate={this.state.currentDate}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs=\"5\" style={{ border: '1px solid red' }}>\r\n            <h1>Design Area</h1>\r\n          </Col>\r\n\r\n          <Col xs=\"5\" style={{ border: '1px solid green' }}>\r\n            <h1>Employee of the </h1>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesignAward;\r\n","/*\r\n * Description: Admin component to add new Admins to DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  FormFeedback,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass CreateAdmin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      admin_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      validate: false,\r\n      visible: false,\r\n      invalidAdmin: false,\r\n      invalidPW: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  // Sets state on input change\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      validate: false,\r\n      invalidAdmin: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // On submit function. Makes post request to endpoint.\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Get access token and create header for auth\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    const { password, confirmPW, admin_name } = this.state;\r\n\r\n    // Confirm password, makes sure form is not empty\r\n    if (admin_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (admin_name === '') {\r\n      this.setState({\r\n        invalidAdmin: true,\r\n        errorMsg: 'You must enter a username',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else if (admin_name !== '' && password !== '') {\r\n      // Post request. Passing new admin info and auth token\r\n      axios\r\n        .post(\r\n          '/admin',\r\n          {\r\n            admin_name: this.state.admin_name,\r\n            password: this.state.password,\r\n          },\r\n          config\r\n        )\r\n        .then(res => {\r\n          this.setState(\r\n            {\r\n              visible: true,\r\n              admin_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              invalidAdmin: false,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 second\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 2,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          // Catching this error means Username is unvailable\r\n          console.log(err);\r\n          this.setState({\r\n            invalidAdmin: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\r\n            Admin has been created!\r\n          </Alert>\r\n          <div className=\"login--form\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">New Admin</h1>\r\n            </Col>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"input--form\"\r\n                    invalid={this.state.invalidAdmin}\r\n                    name=\"admin_name\"\r\n                    id=\"admin_id\"\r\n                    placeholder=\"Username\"\r\n                    value={this.state.admin_name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    {this.state.errorMsg}\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.invalidPW}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"pw_id\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.validate}\r\n                    type=\"password\"\r\n                    name=\"confirmPW\"\r\n                    id=\"cpw_id\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={this.state.confirmPW}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Password doesn't match!\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" type=\"submit\" className=\"input--form\">Add Admin</Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAdmin;\r\n","/*\r\n * Description: Component for editing Admin users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      admin_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      validate: false,\r\n      invalidAdmin: false,\r\n      visible: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAdmin();\r\n  }\r\n\r\n  // On form input change handler to set state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidAdmin: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Get Admin that will be edited\r\n  getAdmin = () => {\r\n    this.setState({\r\n      id: this.props.location.state.id,\r\n      admin_name: this.props.location.state.admin_name,\r\n    });\r\n  };\r\n\r\n  // Save update to admin\r\n  saveEdit = e => {\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    const { password, confirmPW, id, admin_name } = this.state;\r\n    // PW validation\r\n    if (admin_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (admin_name === '') {\r\n      this.setState({\r\n        invalidAdmin: true,\r\n        errorMsg: 'You must enter a username.',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else {\r\n      // Patch request to API endpoint to update admin.\r\n      // Passes access token for auth.\r\n      axios\r\n        .patch(\r\n          `/admin/${id}`,\r\n          {\r\n            admin_name: this.state.admin_name,\r\n            password: this.state.password,\r\n          },\r\n          config\r\n        )\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState(\r\n            {\r\n              admin_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              invalidAdmin: false,\r\n              visible: true,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 seconds on success\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 2,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidAdmin: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\r\n            Admin has been saved!\r\n          </Alert>\r\n          <div className=\"login--form\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">Edit Admin</h1>\r\n            </Col>\r\n            <Form onSubmit={this.saveEdit}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"text\"\r\n                    invalid={this.state.invalidAdmin}\r\n                    name=\"admin_name\"\r\n                    id=\"admin_id\"\r\n                    value={this.state.admin_name}\r\n                    placeholder=\"Admin Name\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    {this.state.errorMsg}\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.invalidPW}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"pw_id\"\r\n                    value={this.state.password}\r\n                    placeholder=\"New Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password.\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.validate}\r\n                    type=\"password\"\r\n                    name=\"confirmPW\"\r\n                    id=\"cpw_id\"\r\n                    value={this.state.confirmPW}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Password doesn't match!\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" type=\"submit\" className=\"input--form\">Save Admin</Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAdmin;\r\n","/*\r\n * Description: Admin component to add new users to DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Label,\r\n  Alert,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass CreateUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user_name: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      sig: '',\r\n      previewSig: '',\r\n      visible: false,\r\n      validate: false,\r\n      invalidUsername: false,\r\n      invalidSig: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  // Sets state for inputs of type=text\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidUsername: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Set state for user's signature\r\n  onImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        sig: file,\r\n        previewSig: reader.result,\r\n        invalidSig: false,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n    console.log(this.state.sig);\r\n  };\r\n\r\n  // On submit function. Puts user input together as FormData\r\n  // and make post request to API endpoint\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { password, confirmPW, user_name, sig } = this.state;\r\n    if (user_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (user_name === '') {\r\n      this.setState({\r\n        invalidUsername: true,\r\n        errorMsg: 'You must enter a username.',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true })\r\n    } else if (sig === '') {\r\n      this.setState({ invalidSig: true })\r\n    }\r\n    else {\r\n      const formData = new FormData();\r\n      formData.append('username', this.state.user_name);\r\n      formData.append('password', this.state.password);\r\n      formData.append('first_name', this.state.first_name);\r\n      formData.append('last_name', this.state.last_name);\r\n      formData.append('sig', this.state.sig);\r\n      let token = localStorage.getItem('access_token'); // need access token for auth\r\n      let config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n      axios\r\n        .post('/user', formData, config)\r\n        .then(res => {\r\n          console.log(res);\r\n          // Clear state and display confirmation\r\n          this.setState(\r\n            {\r\n              user_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              first_name: '',\r\n              last_name: '',\r\n              sig: '',\r\n              previewSig: '',\r\n              visible: true,\r\n              validate: false,\r\n              invalidUsername: false,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 second\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 1,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidUsername: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { previewSig, errorMsg } = this.state;\r\n    let $previewSig = null;\r\n    if (previewSig) {\r\n      $previewSig = (\r\n        <img\r\n          alt=\"previewSig\"\r\n          src={previewSig}\r\n          style={{ height: '200px', width: '500px' }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible} className=\"form--alert\">\r\n            User has been created!\r\n          </Alert>\r\n\r\n          <div className=\"login--form\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">New User</h1>\r\n            </Col>\r\n            <Form onSubmit={this.handleSubmit} method=\"POST\">\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"email\"\r\n                    invalid={this.state.invalidUsername}\r\n                    name=\"user_name\"\r\n                    placeholder=\"Email\"\r\n                    value={this.state.user_name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">{errorMsg}</FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={this.state.first_name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={this.state.last_name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"password\"\r\n                    invalid={this.state.invalidPW}\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password.\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.validate}\r\n                    type=\"password\"\r\n                    name=\"confirmPW\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={this.state.confirmPW}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Password doesn't match!\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Label>Signature</Label>\r\n                  <Input type=\"file\" invalid={this.state.invalidSig} name=\"sig\" onChange={this.onImageChange} />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Please upload a signature.\r\n                </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                {$previewSig}\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" type=\"submit\" className=\"user-button input--form\">Create User</Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateUser;\r\n","/*\r\n * Description: Component for editing Users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  FormFeedback,\r\n  Label,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      user_name: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      sig: '',\r\n      validate: false,\r\n      invalidEmail: false,\r\n      invalidPW: false,\r\n      invalidSig: false,\r\n      visible: false,\r\n      errorMsg: '',\r\n      config: {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  // On form input change handler to set state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidEmail: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Handle upload of signature, show preview\r\n  onImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        sig: file,\r\n        previewSig: reader.result,\r\n        invalidSig: false,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n    console.log(this.state.sig);\r\n  };\r\n\r\n  // Get User that will be edited\r\n  getUser = () => {\r\n    this.setState({\r\n      id: this.props.location.state.id,\r\n      user_name: this.props.location.state.user_name,\r\n      first_name: this.props.location.state.first_name,\r\n      last_name: this.props.location.state.last_name,\r\n    });\r\n  };\r\n\r\n  // Save update\r\n  saveEdit = e => {\r\n    e.preventDefault();\r\n    const { password, confirmPW, id, user_name, sig } = this.state;\r\n    // PW validation\r\n    if (user_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (user_name === '') {\r\n      this.setState({\r\n        invalidEmail: true,\r\n        errorMsg: 'You must enter an email',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else if (sig === '') {\r\n      this.setState({ invalidSig: true });\r\n    } else {\r\n      const formData = new FormData();\r\n      formData.append('username', this.state.user_name);\r\n      formData.append('password', this.state.password);\r\n      formData.append('first_name', this.state.first_name);\r\n      formData.append('last_name', this.state.last_name);\r\n      formData.append('sig', this.state.sig);\r\n      // Patch request to API endpoint to update user.\r\n      // Passes access token for auth.\r\n      axios\r\n        .patch(`/user/${id}`, formData, this.state.config)\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState(\r\n            {\r\n              user_name: '',\r\n              first_name: '',\r\n              last_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              visible: true,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 seconds on success\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 1,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidEmail: true,\r\n            errorMsg: 'This email already exists',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { previewSig } = this.state;\r\n    let $previewSig = null;\r\n    if (previewSig) {\r\n      $previewSig = (\r\n        <img\r\n          alt=\"previewSig\"\r\n          src={previewSig}\r\n          style={{ height: '200px', width: '500px' }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert\r\n            color=\"success\"\r\n            isOpen={this.state.visible}\r\n            className=\"form--alert\"\r\n          >\r\n            User has been saved!\r\n          </Alert>\r\n\r\n          <div className=\"login--form\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">Edit User</h1>\r\n            </Col>\r\n            <Form onSubmit={this.saveEdit}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"email\"\r\n                    invalid={this.state.invalidEmail}\r\n                    name=\"user_name\"\r\n                    id=\"user_id\"\r\n                    value={this.state.user_name}\r\n                    placeholder=\"New Email\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    {this.state.errorMsg}\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"text\"\r\n                    name=\"first_name\"\r\n                    value={this.state.first_name}\r\n                    placeholder=\"First Name\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    type=\"text\"\r\n                    name=\"last_name\"\r\n                    value={this.state.last_name}\r\n                    placeholder=\"Last Name\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.invalidPW}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"pw_id\"\r\n                    value={this.state.password}\r\n                    placeholder=\"New Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password.\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    className=\"input--form\"\r\n                    invalid={this.state.validate}\r\n                    type=\"password\"\r\n                    name=\"confirmPW\"\r\n                    id=\"cpw_id\"\r\n                    value={this.state.confirmPW}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Password doesn't match!\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Label>Signature</Label>\r\n                  <Input\r\n                    type=\"file\"\r\n                    invalid={this.state.invalidSig}\r\n                    name=\"sig\"\r\n                    onChange={this.onImageChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    Please upload a signature.\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                {$previewSig}\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"user-button input--form\"\r\n                >\r\n                  Save User\r\n                </Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport UserLogin from './components/userLogin';\r\nimport Header from './components/header';\r\nimport AdminLogin from './components/adminLogin';\r\nimport ErrorPage from './components/error';\r\nimport HomePage from './components/home';\r\nimport ViewUsers from './components/adminViewUsers';\r\nimport UserHomePage from './components/userHomePage';\r\nimport UpdateUserInfo from './components/updateUserInfo';\r\nimport AdminDashboard from './components/adminDashboard';\r\nimport DesignAward from './components/designAward';\r\nimport CreateAdmin from './components/createAdmin';\r\nimport EditAdmin from './components/editAdmin';\r\nimport CreateUser from './components/createUser';\r\nimport EditUser from './components/editUser';\r\nimport './styles/styles.scss';\r\n\r\n// import { Provider } from \"react-redux\"\r\n\r\n// const userDataStore = createStore(allReducers);\r\n\r\nexport const history = createHistory();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            {/* Add routes here */}\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/userLogin\" component={UserLogin} />\r\n            <Route path=\"/userHomePage\" component={UserHomePage} />\r\n            <Route exact path=\"/admin\" component={AdminLogin} />\r\n            <Route path=\"/adminDash\" component={AdminDashboard} />\r\n            <Route path=\"/addAdmin\" component={CreateAdmin} />\r\n            <Route path=\"/editAdmin\" component={EditAdmin} />\r\n            <Route path=\"/editUser\" component={EditUser} />\r\n            <Route path=\"/createUser\" component={CreateUser} />\r\n            <Route path=\"/adminViewUsers\" component={ViewUsers} />\r\n            <Route path=\"/updateUserInfo\" component={UpdateUserInfo} />\r\n            <Route path=\"/designAward\" component={DesignAward} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}