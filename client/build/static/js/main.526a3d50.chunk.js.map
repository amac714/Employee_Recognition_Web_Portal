{"version":3,"sources":["components/userLogin.js","components/header.js","components/adminLogin.js","components/error.js","components/home.js","components/adminViewUsers.js","components/userCreateAward.js","components/userViewGivenAwards.js","components/sideViewComponents/date.js","components/sideViewComponents/stats.js","components/sideViewComponents/userAccountInfo.js","components/updateUserInfo.js","components/userHomePage.js","components/adminViewAdmins.js","components/sideViewComponents/reports.js","components/adminDashboard.js","components/sideSection.js","components/designAward.js","components/createAdmin.js","components/editAdmin.js","components/createUser.js","components/editUser.js","App.js","index.js"],"names":["UserLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","state","username","password","axios","post","then","res","setState","userToken","data","access_token","id","localStorage","setItem","first_name","last_name","props","history","push","catch","error","console","log","visible","validUN","validPW","onChange","_this$setState","defineProperty","target","name","value","onDismiss","react_default","a","createElement","Container","Alert","color","isOpen","toggle","className","Col","sm","md","size","offset","Form","onSubmit","FormGroup","Label","Input","type","invalid","placeholder","FormFeedback","Button","block","Component","Header","logout","removeItem","item","path","location","pathname","Nav","navbar","NavItem","NavLink","tag","Link","to","onClick","Navbar","light","expand","NavbarBrand","withRouter","AdminLogin","login","err","ErrorPage","HomePage","msg","textTitle","textMessage","_this2","get","Row","xs","style","paddingTop","href","src","alt","ViewUsers","getUsers","config","users","deleteUser","delete","concat","renderUsers","_ref","user_name","edit","key","scope","aria-hidden","headers","Authorization","getItem","Table","responsive","sort","b","map","UserCreateAward","sendAward","submitAward","award_type","time_granted","date_granted","cancelEntry","row","UserViewMyAwards","deleteAward","window","confirm","getAwardData","time_of_day","recipient_first_name","recipient_last_name","hour","substr","min","time_given","year","day_month","month","day_of_the_week","date_given","parseInt","bordered","striped","awards","Date","date","currentDay","currentDate","Stats","awardData","employeeOfTheWeek","employeeOfTheMonth","numberOfAwardsGiven","UserAccountInfo","currentUserData","UpdateUserInfo","_this$state","new_password1","new_password2","confirmNonEmptyFields","updateAccount","alert","_this$state2","length","bind","assertThisInitialized","currentData","cancelInput","UserHomePage","getUser","getAwards","weekAwardCount","monthAwardCount","forEach","awardDataCopy","renderPage","changeDisplay","displayType","patch","getDay","today","getMonth","getDate","getFullYear","dateData","displayPage","displayAwardData","display","userCreateAward","clearForm","sent","userViewGivenAwards","updateUserInfo","fluid","userAccountInfo","stats","ViewAdmins","getAdmins","admin_id","admins","deleteAdmin","renderAdmins","admin_name","Reports","totalGrantedAwardsReport","labels","dataset","i","grantedAwards","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","es","options","scales","yAxes","ticks","beginAtZero","suggestedMax","totalAwardsWonReport","withMostAwards","weeklyAwardsGranted","granted","grantedMostWeek","weeklyAwardsReceived","received","mostWeekAwards","monthlyAwardsGranted","bgColor","grantedMostMonth","getRandomColor","monthlyAwardsReceived","mostMonthAwards","generalStats","totalUser","totalAdmin","totalsReport","awardsReceivedReport","awardsGrantedReport","RunReport","option","loading","Math","floor","random","totalEmpWk","totalEmpMt","load","token","totalEmpWeek","totalEmpMonth","userGrantedMostAwards","total","week","userWithMostAwards","AdminDashboard","handleClick","button","buttonPressed","renderComponent","adminViewUsers","adminViewAdmins","reports","from","border","vertical","SideSection","DesignAward","sideSection","userType","CreateAdmin","confirmPW","validate","invalidAdmin","errorMsg","invalidPW","setTimeout","method","EditAdmin","getAdmin","saveEdit","CreateUser","onImageChange","reader","FileReader","file","files","onloadend","sig","previewSig","result","invalidSig","readAsDataURL","invalidUsername","formData","FormData","append","$previewSig","height","width","EditUser","invalidEmail","createHistory","App","Router","header","Switch","Route","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.526a3d50.chunk.js","sourcesContent":["/*\r\n * Description: The page where the user logs in. User will be directed to home screen upon successful login.\r\n * */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Input,\r\n  Col,\r\n  Label,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass UserLogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      userToken: '',\r\n      id: null,\r\n      visible: false,\r\n      validUN: null,\r\n      validPW: null,\r\n    };\r\n  }\r\n\r\n  /*\r\n   * Description: Handles form input when user attempts to login by sending input username/password to server endpoint. \r\n   * */\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if(this.state.username !== '' && this.state.password !== '') {\r\n      axios\r\n        .post('/user/login', {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        })\r\n        //successful login attempt\r\n        .then(res => {\r\n          this.setState({ userToken: res.data.access_token, id: res.data.id });\r\n          localStorage.setItem('username', this.state.username); //store username\r\n          localStorage.setItem('access_token', this.state.userToken); //store user's generated token\r\n          localStorage.setItem('id', this.state.id);\r\n          localStorage.setItem('password', this.state.password);\r\n          localStorage.setItem('first_name', this.state.first_name);\r\n          localStorage.setItem('last_name', this.state.last_name);\r\n\r\n          this.props.history.push('/userHomePage'); //route to user homepage\r\n        })\r\n\r\n        //unsuccesfful login attempt\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.setState({ visible: true })\r\n        });\r\n    }\r\n    else if (this.state.username === '') {\r\n      this.setState({ validUN: true })\r\n    }\r\n    else if (this.state.password === '') {\r\n      this.setState({ validPW: true })\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      validPW: this.state.validPW ? false : null,\r\n      validUN: this.state.validUN ? false : null,\r\n    });\r\n  };\r\n\r\n  // Closes alert, clears form\r\n  onDismiss = () => {\r\n    this.setState({\r\n      visible: false,\r\n      username: '',\r\n      password: '',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Alert color=\"danger\" isOpen={this.state.visible} toggle={this.onDismiss}>\r\n            Username or password is incorrect!\r\n          </Alert>\r\n        </div>\r\n        <div className=\"login--form\">\r\n          <div className=\"login--inner\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">Sign In</h1>\r\n            </Col>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Label>Username</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    invalid={this.state.validUN}\r\n                    className=\"input--login\"\r\n                    id=\"user_id\"\r\n                    placeholder=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">You must enter a username!</FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    invalid={this.state.validPW}\r\n                    className=\"input--login\"\r\n                    id=\"pw_id\"\r\n                    placeholder=\"******\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">You must enter a password</FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" block className=\"input--login\">Login</Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserLogin;\r\n","/*\r\n * Description: Navigation Bar component\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavLink,\r\n  Container,\r\n} from 'reactstrap';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  logout = e => {\r\n    e.preventDefault();\r\n    localStorage.removeItem('access_token');\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    // var awardType = 'Week';\r\n    // NavItems on Navbar changes based on pathname\r\n    const path = this.props.location.pathname;\r\n    let item;\r\n    if (path === '/')\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/admin\">\r\n              <span className=\"header--link\">Admin</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (path === '/adminDash')\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (\r\n      path === '/editAdmin' ||\r\n      path === '/addAdmin' ||\r\n      path === '/createUser' ||\r\n      path === '/editUser'\r\n    )\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"/adminDash\">\r\n              <span className=\"header--link\">Dashboard</span>\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n    else if (\r\n      path === '/userHomePage' ||\r\n      path === '/updateUserInfo' ||\r\n      path === '/designAward'\r\n    )\r\n      item = (\r\n        <Nav className=\"ml-auto\" navbar>\r\n          <NavItem />\r\n          <NavItem>\r\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\r\n              <span className=\"header--link\">Logout</span>\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      );\r\n\r\n    return (\r\n      <div className=\"header\">\r\n        <Container>\r\n          <Navbar light expand=\"md\">\r\n            <NavbarBrand>\r\n              <h1 className=\"header__title\">Ogma Employee Recognition</h1>\r\n            </NavbarBrand>\r\n            {item}\r\n          </Navbar>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","/*\r\n * Description: Admin login component\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormFeedback,\r\n  Input,\r\n  Col,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass AdminLogin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      visible: false,\r\n      validUN: null,\r\n      validPW: null,\r\n    };\r\n  }\r\n\r\n  // Handles logging in.\r\n  // Makes post request to API. Sets access token\r\n  login = e => {\r\n    e.preventDefault();\r\n    if (this.state.username !== '' && this.state.password !== '') {\r\n      axios\r\n        .post('/admin/login', {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        })\r\n        .then(res => {\r\n          // On successful login, store access token and id then redirect to admin dashboard\r\n          localStorage.setItem('access_token', res.data.access_token);\r\n          localStorage.setItem('admin_id', res.data.id);\r\n          this.props.history.push('/adminDash');\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({ visible: true });\r\n        });\r\n    } else if (this.state.username === '') {\r\n      this.setState({ validUN: true });\r\n    } else if (this.state.password === '') {\r\n      this.setState({ validPW: true });\r\n    }\r\n  };\r\n\r\n  // On change handler\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      validPW: this.state.validPW ? false : null,\r\n      validUN: this.state.validUN ? false : null,\r\n    });\r\n  };\r\n\r\n  // Closes alert, clears form\r\n  onDismiss = () => {\r\n    this.setState({\r\n      visible: false,\r\n      username: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div>\r\n          <Alert\r\n            color=\"danger\"\r\n            isOpen={this.state.visible}\r\n            toggle={this.onDismiss}\r\n          >\r\n            Username or password is incorrect!\r\n          </Alert>\r\n        </div>\r\n        <div className=\"login--form\">\r\n          <div className=\"login--inner\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <h1 className=\"login--title\">Admin Login</h1>\r\n            </Col>\r\n            <Form onSubmit={this.login}>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    invalid={this.state.validUN}\r\n                    className=\"input--login\"\r\n                    id=\"admin_id\"\r\n                    placeholder=\"Username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a username!\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <FormGroup>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    invalid={this.state.validPW}\r\n                    className=\"input--login\"\r\n                    id=\"pw_id\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <FormFeedback invalid=\"true\">\r\n                    You must enter a password\r\n                  </FormFeedback>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n                <Button color=\"primary\" block className=\"input--login\">\r\n                  SIGN IN\r\n                </Button>\r\n              </Col>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLogin;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Error! Something went wrong</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorPage;\r\n","/*\r\n * Description: The first page any user lands on.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport {Row, Col} from 'reactstrap';\r\nimport './homePage.css';\r\nimport {Link} from 'react-router-dom';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            msg: '',\r\n            textTitle: 'Recognize Great Work',\r\n            textMessage:\r\n                \"Cough hairball on conveniently placed pants pet my belly, you know you want to; seize the hand and shred it!,  sit and stare or your pillow is now my pet bed, so bite off human's toes ignore the human until she needs to get up, then climb on her lap and sprawl or lies down\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios\r\n            .get('/')\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({msg: res.data.data});\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>{this.state.msg}</h1>\r\n\r\n                <Row className=\"content\">\r\n                    <Col xs={{size: 4, offset: 1}} style={{paddingTop: '200px'}}>\r\n                        <h1 className=\"headerText\">{this.state.textTitle}</h1>\r\n                        <p>{this.state.textMessage}</p>\r\n \r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/userLogin\">\r\n                                <button>Login</button>\r\n                            </Link>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={{size: 1, offset: 2}}>\r\n                        <a href=\"https://placeholder.com\">\r\n                            <img src=\"https://via.placeholder.com/500x300\" alt=\"firstImg\"/>\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col xs={{size: 2, offset: 7}}>\r\n                        <a href=\"https://placeholder.com\">\r\n                            <img src=\"https://via.placeholder.com/500x300\" alt=\"secondImg\"/>\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","/*\r\n * Description: Component to display Users in DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Table, Container } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ViewUsers extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      users: [],\r\n      config: {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  // When component loads, get and render users\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  // Get users from DB with get request to API and sets state\r\n  getUsers = () => {\r\n    axios\r\n      .get('/user', this.state.config)\r\n      .then(res => this.setState({ users: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Delete user\r\n  deleteUser = id => {\r\n    axios\r\n      .delete(`/user/${id}`, this.state.config)\r\n      .then(this.getUsers())\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Render users into table\r\n  renderUsers = ({ id, user_name, first_name, last_name }) => {\r\n    const edit = {\r\n      pathname: '/editUser',\r\n      state: {\r\n        id: `${id}`,\r\n        user_name: `${user_name}`,\r\n        first_name: `${first_name}`,\r\n        last_name: `${last_name}`,\r\n      },\r\n    };\r\n\r\n    return (\r\n      <tr key={id}>\r\n        <th scope=\"row\">{id}</th>\r\n        <td>{user_name}</td>\r\n        <td>{first_name}</td>\r\n        <td>{last_name}</td>\r\n        <td>\r\n          <Link to={edit}>\r\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\r\n          </Link>\r\n        </td>\r\n        <td>\r\n          <a href=\"#0\" onClick={() => this.deleteUser(`${id}`)}>\r\n            <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.state;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <h1>Users</h1>\r\n          <Link to=\"/createUser\">Create New User</Link>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Username</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Edit</th>\r\n                <th>Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{users.sort((a, b) => a.id - b.id).map(this.renderUsers)}</tbody>\r\n          </Table>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewUsers;\r\n","/*\r\n * Description: Component that allows the user to create an employee award.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Container, Form, FormGroup, Input, Col, Label, Button, Row} from 'reactstrap';\r\n\r\n// import './userHomePageStyle.css'\r\n\r\n\r\nclass UserCreateAward extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        };\r\n    }\r\n\r\n    /**/\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    sendAward = () => {\r\n        this.props.submitAward(this.state);\r\n        this.setState({\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        })\r\n    };\r\n\r\n\r\n    cancelEntry = () => {\r\n        this.setState({\r\n            award_type: 'Employee of the Week',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"text-center section_header\">Create Award</h2>\r\n\r\n                <Form className=\"form_padding\">\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Award Type:</Label>\r\n                        <Col sm={8}>\r\n                            <Input\r\n                                className=\"input_width\"\r\n                                type=\"select\"\r\n                                name=\"award_type\"\r\n                                id=\"award_type\"\r\n                                onChange={this.onChange}\r\n                            >\r\n                                <option value=\"Employee of the Week\">Employee of the Week</option>\r\n                                <option value=\"Employee of the Month\">Employee of the Month</option>\r\n                            </Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">First Name:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='text'\r\n                                name='first_name'\r\n                                id='first_name'\r\n                                placeholder='First Name'\r\n                                value={this.state.first_name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Last Name:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='text'\r\n                                name='last_name'\r\n                                id='last_name'\r\n                                placeholder='Last Name'\r\n                                value={this.state.last_name}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Time Granted:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='time'\r\n                                name='time_granted'\r\n                                id='time_granted'\r\n                                placeholder=\"time\"\r\n                                value={this.state.time_granted}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"form_spacing\">\r\n                        <Label sm={4} className=\"input_text\">Date Granted:</Label>\r\n                        <Col sm={8}>\r\n                            <input\r\n                                className=\"input_width\"\r\n                                type='date'\r\n                                name='date_granted'\r\n                                id='date_granted'\r\n                                placeholder='Date Granted'\r\n                                value={this.state.date_granted}\r\n                                onChange={this.onChange}\r\n                            />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <div className=\"award_creation_buttons\">\r\n                        <Row>\r\n                            <Col sm={{size: 1, offset: 4}}>\r\n                                <Button type=\"button\" color=\"primary\" className=\"submit_create_award\" onClick={this.sendAward}>Submit</Button>\r\n                            </Col>\r\n                            <Col sm={{size: 1, offset: 1}}>\r\n                                <Button type=\"button\" color=\"danger\" className=\"cancel_create_award\" onClick={this.cancelEntry}>Cancel</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserCreateAward;","/*\r\n * Description: Displays the awards given by the user to the screen.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Table} from 'reactstrap';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\nclass UserViewMyAwards extends Component {\r\n\r\n    /*\r\n    * Description: Will send the award id to parent (userHomePage.js) and delete that award\r\n    * */\r\n    deleteAward = (e) => {\r\n\r\n        if (window.confirm(\"Confirm Delete\")) {\r\n            this.props.deleteAward(e)\r\n        } else {\r\n            console.log(\"I'm done\")\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     *  Description: Format how the awards are displayed to the screen.\r\n     * */\r\n    getAwardData = ({\r\n                        id,\r\n                        award_type,\r\n                        recipient_first_name,\r\n                        recipient_last_name,\r\n                        date_granted,\r\n                        time_granted,\r\n                    }) => {\r\n\r\n        // format time\r\n        let time_of_day;\r\n        let hour = time_granted.substr(0,2);\r\n        const min = time_granted.substr(2,3);\r\n\r\n        if(hour > 12){\r\n            time_of_day = \"PM\";\r\n            hour -= 12;\r\n        }\r\n        else{\r\n            time_of_day = \"AM\";\r\n            hour = hour.substr(1, 2);            // remove the \"0\" from the first part of the number\r\n        }\r\n\r\n        const time_given = hour + min + \" \" + time_of_day;\r\n\r\n\r\n        // format date\r\n        const month_list = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n        const year = date_granted.substr(0, 4);\r\n        const day_month = date_granted.substr(5, 7);\r\n        const month = day_month.substr(0, 2);\r\n        const day_of_the_week = day_month.substr(3, 4);\r\n\r\n        const date_given = month_list[parseInt(month) - 1] + \" \" + day_of_the_week + \", \" + year;\r\n\r\n        return (\r\n            <tr key={id} className=\"award_data\">\r\n                <th scope=\"row\">{award_type}</th>\r\n                <th>{recipient_first_name}</th>\r\n                <th>{recipient_last_name}</th>\r\n                <th>{date_given}</th>\r\n                <th>{time_given}</th>\r\n                <th>\r\n                    <button type=\"button\" onClick={() => this.deleteAward(id)}>Delete</button>\r\n                </th>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"text-center section_header\">Given Awards</h2>\r\n                <Table bordered striped responsive className=\"text-center award_table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Award Type</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Date Given</th>\r\n                        <th>Time Given</th>\r\n                        <th>Delete Award</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>{this.props.awards.map(this.getAwardData)}</tbody>\r\n                </Table>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserViewMyAwards;\r\n","/*\r\n * Description: Will display the date to the screen.\r\n * */\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Date extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"dateText text-center\">\r\n          <p><strong>{this.props.date.currentDay}</strong></p>\r\n          <p><strong>{this.props.date.currentDate}</strong></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Date;\r\n","import React, { Component } from 'react';\r\n\r\nclass Stats extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h2 className=\"text-center\"><strong>Submitted Awards</strong></h2>\r\n          <p>Employee of the Week: <strong>{this.props.awardData.employeeOfTheWeek}</strong></p>\r\n          <p>Employee of the Month: <strong>{this.props.awardData.employeeOfTheMonth}</strong></p>\r\n          <p>Total Awards: <strong>{this.props.awardData.numberOfAwardsGiven}</strong></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\n\r\nclass UserAccountInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n          <h2 className=\"text-center\"><strong>Account Information</strong></h2>\r\n          <p>Username: <strong>{this.props.currentUserData.user_name}</strong></p>\r\n          <p>First Name: <strong>{this.props.currentUserData.first_name}</strong></p>\r\n          <p>Last Name: <strong>{this.props.currentUserData.last_name}</strong></p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserAccountInfo;\r\n","import React, {Component} from 'react';\r\nimport {Button, Col, Form, FormGroup, Input, Label, Row} from 'reactstrap';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nclass UpdateUserInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            first_name: this.props.currentData.first_name,\r\n            last_name: this.props.currentData.last_name,\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n\r\n    handleSubmit = () => {\r\n        let {new_password1, new_password2} = this.state;\r\n\r\n        if (this.confirmNonEmptyFields()) {\r\n            this.props.updateAccount(this.state);\r\n        } else {\r\n            alert(\"Cannot have empty fields\")\r\n        }\r\n    };\r\n\r\n\r\n    confirmNonEmptyFields = () => {\r\n        const {first_name, last_name} = this.state;\r\n\r\n        if (first_name.length === 0 || last_name.length === 0) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <div className=\"login--form\">\r\n                        <div className=\"login--inner\">\r\n                            <Col xs=\"12\">\r\n                                <h1 className=\"text-center section_header\">Update Account Information</h1>\r\n\r\n                                <Form>\r\n                                    <FormGroup row>\r\n                                        <Label sm={4} className=\"input_text\">First Name:</Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                className=\"input--login\"\r\n                                                type=\"text\"\r\n                                                name=\"first_name\"\r\n                                                id=\"first_name\"\r\n                                                placeholder=\"first name\"\r\n                                                value={this.state.first_name}\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <FormGroup row>\r\n                                        <Label sm={4} className=\"input_text\">Last Name:</Label>\r\n                                        <Col sm={8}>\r\n                                            <Input\r\n                                                className=\"input--login\"\r\n                                                type=\"text\"\r\n                                                name=\"last_name\"\r\n                                                id=\"last_name\"\r\n                                                placeholder=\"last name\"\r\n                                                value={this.state.last_name}\r\n                                                onChange={this.onChange}\r\n                                            />\r\n                                        </Col>\r\n                                    </FormGroup>\r\n\r\n                                    <div className=\"submit_button\">\r\n                                        <Row>\r\n                                            <Col sm={{size: 1, offset: 4}}>\r\n                                                <Button type=\"button\" color=\"primary\" className=\"input--login\" onClick={this.handleSubmit}>Submit</Button>\r\n                                            </Col>\r\n                                            <Col sm={{size: 1, offset: 1}}>\r\n                                                <Button type=\"button\" color=\"danger\" className=\"input--login\" onClick={this.props.cancelInput}>Cancel</Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateUserInfo;\r\n","/*\r\n * Description: The home page of the user.\r\n * */\r\n\r\nimport React, {Component} from 'react';\r\nimport {Row, Col} from 'reactstrap';\r\nimport UserCreateAward from './userCreateAward';\r\nimport UserViewGivenAwards from './userViewGivenAwards';\r\nimport DateSection from './sideViewComponents/date'\r\nimport StatsSection from './sideViewComponents/stats'\r\nimport UserAccountInfoSection from './sideViewComponents/userAccountInfo'\r\nimport UpdateUserInfo from './updateUserInfo'\r\nimport axios from 'axios';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nexport default class UserHomePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Arrays used in generating dates\r\n        const monthName = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const dayName = [\r\n            'Sunday',\r\n            'Monday',\r\n            'Tuesday',\r\n            'Wednesday',\r\n            'Thursday',\r\n            'Friday',\r\n            'Saturday',\r\n        ];\r\n\r\n        // Get the day (i.e. Monday, Friday) of the week\r\n        const day = new Date(),\r\n            currentDay = dayName[day.getDay()];\r\n\r\n        // Get the month, day (i.e. 29), year\r\n        const today = new Date(),\r\n            currentDate =\r\n                monthName[today.getMonth()] +\r\n                ' ' +\r\n                today.getDate() +\r\n                ', ' +\r\n                today.getFullYear();\r\n\r\n        this.state = {\r\n            awards: [],\r\n            awardData: {\r\n                numberOfAwardsGiven: 0,\r\n                employeeOfTheWeek: 0,\r\n                employeeOfTheMonth: 0,\r\n            },\r\n            displayType: 'homepage',\r\n            dateData: {\r\n                currentDate: currentDate,\r\n                currentDay: currentDay,\r\n            },\r\n            id: localStorage.getItem('id'),\r\n            award_type: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n            currentUserData: [],\r\n            config: {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getAwards();\r\n        this.getUser();\r\n        // this.timer = setInterval(() => this.getAwards(), 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.timer = null;\r\n    }\r\n\r\n\r\n    getUser = () => {\r\n        axios\r\n            .get('/user/' + localStorage.getItem('id'))\r\n            .then(res => {\r\n                // console.log(res.data);\r\n                this.setState({\r\n                    currentUserData: res.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err)); // User is not authenticated\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Makes call to endpoint getting all of the awards given by the user. Will pass the web token to the endpoint for authentication.\r\n    */\r\n    getAwards = () => {\r\n        var weekAwardCount = 0;\r\n        var monthAwardCount = 0;\r\n\r\n        axios\r\n            .get('/user/' + this.state.id + '/award', this.state.config)\r\n            .then(res => {\r\n                res.data.forEach(function (item) {\r\n                    if (item.award_type === \"Employee of the Week\") {\r\n                        weekAwardCount++;\r\n                    } else if (item.award_type === \"Employee of the Month\") {\r\n                        monthAwardCount++;\r\n                    }\r\n                });\r\n\r\n                let awardDataCopy = this.state.awardData;\r\n                awardDataCopy['numberOfAwardsGiven'] = res.data.length;\r\n                awardDataCopy['employeeOfTheWeek'] = weekAwardCount;\r\n                awardDataCopy['employeeOfTheMonth'] = monthAwardCount;\r\n\r\n                this.setState({\r\n                    awards: res.data,\r\n                    awardData: awardDataCopy,\r\n                })\r\n            })\r\n            .catch(err => console.log(err)); // User is not authenticated\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Create award\r\n    * */\r\n    submitAward = (e) => {\r\n        axios\r\n            .post(\r\n                'http://localhost:5000/user/' + this.state.id + '/award',\r\n                {\r\n                    award_type: e.award_type,\r\n                    first_name: e.first_name,\r\n                    last_name: e.last_name,\r\n                    time_granted: e.time_granted,\r\n                    date_granted: e.date_granted,\r\n                },\r\n                this.state.config\r\n            )\r\n            .then(res => {\r\n                console.log(res);\r\n                // console.log(res.data);\r\n                this.renderPage();\r\n                this.props.history.push('/userHomePage'); //route to user homepage\r\n                this.getAwards()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                alert(\"ERROR: User does not exist\")\r\n            });\r\n    };\r\n\r\n    /*\r\n    * Description: Clears award form\r\n    * */\r\n    renderPage = () => {\r\n        this.setState({\r\n            award_type: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            time_granted: '',\r\n            date_granted: '',\r\n        })\r\n    };\r\n\r\n    /*\r\n    * Description: Change main display between award + db award info AND updating info form\r\n    * */\r\n    changeDisplay = () => {\r\n        if (this.state.displayType === \"homepage\") {\r\n            this.setState({\r\n                displayType: 'updateUserInfo'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                displayType: 'homepage'\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Update user First + Last name\r\n    * */\r\n    updateAccount = e => {\r\n        axios\r\n            .patch(\r\n                '/user/' + this.state.id,\r\n                {\r\n                    first_name: e.first_name,\r\n                    last_name: e.last_name,\r\n                    username: localStorage.getItem('username'),\r\n                    password: localStorage.getItem('password')\r\n                },\r\n                this.state.config\r\n            )\r\n\r\n            .then(res => {\r\n                console.log(res);\r\n                this.getUser();\r\n                this.changeDisplay();\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n\r\n    /*\r\n    * Description: Delete a certain award\r\n    * */\r\n    deleteAward = e => {\r\n        console.log(e);\r\n\r\n        axios.delete('/user/' + this.state.id + '/award/' + e, this.state.config)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.getAwards();\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    };\r\n\r\n    render() {\r\n        const display = this.state.displayType;\r\n        let displayPage;\r\n        let displayAwardData;\r\n\r\n        if (display === \"homepage\") {\r\n            displayPage =\r\n                <div>\r\n                    <UserCreateAward\r\n                        clearForm={this.state.sent}\r\n                        submitAward={this.submitAward}\r\n                    />\r\n                </div>;\r\n\r\n            displayAwardData =\r\n                <div>\r\n                    <UserViewGivenAwards\r\n                        awards={this.state.awards}\r\n                        deleteAward={this.deleteAward}\r\n                    />\r\n                </div>\r\n\r\n        } else if (display === \"updateUserInfo\") {\r\n            displayPage =\r\n                <div>\r\n                    <UpdateUserInfo\r\n                        updateAccount={this.updateAccount}\r\n                        cancelInput={this.changeDisplay}\r\n                        currentData={this.state.currentUserData}\r\n                    />\r\n                </div>\r\n        }\r\n\r\n        return (\r\n            <Container fluid className=\"page\">\r\n                <Row>\r\n                    <Col xs=\"2\" className=\"side_section\">\r\n                        <div className=\"side_section_date text-center\">\r\n                            <DateSection\r\n                                date={this.state.dateData}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"side_section_user_data\">\r\n                            <UserAccountInfoSection currentUserData={this.state.currentUserData}/>\r\n                            <button onClick={this.changeDisplay}>Update Account</button>\r\n                        </div>\r\n\r\n                        <div className=\"side_section_stats\">\r\n                            <StatsSection\r\n                                awardData={this.state.awardData}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    {this.state.displayType === \"homepage\" &&\r\n                    <Col xs=\"4\">\r\n                        {displayPage}\r\n                    </Col>\r\n                    }\r\n\r\n                    {this.state.displayType === \"homepage\" &&\r\n                    <Col xs=\"6\">\r\n                        {displayAwardData}\r\n                    </Col>\r\n                    }\r\n\r\n                    {this.state.displayType === \"updateUserInfo\" &&\r\n                    <Col xs=\"10\">\r\n                        {displayPage}\r\n                    </Col>\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Description: Component to display Admin users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Table, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass ViewAdmins extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            admin_id: '',\r\n            admins: [],\r\n            config: {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    // When component loads, render table with admin users\r\n    componentDidMount() {\r\n        this.getAdmins();\r\n    }\r\n\r\n    // Get admin users from DB and set state\r\n    getAdmins = () => {\r\n        axios\r\n            .get('/admin', this.state.config)\r\n            .then(res => this.setState({\r\n                admin_id: localStorage.getItem('admin_id'),\r\n                admins: res.data,\r\n            }))\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Delete selected admin from table\r\n    deleteAdmin = id => {\r\n        axios\r\n            .delete(`/admin/${id}`, this.state.config)\r\n            .then(this.getAdmins())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Render admin users into table\r\n    renderAdmins = ({id, admin_name}) => {\r\n        // Edit object, sets a state to pass as prop to Edit component\r\n        const edit = {\r\n            pathname: '/editAdmin',\r\n            state: {\r\n                id: `${id}`,\r\n                admin_name: `${admin_name}`,\r\n            },\r\n        };\r\n\r\n        if (this.state.admin_id === `${id}`) {\r\n            // Don't let logged in admin delete themselves\r\n            return (\r\n                <tr key={id} style={{ color: 'red'}}>\r\n                    <th scope=\"row\">{id}</th>\r\n                    <td>{admin_name}</td>\r\n                    <td>\r\n                        <Link to={edit}>\r\n                            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"/>\r\n                        </Link>\r\n                    </td>\r\n                    <td>Logged in as this admin</td>\r\n                </tr>\r\n            )\r\n        } else {\r\n            // Admin users are mapped into the table so key is set to id\r\n            return (\r\n                <tr key={id}>\r\n                    <th scope=\"row\">{id}</th>\r\n                    <td>{admin_name}</td>\r\n                    <td>\r\n                        <Link to={edit}>\r\n                            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"/>\r\n                        </Link>\r\n                    </td>\r\n                    <td>\r\n                        <a href=\"#0\" onClick={() => this.deleteAdmin(`${id}`)}>\r\n                            <i className=\"fas fa-trash-alt\" style={{color: 'red'}}/>\r\n                        </a>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        // get admins array and sort by id\r\n        const { admins } = this.state;\r\n        admins.sort((a, b) => a.id - b.id);\r\n        \r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <h1>Admins</h1>\r\n                    <Link to=\"/addAdmin\">Add New Admin</Link>\r\n                    <Table responsive>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Admin Name</th>\r\n                            <th>Edit</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>{admins.map(this.renderAdmins)}</tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewAdmins;\r\n","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass Reports extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: '',\r\n      grantedAwards: [],\r\n      grantedMostWeek: [],\r\n      grantedMostMonth: [],\r\n      withMostAwards: [],\r\n      mostWeekAwards: [],\r\n      mostMonthAwards: [],\r\n      totalUser: 0,\r\n      totalAdmin: 0,\r\n      totalEmpWk: 0,\r\n      totalEmpMt: 0,\r\n      load: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n    axios\r\n      .get('/bi/report', config)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          totalUser: res.data.totalUser,\r\n          totalAdmin: res.data.totalAdmin,\r\n          totalEmpWk: res.data.totalEmpWeek,\r\n          totalEmpMt: res.data.totalEmpMonth,\r\n          grantedAwards: res.data.userGrantedMostAwards.total,\r\n          grantedMostWeek: res.data.userGrantedMostAwards.week,\r\n          grantedMostMonth: res.data.userGrantedMostAwards.month,\r\n          withMostAwards: res.data.userWithMostAwards.total,\r\n          mostWeekAwards: res.data.userWithMostAwards.week,\r\n          mostMonthAwards: res.data.userWithMostAwards.month,\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // 1. Generates Bar graph for total number of awards created by users\r\n  totalGrantedAwardsReport = () => {\r\n    const labels = [];\r\n    const dataset = [];\r\n\r\n    for (let i = 0; i < this.state.grantedAwards.length; i++) {\r\n      labels.push(\r\n        this.state.grantedAwards[i][0] + ' ' + this.state.grantedAwards[i][1]\r\n      );\r\n      dataset.push(this.state.grantedAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Total Awards Granted',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: dataset,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h1>Granted Awards</h1>\r\n          {dataset.length > 0 ? (\r\n            <Bar\r\n              data={data}\r\n              // height={100}\r\n              options={{\r\n                scales: {\r\n                  yAxes: [\r\n                    {\r\n                      display: true,\r\n                      ticks: {\r\n                        beginAtZero: true,\r\n                        suggestedMax: 10,\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              }}\r\n            />\r\n          ) : (\r\n            <p>No data in this report</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 2. Generates Bar graph for total number of Awards won\r\n  totalAwardsWonReport = () => {\r\n    const labels = [];\r\n    const dataset = [];\r\n    for (let i = 0; i < this.state.withMostAwards.length; i++) {\r\n      labels.push(\r\n        this.state.withMostAwards[i][0] + ' ' + this.state.withMostAwards[i][1]\r\n      );\r\n      dataset.push(this.state.withMostAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Total Awards Received',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: dataset,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h1>Received Awards</h1>\r\n        {dataset.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 3. Generates Bar graph for Emp of the Week awards created by users\r\n  weeklyAwardsGranted = () => {\r\n    const labels = [];\r\n    const granted = [];\r\n\r\n    for (let i = 0; i < this.state.grantedMostWeek.length; i++) {\r\n      labels.push(\r\n        this.state.grantedMostWeek[i][0] +\r\n          ' ' +\r\n          this.state.grantedMostWeek[i][1]\r\n      );\r\n      granted.push(this.state.grantedMostWeek[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Week Awards Granted',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: granted,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Employee of the Week (Granted)</h2>\r\n        {granted.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 4. Generates Bar graph for Emp of the Week awards won by users\r\n  weeklyAwardsReceived = () => {\r\n    const labels = [];\r\n    const received = [];\r\n    for (let i = 0; i < this.state.mostWeekAwards.length; i++) {\r\n      labels.push(\r\n        this.state.mostWeekAwards[i][0] + ' ' + this.state.mostWeekAwards[i][1]\r\n      );\r\n      received.push(this.state.mostWeekAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Week Awards Received',\r\n          backgroundColor: 'rgba(83,51,237,0.2)',\r\n          borderColor: 'rgba(83,51,237,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\r\n          hoverBorderColor: 'rgba(83,51,237,1)',\r\n          data: received,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Employee of the Week Awards (Received)</h2>\r\n        {received.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 5. Generates Bar graph for Emp of the Month Created by Users\r\n  monthlyAwardsGranted = () => {\r\n    const labels = [];\r\n    const granted = [];\r\n    const bgColor = [];\r\n    for (let i = 0; i < this.state.grantedMostMonth.length; i++) {\r\n      labels.push(\r\n        this.state.grantedMostMonth[i][0] +\r\n          ' ' +\r\n          this.state.grantedMostMonth[i][1]\r\n      );\r\n      granted.push(this.state.grantedMostMonth[i][2]);\r\n      bgColor.push(this.getRandomColor());\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Month Awards Granted',\r\n          backgroundColor: 'rgba(249,105,14,0.2)',\r\n          borderColor: 'rgba(249,105,14,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(249,105,14,0.4)',\r\n          hoverBorderColor: 'rgba(249,105,14,1)',\r\n          data: granted,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Employee of the Month (Granted)</h2>\r\n        {granted.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 6. Generates Bar graph for Emp of Month Awards received by users\r\n  monthlyAwardsReceived = () => {\r\n    const labels = [];\r\n    const received = [];\r\n    for (let i = 0; i < this.state.mostMonthAwards.length; i++) {\r\n      labels.push(\r\n        this.state.mostMonthAwards[i][0] +\r\n          ' ' +\r\n          this.state.mostMonthAwards[i][0]\r\n      );\r\n      received.push(this.state.mostMonthAwards[i][2]);\r\n    }\r\n\r\n    const data = {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Emp of the Month Awards Received',\r\n          backgroundColor: 'rgba(249,105,14,0.2)',\r\n          borderColor: 'rgba(249,105,14,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(249,105,14,0.4)',\r\n          hoverBorderColor: 'rgba(249,105,14,1)',\r\n          data: received,\r\n        },\r\n      ],\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <h2>Employee of the Month Awards (Received)</h2>\r\n        {received.length > 0 ? (\r\n          <Bar\r\n            data={data}\r\n            // height={100}\r\n            options={{\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    display: true,\r\n                    ticks: {\r\n                      beginAtZero: true,\r\n                      suggestedMax: 10,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <p>No data in this report</p>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // 7. lists general statistics\r\n  generalStats = () => {\r\n    return (\r\n      <div>\r\n        <h1>General Stats</h1>\r\n        Total Users: {this.state.totalUser} <br />\r\n        Total Admins: {this.state.totalAdmin} <br />\r\n        {/* Total # of Award Winners: {this.state.withMostAwards.length} */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 1: totals\r\n  totalsReport = () => {\r\n    return (\r\n      <div>\r\n        {this.generalStats()}\r\n        {this.totalAwardsWonReport()}\r\n        {this.totalGrantedAwardsReport()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 2: awards received\r\n  awardsReceivedReport = () => {\r\n    return (\r\n      <div>\r\n        {this.monthlyAwardsReceived()}\r\n        {this.weeklyAwardsReceived()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // report 3: awards granted\r\n  awardsGrantedReport = () => {\r\n    return (\r\n      <div>\r\n        {this.monthlyAwardsGranted()}\r\n        {this.weeklyAwardsGranted()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Displays chosen report\r\n  RunReport = () => {\r\n    if (this.state.option === '1') {\r\n      return this.totalsReport();\r\n    } else if (this.state.option === '2') {\r\n      return this.awardsReceivedReport();\r\n    } else if (this.state.option === '3') {\r\n      return this.awardsGrantedReport();\r\n    } else {\r\n      return <div>No reports selected</div>;\r\n    }\r\n  };\r\n\r\n  // On select input change handler\r\n  onChange = e => {\r\n    this.setState({ option: e.target.value });\r\n  };\r\n\r\n  loading = () => {\r\n    return <div>Loading...</div>;\r\n  };\r\n\r\n  // Returns a random color in hex\r\n  getRandomColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n\r\n    return color;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form>\r\n          <FormGroup>\r\n            <Label>Select Report</Label>\r\n            <Input\r\n              type=\"select\"\r\n              name=\"select\"\r\n              id=\"exampleSelect\"\r\n              onChange={this.onChange}\r\n            >\r\n              <option>-</option>\r\n              <option value=\"1\">Totals</option>\r\n              <option value=\"2\">Received Awards</option>\r\n              <option value=\"3\">Granted Awards</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Form>\r\n        <div>{this.RunReport()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reports;\r\n","/*\r\n * Description: Component for Admin dashboard\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport { Nav, NavItem, NavLink, Col, Row, Container } from 'reactstrap';\r\nimport ViewUsers from './adminViewUsers';\r\nimport ViewAdmins from './adminViewAdmins';\r\nimport Reports from './sideViewComponents/reports';\r\n\r\nclass AdminDashboard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      buttonPressed: '',\r\n    };\r\n  }\r\n\r\n  // Displays appropriate component\r\n  componentDidMount() {\r\n    if (this.props.location.state) {\r\n      if (this.props.location.state.from === 1)\r\n        this.setState({ buttonPressed: 1 });\r\n      else if (this.props.location.state.from === 2)\r\n        this.setState({ buttonPressed: 2 });\r\n    } else this.setState({ buttonPressed: 0 });\r\n  }\r\n  // Sets which component to display\r\n  handleClick = button => {\r\n    this.setState({ buttonPressed: button });\r\n  };\r\n\r\n  // Renders component based on button pressed\r\n  renderComponent = () => {\r\n    if (this.state.buttonPressed === 1) return <ViewUsers />;\r\n    else if (this.state.buttonPressed === 2) return <ViewAdmins />;\r\n    else if (this.state.buttonPressed === 3) return <Reports />;\r\n    else return <h2>Admin Dashboard</h2>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n       <Container>\r\n          <Row>\r\n            <Col xs=\"2\" style={{ border: '1px solid black' }}>\r\n              <h3>Menu</h3>\r\n              <Nav vertical>\r\n                <NavItem>\r\n                  <NavLink href=\"#\" onClick={() => this.handleClick(1)}>\r\n                    View Users\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"#\" onClick={() => this.handleClick(2)}>\r\n                    View Admins\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink href=\"#\" onClick={() => this.handleClick(3)}>\r\n                    View Reports\r\n                </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </Col>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 1 }}>\r\n              {this.renderComponent()}\r\n            </Col>\r\n          </Row>\r\n       </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport Date from './sideViewComponents/date';\r\nimport UserAccountInfo from './sideViewComponents/userAccountInfo';\r\nimport Stats from './sideViewComponents/stats';\r\nimport {Link} from 'react-router-dom';\r\nimport Container from \"reactstrap/es/Container\";\r\n\r\n\r\nfunction SideSection(props) {\r\n    return (\r\n        <Container>\r\n            <Date currentDate={props.currentDate} currentDay={props.currentDay}/>\r\n\r\n            <UserAccountInfo/>\r\n\r\n            <Link to=\"/updateUserInfo\" currentDate={props.currentDate}>\r\n                <button>Update</button>\r\n            </Link>\r\n\r\n            <Stats\r\n                awardData={props.awardData}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default SideSection;\r\n","import React from 'react';\r\nimport SideSection from './sideSection';\r\nimport UserHomePage from './userHomePage';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nclass DesignAward extends UserHomePage {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col xs=\"2\" style={{ border: '1px solid black' }}>\r\n            <SideSection\r\n              userType={this.state.userType}\r\n              currentDate={this.state.currentDate}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs=\"5\" style={{ border: '1px solid red' }}>\r\n            <h1>Design Area</h1>\r\n          </Col>\r\n\r\n          <Col xs=\"5\" style={{ border: '1px solid green' }}>\r\n            <h1>Employee of the </h1>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DesignAward;\r\n","/*\r\n * Description: Admin component to add new Admins to DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Label,\r\n  FormFeedback,\r\n  Alert,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass CreateAdmin extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      admin_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      validate: false,\r\n      visible: false,\r\n      invalidAdmin: false,\r\n      invalidPW: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  // Sets state on input change\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      validate: false,\r\n      invalidAdmin: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // On submit function. Makes post request to endpoint.\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // Get access token and create header for auth\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    const { password, confirmPW, admin_name } = this.state;\r\n\r\n    // Confirm password, makes sure form is not empty\r\n    if (admin_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (admin_name === '') {\r\n      this.setState({\r\n        invalidAdmin: true,\r\n        errorMsg: 'You must enter a username',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else if (admin_name !== '' && password !== '') {\r\n      // Post request. Passing new admin info and auth token\r\n      axios\r\n        .post(\r\n          '/admin',\r\n          {\r\n            admin_name: this.state.admin_name,\r\n            password: this.state.password,\r\n          },\r\n          config\r\n        )\r\n        .then(res => {\r\n          this.setState(\r\n            {\r\n              visible: true,\r\n              admin_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              invalidAdmin: false,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 second\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 2,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          // Catching this error means Username is unvailable\r\n          console.log(err);\r\n          this.setState({\r\n            invalidAdmin: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible}>\r\n            Admin has been created!\r\n          </Alert>\r\n\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <h2>Create New Admin</h2>\r\n          </Col>\r\n          <Form onSubmit={this.handleSubmit} method=\"POST\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  invalid={this.state.invalidAdmin}\r\n                  name=\"admin_name\"\r\n                  id=\"admin_id\"\r\n                  value={this.state.admin_name}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  {this.state.errorMsg}\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                  invalid={this.state.invalidPW}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"pw_id\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  You must enter a password\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Confirm Password</Label>\r\n                <Input\r\n                  invalid={this.state.validate}\r\n                  type=\"password\"\r\n                  name=\"confirmPW\"\r\n                  id=\"cpw_id\"\r\n                  value={this.state.confirmPW}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  Password doesn't match!\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Button type=\"submit\">Create Admin</Button>\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAdmin;\r\n","/*\r\n * Description: Component for editing Admin users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      admin_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      validate: false,\r\n      invalidAdmin: false,\r\n      visible: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAdmin();\r\n  }\r\n\r\n  // On form input change handler to set state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidAdmin: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Get Admin that will be edited\r\n  getAdmin = () => {\r\n    this.setState({\r\n      id: this.props.location.state.id,\r\n      admin_name: this.props.location.state.admin_name,\r\n    });\r\n  };\r\n\r\n  // Save update to admin\r\n  saveEdit = e => {\r\n    let token = localStorage.getItem('access_token');\r\n    let config = {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    };\r\n\r\n    e.preventDefault();\r\n    const { password, confirmPW, id, admin_name } = this.state;\r\n    // PW validation\r\n    if (admin_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (admin_name === '') {\r\n      this.setState({\r\n        invalidAdmin: true,\r\n        errorMsg: 'You must enter a username.',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else {\r\n      // Patch request to API endpoint to update admin.\r\n      // Passes access token for auth.\r\n      axios\r\n        .patch(\r\n          `/admin/${id}`,\r\n          {\r\n            admin_name: this.state.admin_name,\r\n            password: this.state.password,\r\n          },\r\n          config\r\n        )\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState(\r\n            {\r\n              admin_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              invalidAdmin: false,\r\n              visible: true,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 seconds on success\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 2,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidAdmin: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible}>\r\n            Admin has been saved!\r\n          </Alert>\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <h2>Edit Admin</h2>\r\n          </Col>\r\n          <Form onSubmit={this.saveEdit}>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"text\"\r\n                  invalid={this.state.invalidAdmin}\r\n                  name=\"admin_name\"\r\n                  id=\"admin_id\"\r\n                  value={this.state.admin_name}\r\n                  placeholder=\"Admin Name\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  {this.state.errorMsg}\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  invalid={this.state.invalidPW}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"pw_id\"\r\n                  value={this.state.password}\r\n                  placeholder=\"New Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  You must enter a password.\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  invalid={this.state.validate}\r\n                  type=\"password\"\r\n                  name=\"confirmPW\"\r\n                  id=\"cpw_id\"\r\n                  value={this.state.confirmPW}\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  Password doesn't match!\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Button type=\"submit\">Save Admin</Button>\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAdmin;\r\n","/*\r\n * Description: Admin component to add new users to DB\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  Label,\r\n  Alert,\r\n  FormFeedback,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass CreateUser extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user_name: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      sig: '',\r\n      previewSig: '',\r\n      visible: false,\r\n      validate: false,\r\n      invalidUsername: false,\r\n      invalidSig: false,\r\n      errorMsg: '',\r\n    };\r\n  }\r\n\r\n  // Sets state for inputs of type=text\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidUsername: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Set state for user's signature\r\n  onImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        sig: file,\r\n        previewSig: reader.result,\r\n        invalidSig: false,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n    console.log(this.state.sig);\r\n  };\r\n\r\n  // On submit function. Puts user input together as FormData\r\n  // and make post request to API endpoint\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { password, confirmPW, user_name, sig } = this.state;\r\n    if (user_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (user_name === '') {\r\n      this.setState({\r\n        invalidUsername: true,\r\n        errorMsg: 'You must enter a username.',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true })\r\n    } else if (sig === '') {\r\n      this.setState({ invalidSig: true })\r\n    }\r\n    else {\r\n      const formData = new FormData();\r\n      formData.append('username', this.state.user_name);\r\n      formData.append('password', this.state.password);\r\n      formData.append('first_name', this.state.first_name);\r\n      formData.append('last_name', this.state.last_name);\r\n      formData.append('sig', this.state.sig);\r\n      let token = localStorage.getItem('access_token'); // need access token for auth\r\n      let config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n      axios\r\n        .post('/user', formData, config)\r\n        .then(res => {\r\n          console.log(res);\r\n          // Clear state and display confirmation\r\n          this.setState(\r\n            {\r\n              user_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              first_name: '',\r\n              last_name: '',\r\n              sig: '',\r\n              previewSig: '',\r\n              visible: true,\r\n              validate: false,\r\n              invalidUsername: false,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 second\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 1,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidUsername: true,\r\n            errorMsg: 'This username is unvailable.',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { previewSig, errorMsg } = this.state;\r\n    let $previewSig = null;\r\n    if (previewSig) {\r\n      $previewSig = (\r\n        <img\r\n          alt=\"previewSig\"\r\n          src={previewSig}\r\n          style={{ height: '200px', width: '500px' }}\r\n        />\r\n      );\r\n    } else {\r\n      $previewSig = <div>Upload a signature</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible}>\r\n            User has been created!\r\n          </Alert>\r\n\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <h2>Create New User</h2>\r\n          </Col>\r\n          <Form onSubmit={this.handleSubmit} method=\"POST\">\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Email</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  invalid={this.state.invalidUsername}\r\n                  name=\"user_name\"\r\n                  id=\"user_id\"\r\n                  value={this.state.user_name}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">{errorMsg}</FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>First Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  value={this.state.first_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Last Name</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  value={this.state.last_name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  invalid={this.state.invalidPW}\r\n                  name=\"password\"\r\n                  id=\"pw_id\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  You must enter a password.\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Confirm Password</Label>\r\n                <Input\r\n                  invalid={this.state.validate}\r\n                  type=\"password\"\r\n                  name=\"confirmPW\"\r\n                  value={this.state.confirmPW}\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  Password doesn't match!\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Signature</Label>\r\n                <Input type=\"file\" invalid={this.state.invalidSig} name=\"sig\" onChange={this.onImageChange} />\r\n                <FormFeedback invalid=\"true\">\r\n                  Please upload a signature.\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              {$previewSig}\r\n            </Col>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Button type=\"submit\">Create User</Button>\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateUser;\r\n","/*\r\n * Description: Component for editing Users\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport {\r\n  Alert,\r\n  Container,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Col,\r\n  FormFeedback,\r\n  Label,\r\n} from 'reactstrap';\r\nimport axios from 'axios';\r\n\r\nclass EditUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: '',\r\n      user_name: '',\r\n      first_name: '',\r\n      last_name: '',\r\n      password: '',\r\n      confirmPW: '',\r\n      sig: '',\r\n      validate: false,\r\n      invalidEmail: false,\r\n      invalidPW: false,\r\n      invalidSig: false,\r\n      visible: false,\r\n      errorMsg: '',\r\n      config: {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUser();\r\n  }\r\n\r\n  // On form input change handler to set state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n      invalidEmail: false,\r\n      validate: false,\r\n      invalidPW: false,\r\n    });\r\n  };\r\n\r\n  // Handle upload of signature, show preview\r\n  onImageChange = e => {\r\n    e.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n    reader.onloadend = () => {\r\n      this.setState({\r\n        sig: file,\r\n        previewSig: reader.result,\r\n        invalidSig: false,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n    console.log(this.state.sig);\r\n  };\r\n\r\n  // Get User that will be edited\r\n  getUser = () => {\r\n    this.setState({\r\n      id: this.props.location.state.id,\r\n      user_name: this.props.location.state.user_name,\r\n      first_name: this.props.location.state.first_name,\r\n      last_name: this.props.location.state.last_name,\r\n    });\r\n  };\r\n\r\n  // Save update\r\n  saveEdit = e => {\r\n    e.preventDefault();\r\n    const { password, confirmPW, id, user_name, sig } = this.state;\r\n    // PW validation\r\n    if (user_name !== '' && password !== confirmPW) {\r\n      this.setState({ validate: true });\r\n    } else if (user_name === '') {\r\n      this.setState({\r\n        invalidEmail: true,\r\n        errorMsg: 'You must enter an email',\r\n      });\r\n    } else if (password === '') {\r\n      this.setState({ invalidPW: true });\r\n    } else if (sig === '') {\r\n      this.setState({ invalidSig: true });\r\n    } else {\r\n      // Patch request to API endpoint to update user.\r\n      // Passes access token for auth.\r\n      axios\r\n        .patch(\r\n          `/user/${id}`,\r\n          {\r\n            username: this.state.user_name,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            password: this.state.password,\r\n          },\r\n          this.state.config\r\n        )\r\n        .then(res => {\r\n          console.log(res);\r\n          this.setState(\r\n            {\r\n              user_name: '',\r\n              first_name: '',\r\n              last_name: '',\r\n              password: '',\r\n              confirmPW: '',\r\n              validate: false,\r\n              visible: true,\r\n            },\r\n            () => {\r\n              // Redirect back to admin dashboard after 1 seconds on success\r\n              window.setTimeout(() => {\r\n                this.props.history.push({\r\n                  pathname: '/adminDash',\r\n                  state: {\r\n                    from: 1,\r\n                  },\r\n                });\r\n              }, 1000);\r\n            }\r\n          );\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            invalidEmail: true,\r\n            errorMsg: 'This email already exists',\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { previewSig } = this.state;\r\n    let $previewSig = null;\r\n    if (previewSig) {\r\n      $previewSig = (\r\n        <img\r\n          alt=\"previewSig\"\r\n          src={previewSig}\r\n          style={{ height: '200px', width: '500px' }}\r\n        />\r\n      );\r\n    } else {\r\n      $previewSig = <div>Upload a signature</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Alert color=\"success\" isOpen={this.state.visible}>\r\n            User has been saved!\r\n          </Alert>\r\n\r\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <h2>Edit User</h2>\r\n          </Col>\r\n          <Form onSubmit={this.saveEdit}>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"email\"\r\n                  invalid={this.state.invalidEmail}\r\n                  name=\"user_name\"\r\n                  id=\"user_id\"\r\n                  value={this.state.user_name}\r\n                  placeholder=\"New Email\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  {this.state.errorMsg}\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  value={this.state.first_name}\r\n                  placeholder=\"First Name\"\r\n                  onChange={this.onChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  value={this.state.last_name}\r\n                  placeholder=\"Last Name\"\r\n                  onChange={this.onChange}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  invalid={this.state.invalidPW}\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"pw_id\"\r\n                  value={this.state.password}\r\n                  placeholder=\"New Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  You must enter a password.\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Input\r\n                  invalid={this.state.validate}\r\n                  type=\"password\"\r\n                  name=\"confirmPW\"\r\n                  id=\"cpw_id\"\r\n                  value={this.state.confirmPW}\r\n                  placeholder=\"Confirm Password\"\r\n                  onChange={this.onChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  Password doesn't match!\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <Label>Signature</Label>\r\n                <Input\r\n                  type=\"file\"\r\n                  invalid={this.state.invalidSig}\r\n                  name=\"sig\"\r\n                  onChange={this.onImageChange}\r\n                />\r\n                <FormFeedback invalid=\"true\">\r\n                  Please upload a signature.\r\n                </FormFeedback>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              {$previewSig}\r\n            </Col>\r\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <Button type=\"submit\">Save User</Button>\r\n            </Col>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditUser;\r\n","import React, { Component } from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport UserLogin from './components/userLogin';\r\nimport Header from './components/header';\r\nimport AdminLogin from './components/adminLogin';\r\nimport ErrorPage from './components/error';\r\nimport HomePage from './components/home';\r\nimport ViewUsers from './components/adminViewUsers';\r\nimport UserHomePage from './components/userHomePage';\r\nimport UpdateUserInfo from './components/updateUserInfo';\r\nimport AdminDashboard from './components/adminDashboard';\r\nimport DesignAward from './components/designAward';\r\nimport CreateAdmin from './components/createAdmin';\r\nimport EditAdmin from './components/editAdmin';\r\nimport CreateUser from './components/createUser';\r\nimport EditUser from './components/editUser';\r\nimport './styles/styles.scss';\r\n\r\n// import { Provider } from \"react-redux\"\r\n\r\n// const userDataStore = createStore(allReducers);\r\n\r\nexport const history = createHistory();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={history}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            {/* Add routes here */}\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/userLogin\" component={UserLogin} />\r\n            <Route path=\"/userHomePage\" component={UserHomePage} />\r\n            <Route exact path=\"/admin\" component={AdminLogin} />\r\n            <Route path=\"/adminDash\" component={AdminDashboard} />\r\n            <Route path=\"/addAdmin\" component={CreateAdmin} />\r\n            <Route path=\"/editAdmin\" component={EditAdmin} />\r\n            <Route path=\"/editUser\" component={EditUser} />\r\n            <Route path=\"/createUser\" component={CreateUser} />\r\n            <Route path=\"/adminViewUsers\" component={ViewUsers} />\r\n            <Route path=\"/updateUserInfo\" component={UpdateUserInfo} />\r\n            <Route path=\"/designAward\" component={DesignAward} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}