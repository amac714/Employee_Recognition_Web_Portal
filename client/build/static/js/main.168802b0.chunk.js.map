{"version":3,"sources":["components/userLogin.js","components/header.js","components/adminLogin.js","components/error.js","components/home.js","components/adminViewUsers.js","components/sideViewComponents/date.js","components/sideViewComponents/userAccountInfo.js","components/sideViewComponents/stats.js","components/sideSection.js","components/userCreateAward.js","components/userViewGivenAwards.js","components/updateUserInfo.js","components/userHomePage.js","components/adminViewAdmins.js","components/sideViewComponents/reports.js","components/adminDashboard.js","components/designAward.js","components/createAdmin.js","components/editAdmin.js","components/createUser.js","components/editUser.js","App.js","index.js"],"names":["UserLogin","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","axios","post","username","state","password","then","res","setState","userToken","data","access_token","id","localStorage","setItem","first_name","last_name","props","history","push","catch","error","console","log","onChange","defineProperty","target","name","value","react_default","a","createElement","Container","Col","sm","md","size","offset","Form","onSubmit","FormGroup","Label","Input","type","placeholder","Button","Component","Header","logout","removeItem","item","path","location","pathname","Nav","className","navbar","NavItem","NavLink","tag","Link","to","onClick","Navbar","color","light","expand","NavbarBrand","withRouter","AdminLogin","login","getItem","err","ErrorPage","HomePage","msg","textTitle","textMessage","_this2","get","Row","xs","style","paddingTop","href","src","alt","ViewUsers","getUsers","config","users","deleteUser","delete","concat","renderUsers","_ref","user_name","edit","key","scope","aria-hidden","headers","Authorization","Table","sort","b","map","Date","date","currentDay","currentDate","UserAccountInfo","currentUserData","Stats","awardData","employeeOfTheWeek","employeeOfTheMonth","numberOfAwardsGiven","SideSection","userAccountInfo","stats","UserCreateAward","sendAward","submitAward","award_type","time_granted","date_granted","UserViewMyAwards","deleteAward","window","confirm","getAwardData","recipient_first_name","recipient_last_name","awards","UpdateUserInfo","_this$state","new_password1","new_password2","confirmNonEmptyFields","updateAccount","alert","_this$state2","length","bind","assertThisInitialized","currentData","border","UserHomePage","getUser","getAwards","weekAwardCount","monthAwardCount","forEach","awardDataCopy","renderPage","changeDisplay","displayType","patch","getDay","today","getMonth","getDate","getFullYear","dateData","timer","setInterval","displayPage","displayAwardData","display","userCreateAward","clearForm","sent","userViewGivenAwards","updateUserInfo","ViewAdmins","getAdmins","admin_id","admins","deleteAdmin","renderAdmins","admin_name","Reports","totalGrantedAwardsReport","labels","dataset","bgColor","i","grantedAwards","getRandomColor","datasets","backgroundColor","hoverBackgroundColor","es","totalAwardsWonReport","withMostAwards","label","borderColor","borderWidth","hoverBorderColor","height","options","scales","yAxes","ticks","beginAtZero","suggestedMax","weeklyAwardsGranted","granted","grantedMostWeek","weeklyAwardsReceived","received","mostWeekAwards","xAxes","monthlyAwardsGranted","grantedMostMonth","monthlyAwardsReceived","mostMonthAwards","generalStats","totalUser","totalAdmin","RunReport","option","loading","Math","floor","random","totalEmpWk","totalEmpMt","load","token","totalEmpWeek","totalEmpMonth","userGrantedMostAwards","total","week","month","userWithMostAwards","AdminDashboard","handleClick","button","buttonPressed","renderComponent","adminViewUsers","adminViewAdmins","reports","vertical","DesignAward","components_sideSection","userType","CreateAdmin","confirmPW","validate","visible","renderRedirect","Alert","isOpen","method","invalid","FormFeedback","EditAdmin","getAdmin","saveEdit","CreateUser","onImageChange","reader","FileReader","file","files","onloadend","sig","previewSig","result","readAsDataURL","formData","FormData","append","redirect","$previewSig","width","EditUser","createHistory","App","Router","header","Switch","Route","exact","component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.168802b0.chunk.js","sourcesContent":["/*\n * Description: The page where the user logs in. User will be directed to home screen upon successful login.\n * */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  Label,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass UserLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      userToken: '',\n      id: null,\n    };\n  }\n\n  /*\n   * Description: Handles form input when user attempts to login by sending input username/password to server endpoint. \n   * */\n  handleSubmit = e => {\n    e.preventDefault();\n    axios\n      .post('/user/login', {\n        username: this.state.username,\n        password: this.state.password,\n      })\n      //successful login attempt\n      .then(res => {\n        this.setState({ userToken: res.data.access_token , id: res.data.id});\n        localStorage.setItem('username', this.state.username); //store username\n        localStorage.setItem('access_token', this.state.userToken); //store user's generated token\n        localStorage.setItem('id', this.state.id);\n        localStorage.setItem('password', this.state.password);\n        localStorage.setItem('first_name', this.state.first_name);\n        localStorage.setItem('last_name', this.state.last_name);\n\n        this.props.history.push('/userHomePage'); //route to user homepage\n      })\n\n      //unsuccesfful login attempt\n      .catch(function(error) {\n        console.log(error);\n      });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <h2>Sign In</h2>\n        </Col>\n        <Form onSubmit={this.handleSubmit}>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <FormGroup>\n              <Label>Username</Label>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                id=\"user_id\"\n                placeholder=\"username\"\n                value={this.state.username}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <FormGroup>\n              <Label>Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"pw_id\"\n                placeholder=\"******\"\n                value={this.state.password}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <Button>Login</Button>\n          </Col>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default UserLogin;\n","/*\n * Description: Navigation Bar component\n */\n\nimport React, { Component } from 'react';\nimport { Nav, NavItem, Navbar, NavbarBrand, NavLink } from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass Header extends Component {\n  logout = e => {\n    e.preventDefault();\n    localStorage.removeItem('access_token');\n    this.props.history.push('/');\n  };\n\n  render() {\n    var awardType = 'Week';\n    // NavItems on Navbar changes based on pathname\n    const path = this.props.location.pathname;\n    let item;\n    if (path === '/')\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/admin\">\n              <h5>Admin</h5>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (\n      path === '/adminDash' ||\n      path === '/addAdmin' ||\n      path === '/createUser'\n    )\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/adminDash\">\n              <h5>Dashboard</h5>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"\" onClick={this.logout}><h5>Logout</h5></NavLink>\n          </NavItem>\n        </Nav>\n      );\n    else if (\n      path === '/userHomePage' ||\n      path === '/updateUserInfo' ||\n      path === '/designAward'\n    )\n      item = (\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} to=\"/designAward\">\n              <button>New Employee Award</button>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"/userHomePage\">\n              <h5>Profile</h5>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} to=\"\" onClick={this.logout}>\n              <h5>Logout</h5>\n            </NavLink>\n          </NavItem>\n        </Nav>\n      );\n\n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\">\n          <NavbarBrand>\n            <h5>Ogma Employee Recognition</h5>\n          </NavbarBrand>\n          {item}\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Header);\n","/*\n * Description: Admin login component\n */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  Label,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass AdminLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      // validate: {\n      //   error: ''\n      // }\n    };\n  }\n\n  // Handles logging in. \n  // Makes post request to API. Sets access token\n  login = e => {\n    e.preventDefault();\n    axios\n      .post('/admin/login', {\n        username: this.state.username,\n        password: this.state.password,\n      })\n      .then(res => {\n        // On successful login, store access token and id then redirect to admin dashboard\n        localStorage.setItem('access_token', res.data.access_token);\n        localStorage.setItem('admin_id', res.data.id);\n        console.log(localStorage.getItem('admin_id'));\n        this.props.history.push('/adminDash');\n      })\n      .catch(err => console.log(err));\n  };\n\n  // On change handler\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n          <h2>Admin Sign In</h2>\n        </Col>\n        <Form onSubmit={this.login}>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <FormGroup>\n              <Label>Username</Label>\n              <Input\n                type=\"text\"\n                name=\"username\"\n                id=\"admin_id\"\n                placeholder=\"Admin\"\n                value={this.state.username}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <FormGroup>\n              <Label>Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"pw_id\"\n                placeholder=\"******\"\n                value={this.state.password}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n          </Col>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <Button>Login</Button>\n          </Col>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default AdminLogin;\n","import React, { Component } from 'react';\n\nclass ErrorPage extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Error! Something went wrong</h2>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;\n","/*\n * Description: The first page any user lands on.\n * */\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Row, Col } from 'reactstrap';\nimport './homePage.css';\nimport { Link } from 'react-router-dom';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      msg: '',\n      textTitle: 'Recognize Great Work',\n      textMessage:\n        \"Cough hairball on conveniently placed pants pet my belly, you know you want to; seize the hand and shred it!,  sit and stare or your pillow is now my pet bed, so bite off human's toes ignore the human until she needs to get up, then climb on her lap and sprawl or lies down\",\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get('/')\n      .then(res => {\n        console.log(res);\n        this.setState({ msg: res.data.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.state.msg}</h1>\n\n        <Row className=\"content\">\n          <Col xs={{ size: 4, offset: 1 }} style={{ paddingTop: '200px' }}>\n            <h1 className=\"headerText\">{this.state.textTitle}</h1>\n            <p>{this.state.textMessage}</p>\n\n            <div className=\"buttons\">\n              <Link to=\"/\">\n                <button>Signup</button>\n              </Link>\n              <Link to=\"/userLogin\">\n                <button>Login</button>\n              </Link>\n            </div>\n          </Col>\n          <Col xs={{ offset: 2 }}>\n            <a href=\"https://placeholder.com\">\n              <img src=\"https://via.placeholder.com/500x300\" alt=\"firstImg\" />\n            </a>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={{ offset: 7 }}>\n            <a href=\"https://placeholder.com\">\n              <img src=\"https://via.placeholder.com/500x300\" alt=\"secondImg\" />\n            </a>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","/*\n * Description: Component to display Users in DB\n */\n\nimport React, { Component } from 'react';\nimport { Table, Container } from 'reactstrap';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nclass ViewUsers extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      config: {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n        },\n      },\n    };\n  }\n\n  // When component loads, get and render users\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  // Get users from DB with get request to API and sets state\n  getUsers = () => {\n    axios\n      .get('/user', this.state.config)\n      .then(res => this.setState({ users: res.data }))\n      .catch(err => console.log(err));\n  };\n\n  // Delete user\n  deleteUser = id => {\n    axios\n      .delete(`/user/${id}`, this.state.config)\n      .then(this.getUsers())\n      .catch(err => console.log(err));\n  };\n\n  // Render users into table\n  renderUsers = ({ id, user_name, first_name, last_name }) => {\n    const edit = {\n      pathname: '/editUser',\n      state: {\n        id: `${id}`,\n        user_name: `${user_name}`,\n        first_name: `${first_name}`,\n        last_name: `${last_name}`,\n      },\n    };\n\n    return (\n      <tr key={id}>\n        <th scope=\"row\">{id}</th>\n        <td>{user_name}</td>\n        <td>{first_name}</td>\n        <td>{last_name}</td>\n        <td>\n          <Link to={edit}>\n            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\" />\n          </Link>\n        </td>\n        <td>\n          <a href=\"#0\" onClick={() => this.deleteUser(`${id}`)}>\n            <i className=\"fas fa-trash-alt\" style={{ color: 'red' }} />\n          </a>\n        </td>\n      </tr>\n    );\n  };\n\n  render() {\n    const { users } = this.state;\n    return (\n      <div>\n        <Container>\n          <h1>Users</h1>\n          <Link to=\"/createUser\">Create New User</Link>\n          <Table>\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Username</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Edit</th>\n                <th>Delete</th>\n              </tr>\n            </thead>\n            <tbody>{users.sort((a, b) => a.id - b.id).map(this.renderUsers)}</tbody>\n          </Table>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default ViewUsers;\n","/*\n * Description: Will display the date to the screen.\n * */\n\nimport React, { Component } from 'react';\nimport './sideSection.css';\n\nclass Date extends Component {\n  render() {\n    return (\n      <div className=\"dateText\">\n        <p>{this.props.date.currentDay}</p>\n        <p>{this.props.date.currentDate}</p>\n      </div>\n    );\n  }\n}\n\nexport default Date;\n","import React, { Component } from 'react';\n\nclass UserAccountInfo extends Component {\n  render() {\n    return (\n      <div>\n        <p>Username: {this.props.currentUserData.user_name}</p>\n        <p>First Name: {this.props.currentUserData.first_name}</p>\n        <p>Last Name: {this.props.currentUserData.last_name}</p>\n      </div>\n    );\n  }\n}\n\nexport default UserAccountInfo;\n","import React, { Component } from 'react';\n\nclass Stats extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Submitted Awards</h2>\n        <p>Employee of the Week: {this.props.awardData.employeeOfTheWeek}</p>\n        <p>Employee of the Month: {this.props.awardData.employeeOfTheMonth}</p>\n        <p>Total Awards: {this.props.awardData.numberOfAwardsGiven}</p>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React from 'react';\nimport Date from './sideViewComponents/date';\nimport UserAccountInfo from './sideViewComponents/userAccountInfo';\nimport Stats from './sideViewComponents/stats';\nimport {Link} from 'react-router-dom';\n\n\nfunction SideSection(props) {\n    return (\n        <div>\n            <Date currentDate={props.currentDate} currentDay={props.currentDay}/>\n\n            <UserAccountInfo/>\n\n            <Link to=\"/updateUserInfo\" currentDate={props.currentDate}>\n                <button>Update</button>\n            </Link>\n\n            <Stats\n                awardData={props.awardData}\n            />\n        </div>\n    );\n}\n\nexport default SideSection;\n","/*\n * Description: Component that allows the user to create an employee award.\n * */\n\nimport React, {Component} from 'react';\nimport {Container, Form, FormGroup, Input, Col, Label, Button} from 'reactstrap';\n\n\nclass UserCreateAward extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            award_type: 'Week',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        };\n    }\n\n    /**/\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    sendAward = () => {\n        this.props.submitAward(this.state);\n        this.setState({\n            award_type: 'Week',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        })\n    };\n\n    render() {\n        return (\n            <Container>\n                <h2>Create Award</h2>\n\n                <Form>\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <FormGroup>\n                            <Label>Award Type</Label>\n                            <Input\n                                type=\"select\"\n                                name=\"award_type\"\n                                id=\"award_type\"\n                                onChange={this.onChange}\n                            >\n                                <option value=\"Week\">Week</option>\n                                <option value=\"Month\">Month</option>\n                            </Input>\n                        </FormGroup>\n                    </Col>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <FormGroup>\n                            <Label>First Name</Label>\n                            <br/>\n                            <input\n                                type='text'\n                                name='first_name'\n                                id='first_name'\n                                placeholder='First Name'\n                                value={this.state.first_name}\n                                onChange={this.onChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <FormGroup>\n                            <Label>Last Name</Label>\n                            <br/>\n                            <input\n                                type='text'\n                                name='last_name'\n                                id='last_name'\n                                placeholder='Last Name'\n                                value={this.state.last_name}\n                                onChange={this.onChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <Label>Time Granted</Label>\n                        <br/>\n                        <input\n                            type='time'\n                            name='time_granted'\n                            id='time_granted'\n                            placeholder='Time Granted'\n                            value={this.state.time_granted}\n                            onChange={this.onChange}\n                        />\n                    </Col>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <FormGroup>\n                            <Label>Date Granted</Label>\n                            <br/>\n                            <input\n                                type='date'\n                                name='date_granted'\n                                id='date_granted'\n                                placeholder='Date Granted'\n                                value={this.state.date_granted}\n                                onChange={this.onChange}\n                            />\n                        </FormGroup>\n                    </Col>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <Button type=\"button\" onClick={this.sendAward}>Submit</Button>\n                    </Col>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default UserCreateAward;","/*\n * Description: Displays the awards given by the user to the screen.\n * */\n\nimport React, {Component} from 'react';\nimport {Table} from 'reactstrap';\n\nclass UserViewMyAwards extends Component {\n\n    /*\n    * Description: Will send the award id to parent (userHomePage.js) and delete that award\n    * */\n    deleteAward = (e) => {\n\n        if (window.confirm(\"Confirm Delete\")) {\n            this.props.deleteAward(e)\n        } else {\n            console.log(\"I'm done\")\n        }\n\n\n    };\n\n\n    /*\n     *  Description: Format how the awards are displayed to the screen.\n     * */\n    getAwardData = ({\n                        id,\n                        award_type,\n                        recipient_first_name,\n                        recipient_last_name,\n                        date_granted,\n                        time_granted,\n                    }) => {\n        return (\n            <tr key={id}>\n                <th scope=\"row\">{award_type}</th>\n                <th>{recipient_first_name}</th>\n                <th>{recipient_last_name}</th>\n                <th>{date_granted}</th>\n                <th>{time_granted}</th>\n                <th>\n                    <button type=\"button\" onClick={() => this.deleteAward(id)}>Delete</button>\n                </th>\n            </tr>\n        );\n    };\n\n\n    render() {\n        return (\n            <div>\n                <h2>Given Awards</h2>\n                <Table>\n                    <thead>\n                    <tr>\n                        <th>Award Type</th>\n                        <th>Recipient First Name</th>\n                        <th>Recipient Last Name</th>\n                        <th>Date Given</th>\n                        <th>Time Given</th>\n                        <th>Delete Award</th>\n                    </tr>\n                    </thead>\n                    <tbody>{this.props.awards.map(this.getAwardData)}</tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default UserViewMyAwards;\n","import React, {Component} from 'react';\nimport {Button, Col, Form, FormGroup, Input, Row} from 'reactstrap';\n\n\nclass UpdateUserInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            first_name: '',\n            last_name: '',\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            first_name: this.props.currentData.first_name,\n            last_name: this.props.currentData.last_name,\n        })\n    }\n\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n\n    handleSubmit = () => {\n        let {new_password1, new_password2} = this.state;\n\n        if(this.confirmNonEmptyFields()){\n            this.props.updateAccount(this.state);\n        }else{\n            alert(\"Cannot have empty fields\")\n        }\n    };\n\n\n    confirmNonEmptyFields = () => {\n        const {first_name, last_name} = this.state;\n\n        if (first_name.length === 0 || last_name.length === 0) {\n            return false\n        } else {\n            return true\n        }\n\n    };\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col xs=\"12\" style={{border: '1px solid red'}}>\n                        <h1>Update Account Information</h1>\n\n                        <Form>\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                <h4>New Info</h4>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"first_name\"\n                                        id=\"first_name\"\n                                        placeholder=\"first name\"\n                                        value={this.state.first_name}\n                                        onChange={this.onChange}\n                                    />\n                                </FormGroup>\n                                <FormGroup>\n                                    <Input\n                                        type=\"text\"\n                                        name=\"last_name\"\n                                        id=\"last_name\"\n                                        placeholder=\"last name\"\n                                        value={this.state.last_name}\n                                        onChange={this.onChange}\n                                    />\n                                </FormGroup>\n\n                            </Col>\n                            <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                                <Button type=\"button\" onClick={this.handleSubmit}>Submit</Button>\n                            </Col>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default UpdateUserInfo;\n","/*\n * Description: The home page of the user.\n * */\n\nimport React, {Component} from 'react';\nimport SideSection from './sideSection';\nimport {Row, Col} from 'reactstrap';\nimport UserCreateAward from './userCreateAward';\nimport UserViewGivenAwards from './userViewGivenAwards';\nimport DateSection from './sideViewComponents/date'\nimport StatsSection from './sideViewComponents/stats'\nimport UserAccountInfoSection from './sideViewComponents/userAccountInfo'\nimport UpdateUserInfo from './updateUserInfo'\nimport axios from 'axios';\n\n\nclass UserHomePage extends Component {\n    constructor(props) {\n        super(props);\n\n        // Arrays used in generating dates\n        const monthName = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n        const dayName = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday',\n        ];\n\n        // Get the day (i.e. Monday, Friday) of the week\n        const day = new Date(),\n            currentDay = dayName[day.getDay()];\n\n        // Get the month, day (i.e. 29), year\n        const today = new Date(),\n            currentDate =\n                monthName[today.getMonth()] +\n                ' ' +\n                today.getDate() +\n                ', ' +\n                today.getFullYear();\n\n        this.state = {\n            awards: [],\n            awardData: {\n                numberOfAwardsGiven: 0,\n                employeeOfTheWeek: 0,\n                employeeOfTheMonth: 0,\n            },\n            displayType: 'homepage',\n            dateData: {\n                currentDate: currentDate,\n                currentDay: currentDay,\n            },\n            id: localStorage.getItem('id'),\n            award_type: '',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n            currentUserData: [],\n            config: {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`\n                },\n            },\n        };\n    }\n\n\n    componentDidMount() {\n        this.getAwards();\n        this.getUser();\n        this.timer = setInterval(() => this.getAwards(), 5000);\n    }\n\n    componentWillUnmount() {\n        this.timer = null;\n    }\n\n\n    getUser = () => {\n        axios\n            .get('/user/' + localStorage.getItem('id'))\n            .then(res => {\n                // console.log(res.data);\n                this.setState({\n                    currentUserData: res.data\n                });\n            })\n            .catch(err => console.log(err)); // User is not authenticated\n    };\n\n\n    /*\n    * Description: Makes call to endpoint getting all of the awards given by the user. Will pass the web token to the endpoint for authentication.\n    */\n    getAwards = () => {\n        var weekAwardCount = 0;\n        var monthAwardCount = 0;\n\n        axios\n            .get('/user/' + this.state.id + '/award', this.state.config)\n            .then(res => {\n                res.data.forEach(function (item) {\n                    if (item.award_type === \"Week\") {\n                        weekAwardCount++;\n                    } else if (item.award_type === \"Month\") {\n                        monthAwardCount++;\n                    }\n                });\n\n                let awardDataCopy = this.state.awardData;\n                awardDataCopy['numberOfAwardsGiven'] = res.data.length;\n                awardDataCopy['employeeOfTheWeek'] = weekAwardCount;\n                awardDataCopy['employeeOfTheMonth'] = monthAwardCount;\n\n                this.setState({\n                    awards: res.data,\n                    awardData: awardDataCopy,\n                })\n            })\n            .catch(err => console.log(err)); // User is not authenticated\n    };\n\n\n    /*\n    * Description: Create award\n    * */\n    submitAward = (e) => {\n        axios\n            .post(\n                'http://localhost:5000/user/' + this.state.id + '/award',\n                {\n                    award_type: e.award_type,\n                    first_name: e.first_name,\n                    last_name: e.last_name,\n                    time_granted: e.time_granted,\n                    date_granted: e.date_granted,\n                },\n                this.state.config\n            )\n            .then(res => {\n                // console.log(res);\n                // console.log(res.data);\n                this.renderPage();\n                this.props.history.push('/userHomePage'); //route to user homepage\n                this.getAwards()\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n\n    };\n\n    /*\n    * Description: Clears award form\n    * */\n    renderPage = () => {\n        this.setState({\n            award_type: '',\n            first_name: '',\n            last_name: '',\n            time_granted: '',\n            date_granted: '',\n        })\n    };\n\n    /*\n    * Description: Change main display between award + db award info AND updating info form\n    * */\n    changeDisplay = () => {\n        if (this.state.displayType === \"homepage\") {\n            this.setState({\n                displayType: 'updateUserInfo'\n            })\n        } else {\n            this.setState({\n                displayType: 'homepage'\n            })\n        }\n    };\n\n\n    /*\n    * Description: Update user First + Last name\n    * */\n    updateAccount = e => {\n        axios\n            .patch(\n                '/user/' + this.state.id,\n                {\n                    first_name: e.first_name,\n                    last_name: e.last_name,\n                },\n                this.state.config\n            )\n\n            .then(res => {\n                console.log(res);\n                this.getUser();\n                this.changeDisplay();\n            })\n            .catch(err => console.log(err));\n    };\n\n\n    /*\n    * Description: Delete a certain award\n    * */\n    deleteAward = e => {\n        console.log(e);\n\n        axios.delete('/user/' + this.state.id + '/award/' + e, this.state.config)\n            .then(res =>{\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n    };\n\n    render() {\n        const display = this.state.displayType;\n        let displayPage;\n        let displayAwardData;\n\n        if (display === \"homepage\") {\n            displayPage =\n                <div>\n                    <UserCreateAward\n                        clearForm={this.state.sent}\n                        submitAward={this.submitAward}\n                    />\n                </div>;\n\n            displayAwardData =\n                <div>\n                    <UserViewGivenAwards\n                        awards={this.state.awards}\n                        deleteAward={this.deleteAward}\n                    />\n                </div>\n\n        } else if (display === \"updateUserInfo\") {\n            displayPage =\n                <div>\n                    <UpdateUserInfo\n                        updateAccount={this.updateAccount}\n                        currentData={this.state.currentUserData}\n                    />\n                </div>\n        }\n\n        return (\n            <div>\n                <Row>\n\n                    <Col xs=\"2\" style={{border: '1px solid black'}}>\n                        <DateSection\n                            date={this.state.dateData}\n                        />\n\n                        <UserAccountInfoSection currentUserData={this.state.currentUserData}/>\n\n                        <button onClick={this.changeDisplay}>Update Account</button>\n\n                        <StatsSection\n                            awardData={this.state.awardData}\n                        />\n\n                    </Col>\n\n\n                    {this.state.displayType === \"homepage\" &&\n                    <Col xs=\"5\" style={{border: '1px solid red'}}>\n                        {displayPage}\n                    </Col>\n                    }\n\n                    {this.state.displayType === \"homepage\" &&\n                    <Col xs=\"5\" style={{border: '1px solid green'}}>\n                        {displayAwardData}\n                    </Col>\n                    }\n\n                    {this.state.displayType === \"updateUserInfo\" &&\n                    <Col xs=\"10\" style={{border: '1px solid blue'}}>\n                        {displayPage}\n                    </Col>\n                    }\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default UserHomePage;\n\n\n","/*\n * Description: Component to display Admin users\n */\n\nimport React, { Component } from 'react';\nimport { Table, Container } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass ViewAdmins extends Component {\n    constructor() {\n        super();\n        this.state = {\n            admin_id: '',\n            admins: [],\n            config: {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n                },\n            },\n        };\n    }\n\n    // When component loads, render table with admin users\n    componentDidMount() {\n        this.getAdmins();\n    }\n\n    // Get admin users from DB and set state\n    getAdmins = () => {\n        axios\n            .get('/admin', this.state.config)\n            .then(res => this.setState({\n                admin_id: localStorage.getItem('admin_id'),\n                admins: res.data,\n            }))\n            .catch(err => console.log(err));\n    };\n\n    // Delete selected admin from table\n    deleteAdmin = id => {\n        axios\n            .delete(`/admin/${id}`, this.state.config)\n            .then(this.getAdmins())\n            .catch(err => console.log(err));\n    };\n\n    // Render admin users into table\n    renderAdmins = ({id, admin_name}) => {\n        // Edit object, sets a state to pass as prop to Edit component\n        const edit = {\n            pathname: '/editAdmin',\n            state: {\n                id: `${id}`,\n                admin_name: `${admin_name}`,\n            },\n        };\n\n        if (this.state.admin_id === `${id}`) {\n            // Don't let logged in admin delete themselves\n            return (\n                <tr key={id}>\n                    <th scope=\"row\">{id}</th>\n                    <td>{admin_name}</td>\n                    <td>\n                        <Link to={edit}>\n                            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"/>\n                        </Link>\n                    </td>\n                    <td></td>\n                </tr>\n            )\n        } else {\n            // Admin users are mapped into the table so key is set to id\n            return (\n                <tr key={id}>\n                    <th scope=\"row\">{id}</th>\n                    <td>{admin_name}</td>\n                    <td>\n                        <Link to={edit}>\n                            <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"/>\n                        </Link>\n                    </td>\n                    <td>\n                        <a href=\"#0\" onClick={() => this.deleteAdmin(`${id}`)}>\n                            <i className=\"fas fa-trash-alt\" style={{color: 'red'}}/>\n                        </a>\n                    </td>\n                </tr>\n            );\n        }\n    };\n\n    render() {\n        const {admins} = this.state;\n        return (\n            <div>\n                <Container>\n                    <h1>Admins</h1>\n                    <Link to=\"/addAdmin\">Add New Admin</Link>\n                    <Table>\n                        <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Admin Name</th>\n                            <th>Edit</th>\n                            <th>Delete</th>\n                        </tr>\n                        </thead>\n                        <tbody>{admins.sort((a, b) => a.id - b.id).map(this.renderAdmins)}</tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default ViewAdmins;\n","import React, { Component } from 'react';\nimport { Bar, Doughnut, HorizontalBar} from 'react-chartjs-2';\nimport { Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      option: '',\n      grantedAwards: [],\n      grantedMostWeek: [],\n      grantedMostMonth: [],\n      withMostAwards: [],\n      mostWeekAwards: [],\n      mostMonthAwards: [],\n      totalUser: 0,\n      totalAdmin: 0,\n      totalEmpWk: 0,\n      totalEmpMt: 0,\n      load: false,\n    };\n  }\n\n  componentDidMount() {\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    axios\n      .get('/bi/report', config)\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          totalUser: res.data.totalUser,\n          totalAdmin: res.data.totalAdmin,\n          totalEmpWk: res.data.totalEmpWeek,\n          totalEmpMt: res.data.totalEmpMonth,\n          grantedAwards: res.data.userGrantedMostAwards.total,\n          grantedMostWeek: res.data.userGrantedMostAwards.week,\n          grantedMostMonth: res.data.userGrantedMostAwards.month,\n          withMostAwards: res.data.userWithMostAwards.total,\n          mostWeekAwards: res.data.userWithMostAwards.week,\n          mostMonthAwards: res.data.userWithMostAwards.month,\n        });\n      })\n      .catch(err => console.log(err));\n  }\n\n  // Total number of awards created by users\n  totalGrantedAwardsReport = () => {\n    const labels = [];\n    const dataset = [];\n    const bgColor = [];\n    for (let i = 0; i < this.state.grantedAwards.length; i++) {\n      labels.push(this.state.grantedAwards[i][0]);\n      dataset.push(this.state.grantedAwards[i][2]);\n      bgColor.push(this.getRandomColor());\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          data: dataset,\n          backgroundColor: bgColor,\n          hoverBackgroundColor: bgColor,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Most Awards Granted Report</h2>\n        <Doughnut data={data} />\n      </div>\n    );\n  };\n\n  // Total number of Awards won\n  totalAwardsWonReport = () => {\n    const labels = [];\n    const dataset = [];\n    for (let i = 0; i < this.state.withMostAwards.length; i++) {\n      labels.push(this.state.withMostAwards[i][0]);\n      dataset.push(this.state.withMostAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Awards Won',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: dataset,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Most Awards Won Report</h2>\n        <Bar\n          data={data}\n          height={100}\n          options={{\n            scales: {\n              yAxes: [\n                {\n                  display: true,\n                  ticks: {\n                    beginAtZero: true,\n                    suggestedMax: 10,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    );\n  };\n\n  // Report for Emp of the Week awards created by users\n  weeklyAwardsGranted = () => {\n    const labels = [];\n    const granted = [];\n    const bgColor = [];\n    for (let i = 0; i < this.state.grantedMostWeek.length; i++) {\n      labels.push(this.state.grantedMostWeek[i][0]);\n      granted.push(this.state.grantedMostWeek[i][2]);\n      bgColor.push(this.getRandomColor());\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          data: granted,\n          backgroundColor: bgColor,\n          hoverBackgroundColor: bgColor,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Employee of the Week (Granted)</h2>\n        <Doughnut data={data} />\n      </div>\n    );\n  };\n\n  // Report for Emp of the Week awards won by users\n  weeklyAwardsReceived = () => {\n    const labels = [];\n    const received = [];\n    for (let i = 0; i < this.state.mostWeekAwards.length; i++) {\n      labels.push(this.state.mostWeekAwards[i][0]);\n      received.push(this.state.mostWeekAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Week Awards Received',\n          backgroundColor: 'rgba(83,51,237,0.2)',\n          borderColor: 'rgba(83,51,237,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(83,51,237,0.4)',\n          hoverBorderColor: 'rgba(83,51,237,1)',\n          data: received,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Employee of the Week Awards (Received)</h2>\n        <HorizontalBar\n          data={data}\n          options={{\n            scales: {\n              xAxes: [\n                {\n                  display: true,\n                  ticks: {\n                    beginAtZero: true,\n                    suggestedMax: 10,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    );\n  };\n\n  // Report for Emp of the Month Created by Users\n  monthlyAwardsGranted = () => {\n    const labels = [];\n    const granted = [];\n    const bgColor = [];\n    for (let i = 0; i < this.state.grantedMostMonth.length; i++) {\n      labels.push(this.state.grantedMostMonth[i][0]);\n      granted.push(this.state.grantedMostMonth[i][2]);\n      bgColor.push(this.getRandomColor());\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          data: granted,\n          backgroundColor: bgColor,\n          hoverBackgroundColor: bgColor,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Employee of the Month (Granted)</h2>\n        <Doughnut data={data} />\n      </div>\n    );\n  };\n\n  // Report for Emp of Month Awards received by users\n  monthlyAwardsReceived = () => {\n    const labels = [];\n    const received = [];\n    for (let i = 0; i < this.state.mostMonthAwards.length; i++) {\n      labels.push(this.state.mostMonthAwards[i][0]);\n      received.push(this.state.mostMonthAwards[i][2]);\n    }\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: 'Emp of the Month Awards Received',\n          backgroundColor: 'rgba(249,105,14,0.2)',\n          borderColor: 'rgba(249,105,14,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(249,105,14,0.4)',\n          hoverBorderColor: 'rgba(249,105,14,1)',\n          data: received,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <h2>Employee of the Month Awards (Received)</h2>\n        <p>Total: {}</p>\n        <Bar\n          data={data}\n          height={100}\n          options={{\n            scales: {\n              yAxes: [\n                {\n                  display: true,\n                  ticks: {\n                    beginAtZero: true,\n                    suggestedMax: 10,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    );\n  };\n\n  // Report for general statistics\n  generalStats = () => {\n    return (\n      <div>\n        Total Users: {this.state.totalUser} <br/>\n        Total Admins: {this.state.totalAdmin} <br/>\n        Total Award Winners: {this.state.withMostAwards.length} <br/>\n        Total Employee of the Week Winners: {this.state.mostWeekAwards.length} <br/>\n        Total Employee of the Month Winners: {this.state.mostMonthAwards.length}\n      </div>\n    )\n  };\n\n  // Displays chosen report\n  RunReport = () => {\n    if (this.state.option === '1') {\n      return this.totalGrantedAwardsReport();\n    } else if (this.state.option === '2') {\n      return this.totalAwardsWonReport();\n    } else if (this.state.option === '3') {\n      return this.weeklyAwardsGranted();\n    } else if (this.state.option === '4') {\n      return this.weeklyAwardsReceived();\n    } else if (this.state.option === '5') {\n      return this.monthlyAwardsGranted();\n    } else if (this.state.option === '6') {\n      return this.monthlyAwardsReceived();\n    } else if(this.state.option === '7') {\n      return this.generalStats();\n    } else {\n      return <div>No reports</div>;\n    }\n  };\n\n  // On select input change handler\n  onChange = e => {\n    this.setState({ option: e.target.value });\n  };\n\n  loading = () => {\n    return <div>Loading...</div>;\n  };\n\n  // Returns a random color in hex\n  getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  };\n\n  render() {\n    return (\n      <div>\n        <Form>\n          <FormGroup>\n            <Label>Select Report</Label>\n            <Input\n              type=\"select\"\n              name=\"select\"\n              id=\"exampleSelect\"\n              onChange={this.onChange}\n            >\n              <option>-</option>\n              <option value=\"1\">Total Most Awards Granted</option>\n              <option value=\"2\">Total Most Awards Received</option>\n              <option value=\"3\">Employee of the Week (Granted)</option>\n              <option value=\"4\">Employee of the Week (Received)</option>\n              <option value=\"5\">Employee of the Month (Granted)</option>\n              <option value=\"6\">Employee of the Month (Received)</option>\n              <option value=\"7\">General Statistics</option>\n            </Input>\n          </FormGroup>\n        </Form>\n        <div>{this.RunReport()}</div>\n      </div>\n    );\n  }\n}\n\nexport default Reports;\n","/*\n * Description: Component for Admin dashboard\n */\n\nimport React, { Component } from 'react';\nimport { Nav, NavItem, NavLink, Col, Row } from 'reactstrap';\nimport ViewUsers from './adminViewUsers';\nimport ViewAdmins from './adminViewAdmins';\nimport Reports from './sideViewComponents/reports';\n\nclass AdminDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      buttonPressed: 0,\n    };\n  }\n\n  // Sets which component to display\n  handleClick = button => {\n    this.setState({ buttonPressed: button });\n  };\n\n  // Renders component based on button pressed\n  renderComponent = () => {\n    if (this.state.buttonPressed === 1) return <ViewUsers />;\n    else if (this.state.buttonPressed === 2) return <ViewAdmins />;\n    else if (this.state.buttonPressed === 3) return <Reports />;\n    else return (<h2>Admin Dashboard</h2>)\n  };\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs=\"2\" style={{ border: '1px solid black' }}>\n            <h3>Menu</h3>\n            <Nav vertical>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.handleClick(1)}>View Users</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.handleClick(2)}>View Admins</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"#\" onClick={() => this.handleClick(3)}>View Reports</NavLink>\n              </NavItem>\n            </Nav>\n          </Col>\n          <Col sm=\"12\" md={{ size: 6, offset: 1 }}>\n            {this.renderComponent()}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import React from 'react';\nimport SideSection from './sideSection';\nimport UserHomePage from './userHomePage';\nimport { Col, Row } from 'reactstrap';\n\nclass DesignAward extends UserHomePage {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col xs=\"2\" style={{ border: '1px solid black' }}>\n            <SideSection\n              userType={this.state.userType}\n              currentDate={this.state.currentDate}\n            />\n          </Col>\n\n          <Col xs=\"5\" style={{ border: '1px solid red' }}>\n            <h1>Design Area</h1>\n          </Col>\n\n          <Col xs=\"5\" style={{ border: '1px solid green' }}>\n            <h1>Employee of the </h1>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default DesignAward;\n","/*\n * Description: Admin component to add new Admins to DB\n */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  Label,\n  FormFeedback,\n  Alert,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass CreateAdmin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      admin_name: '',\n      password: '',\n      confirmPW: '',\n      validate: false,\n      visible: false,\n    };\n  }\n\n  // Sets state on input change\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // On submit function. Makes post request to endpoint.\n  handleSubmit = e => {\n    e.preventDefault();\n    // Get access token and create header for auth\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n    // Confirm password\n    const { password, confirmPW } = this.state;\n    if (password !== confirmPW) {\n      this.setState({ validate: true });\n    } else {\n      // Post request. Passing new admin info and auth token\n      axios\n        .post(\n          '/admin',\n          {\n            admin_name: this.state.admin_name,\n            password: this.state.password,\n          },\n          config\n        )\n        .then(res => {\n          this.setState({\n            visible: true,\n            admin_name: '',\n            password: '',\n            confirmPW: '',\n            validate: false\n          });\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  renderRedirect = () => {\n    this.props.history.push('/adminDash');\n  }\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Alert color=\"success\" isOpen={this.state.visible}>\n            Admin has been created!\n            <button onClick={this.renderRedirect}>Return to Dashboard</button>\n          </Alert>\n          \n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <h2>Create New Admin</h2>\n          </Col>\n          <Form onSubmit={this.handleSubmit} method=\"POST\">\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Label>Username</Label>\n                <Input\n                  type=\"text\"\n                  name=\"admin_name\"\n                  id=\"admin_id\"\n                  value={this.state.admin_name}\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Label>Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"pw_id\"\n                  value={this.state.password}\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Label>Confirm Password</Label>\n                <Input\n                  invalid={this.state.validate}\n                  type=\"password\"\n                  name=\"confirmPW\"\n                  id=\"cpw_id\"\n                  value={this.state.confirmPW}\n                  onChange={this.onChange}\n                />\n                <FormFeedback invalid=\"true\">\n                  Password doesn't match!\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Button type=\"submit\">Create Admin</Button>\n            </Col>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default CreateAdmin;\n","/*\n * Description: Component for editing Admin users\n */\n\nimport React, { Component } from 'react';\nimport {\n  Container,\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  Col,\n  FormFeedback,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass EditAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      admin_name: '',\n      password: '',\n      confirmPW: '',\n      validate: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getAdmin();\n  }\n\n  // On form input change handler to set state\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // Get Admin that will be edited\n  getAdmin = () => {\n    this.setState({\n      id: this.props.location.state.id,\n      admin_name: this.props.location.state.admin_name,\n    });\n  };\n\n  // Save update to admin\n  saveEdit = e => {\n    let token = localStorage.getItem('access_token');\n    let config = {\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    e.preventDefault();\n    const { password, confirmPW, id } = this.state;\n    // PW validation\n    if (password !== confirmPW) {\n      this.setState({ validate: true });\n    } else {\n      // Patch request to API endpoint to update admin.\n      // Passes access token for auth.\n      axios\n        .patch(\n          `/admin/${id}`,\n          {\n            admin_name: this.state.admin_name,\n            password: this.state.password,\n          },\n          config\n        )\n        .then(res => {\n          console.log(res);\n          this.props.history.push('/adminDash');\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n            <h2>Edit Admin</h2>\n          </Col>\n          <Form onSubmit={this.saveEdit}>\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Input\n                  type=\"text\"\n                  name=\"admin_name\"\n                  id=\"admin_id\"\n                  value={this.state.admin_name}\n                  placeholder=\"Admin Name\"\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"pw_id\"\n                  value={this.state.password}\n                  placeholder=\"New Password\"\n                  onChange={this.onChange}\n                />\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <FormGroup>\n                <Input\n                  invalid={this.state.validate}\n                  type=\"password\"\n                  name=\"confirmPW\"\n                  id=\"cpw_id\"\n                  value={this.state.confirmPW}\n                  placeholder=\"Confirm Password\"\n                  onChange={this.onChange}\n                />\n                <FormFeedback invalid=\"true\">\n                  Password doesn't match!\n                </FormFeedback>\n              </FormGroup>\n            </Col>\n\n            <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n              <Button type=\"submit\">Save Admin</Button>\n            </Col>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default EditAdmin;\n","/*\n * Description: Admin component to add new users to DB\n */\n\nimport React, {Component} from 'react';\nimport {\n    Container,\n    Button,\n    Form,\n    FormGroup,\n    Input,\n    Col,\n    Label,\n    Alert,\n    FormFeedback\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass CreateUser extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user_name: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            confirmPW: '',\n            sig: '',\n            previewSig: '',\n            visible: false,\n            validate: false,\n        };\n    }\n\n    // Sets state for inputs of type=text\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    // Set state for user's signature\n    onImageChange = e => {\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => {\n            this.setState({\n                sig: file,\n                previewSig: reader.result\n            });\n        }\n        reader.readAsDataURL(file)\n        console.log(this.state.sig);\n    };\n\n    // On submit function. Puts user input together as FormData\n    // and make post request to API endpoint\n    handleSubmit = e => {\n        e.preventDefault();\n        const {password, confirmPW} = this.state;\n        if (password !== confirmPW) {\n            this.setState({validate: true});\n        } else {\n            const formData = new FormData();\n            formData.append('username', this.state.user_name);\n            formData.append('password', this.state.password);\n            formData.append('first_name', this.state.first_name);\n            formData.append('last_name', this.state.last_name);\n            formData.append('sig', this.state.sig);\n            let token = localStorage.getItem('access_token'); // need access token for auth\n            let config = {\n                headers: {Authorization: `Bearer ${token}`},\n            };\n            axios\n                .post('/user', formData, config)\n                .then(res => {\n                    console.log(res);\n                    // Clear state and display confirmation\n                    this.setState({\n                        user_name: '',\n                        password: '',\n                        confirmPW: '',\n                        first_name: '',\n                        last_name: '',\n                        sig: '',\n                        previewSig: '',\n                        visible: true,\n                        validate: false\n                    })\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    redirect = () => {\n        this.props.history.push('/adminDash');\n    }\n\n    render() {\n        let {previewSig} = this.state;\n        let $previewSig = null;\n        if (previewSig) {\n            $previewSig = (<img alt=\"previewSig\" src={previewSig} style={{height: '200px', width: '500px'}}/>)\n        } else {\n            $previewSig = (<div>Upload a signature</div>)\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Alert color=\"success\" isOpen={this.state.visible}>\n                        User has been created!\n                        <button onClick={this.redirect}>Return to Dashboard</button>\n                    </Alert>\n\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <h2>Create New User</h2>\n                    </Col>\n                    <Form onSubmit={this.handleSubmit} method=\"POST\">\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Email</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"user_name\"\n                                    id=\"user_id\"\n                                    value={this.state.user_name}\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>First Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"first_name\"\n                                    value={this.state.first_name}\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Last Name</Label>\n                                <Input\n                                    type=\"text\"\n                                    name=\"last_name\"\n                                    value={this.state.last_name}\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Password</Label>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"pw_id\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Confirm Password</Label>\n                                <Input\n                                    invalid={this.state.validate}\n                                    type=\"password\"\n                                    name=\"confirmPW\"\n                                    value={this.state.confirmPW}\n                                    onChange={this.onChange}\n                                />\n                                <FormFeedback invalid=\"true\">\n                                    Password doesn't match!\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Signature</Label>\n                                <Input type=\"file\" name=\"sig\" onChange={this.onImageChange}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            {$previewSig}\n                        </Col>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <Button type=\"submit\">Create User</Button>\n                        </Col>\n                    </Form>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default CreateUser;\n","/*\n * Description: Component for editing Users\n */\n\nimport React, {Component} from 'react';\nimport {\n    Container,\n    Button,\n    Form,\n    FormGroup,\n    Input,\n    Col,\n    FormFeedback,\n    Label,\n} from 'reactstrap';\nimport axios from 'axios';\n\nclass EditUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            user_name: '',\n            first_name: '',\n            last_name: '',\n            password: '',\n            confirmPW: '',\n            validate: false,\n            config: {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('access_token')}`,\n                },\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.getUser();\n    }\n\n    // On form input change handler to set state\n    onChange = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onImageChange = e => {\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => {\n            this.setState({\n                sig: file,\n                previewSig: reader.result,\n            });\n        };\n        reader.readAsDataURL(file);\n        console.log(this.state.sig);\n    };\n\n    // Get User that will be edited\n    getUser = () => {\n        this.setState({\n            id: this.props.location.state.id,\n            user_name: this.props.location.state.user_name,\n            first_name: this.props.location.state.first_name,\n            last_name: this.props.location.state.last_name,\n        });\n    };\n\n    // Save update\n    saveEdit = e => {\n        e.preventDefault();\n        const {password, confirmPW, id} = this.state;\n        // PW validation\n        if (password !== confirmPW) {\n            this.setState({validate: true});\n        } else {\n            // Patch request to API endpoint to update user.\n            // Passes access token for auth.\n            axios\n                .patch(\n                    `/user/${id}`,\n                    {\n                        // user_name: this.state.user_name,\n                        first_name: this.state.first_name,\n                        last_name: this.state.last_name,\n                        // password: this.state.password,\n                    },\n                    this.state.config\n                )\n                .then(res => {\n                    console.log(res);\n                    this.props.history.push('/adminDash');\n                })\n                .catch(err => console.log(err));\n        }\n    };\n\n    render() {\n        let {previewSig} = this.state;\n        let $previewSig = null;\n        if (previewSig) {\n            $previewSig = (\n                <img\n                    alt=\"previewSig\"\n                    src={previewSig}\n                    style={{height: '200px', width: '500px'}}\n                />\n            );\n        } else {\n            $previewSig = <div>Upload a signature</div>;\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                        <h2>Edit User</h2>\n                    </Col>\n                    <Form onSubmit={this.saveEdit}>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"user_name\"\n                                    id=\"user_id\"\n                                    value={this.state.user_name}\n                                    placeholder=\"New Email\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"first_name\"\n                                    value={this.state.first_name}\n                                    placeholder=\"First Name\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Input\n                                    type=\"text\"\n                                    name=\"last_name\"\n                                    value={this.state.last_name}\n                                    placeholder=\"Last Name\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Input\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"pw_id\"\n                                    value={this.state.password}\n                                    placeholder=\"New Password\"\n                                    onChange={this.onChange}\n                                />\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Input\n                                    invalid={this.state.validate}\n                                    type=\"password\"\n                                    name=\"confirmPW\"\n                                    id=\"cpw_id\"\n                                    value={this.state.confirmPW}\n                                    placeholder=\"Confirm Password\"\n                                    onChange={this.onChange}\n                                />\n                                <FormFeedback invalid=\"true\">\n                                    Password doesn't match!\n                                </FormFeedback>\n                            </FormGroup>\n                        </Col>\n\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <FormGroup>\n                                <Label>Signature</Label>\n                                <Input type=\"file\" name=\"sig\" onChange={this.onImageChange}/>\n                            </FormGroup>\n                        </Col>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            {$previewSig}\n                        </Col>\n                        <Col sm=\"12\" md={{size: 6, offset: 3}}>\n                            <Button type=\"submit\">Save User</Button>\n                        </Col>\n                    </Form>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default EditUser;\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport './App.css';\nimport UserLogin from './components/userLogin';\nimport Header from './components/header';\nimport AdminLogin from './components/adminLogin';\nimport ErrorPage from './components/error';\nimport HomePage from './components/home';\nimport ViewUsers from './components/adminViewUsers';\nimport UserHomePage from './components/userHomePage';\nimport UpdateUserInfo from './components/updateUserInfo';\nimport AdminDashboard from './components/adminDashboard';\nimport DesignAward from './components/designAward';\nimport CreateAdmin from './components/createAdmin';\nimport EditAdmin from './components/editAdmin';\nimport CreateUser from './components/createUser';\nimport EditUser from './components/editUser';\n\n// import { Provider } from \"react-redux\"\n\n// const userDataStore = createStore(allReducers);\n\nexport const history = createHistory();\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Header />\n          <Switch>\n            {/* Add routes here */}\n            <Route exact path=\"/\" component={HomePage} />\n            <Route path=\"/userLogin\" component={UserLogin} />\n            <Route path=\"/userHomePage\" component={UserHomePage} />\n            <Route exact path=\"/admin\" component={AdminLogin} />\n            <Route path=\"/adminDash\" component={AdminDashboard} />\n            <Route path=\"/addAdmin\" component={CreateAdmin} />\n            <Route path=\"/editAdmin\" component={EditAdmin} />\n            <Route path=\"/editUser\" component={EditUser} />\n            <Route path=\"/createUser\" component={CreateUser} />\n            <Route path=\"/adminViewUsers\" component={ViewUsers} />\n            <Route path=\"/updateUserInfo\" component={UpdateUserInfo} />\n            <Route path=\"/designAward\" component={DesignAward} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}